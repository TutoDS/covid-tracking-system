{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/change/change.component.ts","./src/app/auth/change/change.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/reset/reset.component.ts","./src/app/auth/reset/reset.component.html","./src/app/auth/session.service.ts","./src/app/components/charts/by-day/by-day.component.ts","./src/app/components/charts/by-day/by-day.component.html","./src/app/components/charts/by-gender/by-gender.component.ts","./src/app/components/charts/by-gender/by-gender.component.html","./src/app/components/charts/by-month/by-month.component.ts","./src/app/components/charts/by-month/by-month.component.html","./src/app/components/charts/by-status/by-status.component.ts","./src/app/components/charts/by-status/by-status.component.html","./src/app/components/charts/by-symptoms/by-symptoms.component.ts","./src/app/components/charts/by-symptoms/by-symptoms.component.html","./src/app/components/charts/pt-chart/pt-chart.component.ts","./src/app/components/charts/pt-chart/pt-chart.component.html","./src/app/components/charts/world-chart/world-chart.component.ts","./src/app/components/charts/world-chart/world-chart.component.html","./src/app/components/dialogs/covid-test/covid-test-create/covid-test-create.component.ts","./src/app/components/dialogs/covid-test/covid-test-create/covid-test-create.component.html","./src/app/components/dialogs/covid-test/covid-test-delete/covid-test-delete.component.ts","./src/app/components/dialogs/covid-test/covid-test-delete/covid-test-delete.component.html","./src/app/components/dialogs/covid-test/covid-test-edit/covid-test-edit.component.ts","./src/app/components/dialogs/covid-test/covid-test-edit/covid-test-edit.component.html","./src/app/components/dialogs/covid-test/covid-test-information/covid-test-information.component.ts","./src/app/components/dialogs/covid-test/covid-test-information/covid-test-information.component.html","./src/app/components/dialogs/data-by-email/data-by-email.component.ts","./src/app/components/dialogs/data-by-email/data-by-email.component.html","./src/app/components/dialogs/patients/patient-add/patient-add.component.ts","./src/app/components/dialogs/patients/patient-add/patient-add.component.html","./src/app/components/dialogs/patients/patient-delete/patient-delete.component.ts","./src/app/components/dialogs/patients/patient-delete/patient-delete.component.html","./src/app/components/dialogs/patients/patient-edit/patient-edit.component.ts","./src/app/components/dialogs/patients/patient-edit/patient-edit.component.html","./src/app/components/dialogs/patients/patient-info/patient-info.component.ts","./src/app/components/dialogs/patients/patient-info/patient-info.component.html","./src/app/components/dialogs/users/update-password/update-password.component.ts","./src/app/components/dialogs/users/update-password/update-password.component.html","./src/app/components/dialogs/users/user-add/user-add.component.ts","./src/app/components/dialogs/users/user-add/user-add.component.html","./src/app/components/dialogs/users/user-delete/user-delete.component.ts","./src/app/components/dialogs/users/user-delete/user-delete.component.html","./src/app/components/dialogs/users/user-edit/user-edit.component.ts","./src/app/components/dialogs/users/user-edit/user-edit.component.html","./src/app/components/dialogs/users/user-info/user-info.component.ts","./src/app/components/dialogs/users/user-info/user-info.component.html","./src/app/directives/can-use/can-use.directive.ts","./src/app/directives/role-enable/role-enable.directive.ts","./src/app/functions/ageToDate.ts","./src/app/functions/formatDate.ts","./src/app/functions/validateRoles.ts","./src/app/functions/validateScopes.ts","./src/app/guards/scope/scope.guard.ts","./src/app/interceptors/session-lost.interceptor.ts","./src/app/layout/auth/auth.component.ts","./src/app/layout/auth/auth.component.html","./src/app/layout/default/components/sidebar/sidebar.component.ts","./src/app/layout/default/components/sidebar/sidebar.component.html","./src/app/layout/default/components/topbar/topbar.component.ts","./src/app/layout/default/components/topbar/topbar.component.html","./src/app/layout/default/default.component.ts","./src/app/layout/default/default.component.html","./src/app/layout/landing-page/components/header/header.component.ts","./src/app/layout/landing-page/components/header/header.component.html","./src/app/layout/landing-page/landing-page.component.ts","./src/app/layout/landing-page/landing-page.component.html","./src/app/models/patient.model.ts","./src/app/models/user.model.ts","./src/app/pages/covid-test/covid-test.component.ts","./src/app/pages/covid-test/covid-test.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/patients/patients.component.ts","./src/app/pages/patients/patients.component.html","./src/app/pages/users/users.component.ts","./src/app/pages/users/users.component.html","./src/app/services/covid-api/covid-api.service.ts","./src/app/services/covid-test/covid-test.service.ts","./src/app/services/patients/patients.service.ts","./src/app/services/roles/roles.service.ts","./src/app/services/summary/summary.service.ts","./src/app/services/title/title.service.ts","./src/app/services/ui/ui.service.ts","./src/app/services/users/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChangeComponent } from './auth/change/change.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { ResetComponent } from './auth/reset/reset.component';\r\nimport { ScopeGuard } from './guards/scope/scope.guard';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { DefaultComponent } from './layout/default/default.component';\r\nimport { LandingPageComponent } from './layout/landing-page/landing-page.component';\r\nimport { CovidTestComponent } from './pages/covid-test/covid-test.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { PatientsComponent } from './pages/patients/patients.component';\r\nimport { UsersComponent } from './pages/users/users.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: LandingPageComponent,\r\n\t},\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: AuthComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: 'login',\r\n\t\t\t\tcomponent: LoginComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'reset-password',\r\n\t\t\t\tcomponent: ResetComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'change-password/:token',\r\n\t\t\t\tcomponent: ChangeComponent,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tpath: 'admin',\r\n\t\tcomponent: DefaultComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: DashboardComponent,\r\n\t\t\t\tcanActivate: [ScopeGuard],\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tscopes: ['--view-all'],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'patients',\r\n\t\t\t\tcomponent: PatientsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'covid-tests',\r\n\t\t\t\tcomponent: CovidTestComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users',\r\n\t\t\t\tcomponent: UsersComponent,\r\n\t\t\t\tcanActivate: [ScopeGuard],\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tscopes: ['--view-users'],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n\ttitle = 'COVID Tracking System';\r\n\r\n\tconstructor() {\r\n\t}\r\n}","<router-outlet></router-outlet>\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChangeComponent } from './auth/change/change.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { ResetComponent } from './auth/reset/reset.component';\r\nimport { ByDayComponent } from './components/charts/by-day/by-day.component';\r\nimport { ByGenderComponent } from './components/charts/by-gender/by-gender.component';\r\nimport { ByMonthComponent } from './components/charts/by-month/by-month.component';\r\nimport { ByStatusComponent } from './components/charts/by-status/by-status.component';\r\nimport { BySymptomsComponent } from './components/charts/by-symptoms/by-symptoms.component';\r\nimport { PtChartComponent } from './components/charts/pt-chart/pt-chart.component';\r\nimport { WorldChartComponent } from './components/charts/world-chart/world-chart.component';\r\nimport { CovidTestCreateComponent } from './components/dialogs/covid-test/covid-test-create/covid-test-create.component';\r\nimport { CovidTestDeleteComponent } from './components/dialogs/covid-test/covid-test-delete/covid-test-delete.component';\r\nimport { CovidTestEditComponent } from './components/dialogs/covid-test/covid-test-edit/covid-test-edit.component';\r\nimport { CovidTestInformationComponent } from './components/dialogs/covid-test/covid-test-information/covid-test-information.component';\r\nimport { DataByEmailComponent } from './components/dialogs/data-by-email/data-by-email.component';\r\nimport { PatientAddComponent } from './components/dialogs/patients/patient-add/patient-add.component';\r\nimport { PatientDeleteComponent } from './components/dialogs/patients/patient-delete/patient-delete.component';\r\nimport { PatientEditComponent } from './components/dialogs/patients/patient-edit/patient-edit.component';\r\nimport { PatientInfoComponent } from './components/dialogs/patients/patient-info/patient-info.component';\r\nimport { UpdatePasswordComponent } from './components/dialogs/users/update-password/update-password.component';\r\nimport { UserAddComponent } from './components/dialogs/users/user-add/user-add.component';\r\nimport { UserDeleteComponent } from './components/dialogs/users/user-delete/user-delete.component';\r\nimport { UserEditComponent } from './components/dialogs/users/user-edit/user-edit.component';\r\nimport { UserInfoComponent } from './components/dialogs/users/user-info/user-info.component';\r\nimport { CanUseDirective } from './directives/can-use/can-use.directive';\r\nimport { RoleEnableDirective } from './directives/role-enable/role-enable.directive';\r\nimport { ScopeGuard } from './guards/scope/scope.guard';\r\nimport { SessionLostInterceptor } from './interceptors/session-lost.interceptor';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { SidebarComponent } from './layout/default/components/sidebar/sidebar.component';\r\nimport { TopbarComponent } from './layout/default/components/topbar/topbar.component';\r\nimport { DefaultComponent } from './layout/default/default.component';\r\nimport { HeaderComponent } from './layout/landing-page/components/header/header.component';\r\nimport { LandingPageComponent } from './layout/landing-page/landing-page.component';\r\nimport { CovidTestComponent } from './pages/covid-test/covid-test.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { PatientsComponent } from './pages/patients/patients.component';\r\nimport { UsersComponent } from './pages/users/users.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tAuthComponent,\r\n\r\n\t\t// Landing Page\r\n\t\tLandingPageComponent,\r\n\t\tPtChartComponent,\r\n\t\tWorldChartComponent,\r\n\t\tHeaderComponent,\r\n\t\tDataByEmailComponent,\r\n\r\n\t\t// Admin Panel\r\n\t\tTopbarComponent,\r\n\t\tSidebarComponent,\r\n\t\tDefaultComponent,\r\n\t\tDashboardComponent,\r\n\t\tPatientsComponent,\r\n\t\tUsersComponent,\r\n\r\n\t\t// Dialogs\r\n\t\tUserEditComponent,\r\n\t\tUserDeleteComponent,\r\n\t\tUserInfoComponent,\r\n\t\tUserAddComponent,\r\n\t\tUpdatePasswordComponent,\r\n\t\tPatientDeleteComponent,\r\n\t\tPatientInfoComponent,\r\n\t\tPatientEditComponent,\r\n\t\tPatientAddComponent,\r\n\r\n\t\t// Auth\r\n\t\tLoginComponent,\r\n\t\tChangeComponent,\r\n\t\tResetComponent,\r\n\r\n\t\tPatientDeleteComponent,\r\n\t\tPatientInfoComponent,\r\n\t\tPatientEditComponent,\r\n\t\tPatientAddComponent,\r\n\t\tCanUseDirective,\r\n\t\tByStatusComponent,\r\n\t\tByDayComponent,\r\n\t\tByMonthComponent,\r\n\t\tBySymptomsComponent,\r\n\r\n\t\t// Directives\r\n\t\tCanUseDirective,\r\n\t\tRoleEnableDirective,\r\n\t\tPatientEditComponent,\r\n\t\tPatientAddComponent,\r\n\t\tCovidTestComponent,\r\n\t\tCovidTestCreateComponent,\r\n\t\tCovidTestDeleteComponent,\r\n\t\tCovidTestEditComponent,\r\n\t\tCovidTestInformationComponent,\r\n\t\tByGenderComponent\r\n\t],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserModule,\r\n\t\tMatIconModule,\r\n\t\tHttpClientModule,\r\n\t\tAppRoutingModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tChartsModule,\r\n\t\tMatInputModule,\r\n\t\tMatButtonModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatCardModule,\r\n\t\tMatMenuModule,\r\n\t\tMatGridListModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatTabsModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatListModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatDialogModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatDatepickerModule,\r\n\t\tDragDropModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatBadgeModule,\r\n\t\tMatBottomSheetModule,\r\n\t\tMatButtonToggleModule,\r\n\t\tMatChipsModule,\r\n\t\tMatStepperModule,\r\n\t\tMatDividerModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatRadioModule,\r\n\t\tMatRippleModule,\r\n\t\tMatSelectModule,\r\n\t\tMatSliderModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatSortModule,\r\n\t\tMatTableModule,\r\n\t\tMatTreeModule,\r\n\t\tScrollingModule,\r\n\t\tNg2SearchPipeModule\r\n\t],\r\n\tproviders: [\r\n\t\tScopeGuard,\r\n\t\t{\r\n\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\tuseClass: SessionLostInterceptor,\r\n\t\t\tmulti: true\r\n\t\t},\r\n\r\n\t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SessionService } from '../session.service';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n\tisErrorState(\r\n\t\tcontrol: FormControl | null,\r\n\t\tform: FormGroupDirective | NgForm | null\r\n\t): boolean {\r\n\t\tconst invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n\t\tconst invalidParent = !!(\r\n\t\t\tcontrol &&\r\n\t\t\tcontrol.parent &&\r\n\t\t\tcontrol.parent.invalid &&\r\n\t\t\tcontrol.parent.dirty\r\n\t\t);\r\n\r\n\t\treturn invalidCtrl || invalidParent;\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'app-change',\r\n\ttemplateUrl: './change.component.html',\r\n\tstyleUrls: ['./change.component.sass'],\r\n})\r\nexport class ChangeComponent implements OnInit {\r\n\tchangeForm: FormGroup;\r\n\r\n\tprivate token: string;\r\n\tmatcher = new MyErrorStateMatcher();\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate titleService: TitleService,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.titleService.setPageTitle(\"Change Password\")\r\n\r\n\t\tthis.changeForm = this.formBuilder.group(\r\n\t\t\t{\r\n\t\t\t\tnewPassword: ['', [Validators.required]],\r\n\t\t\t\tconfirmPassword: [''],\r\n\t\t\t},\r\n\t\t\t{ validator: this.checkPasswords }\r\n\t\t);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.token = this.activatedRoute.snapshot.paramMap.get('token');\r\n\t}\r\n\r\n\tcheckPasswords(group: FormGroup) {\r\n\t\t// here we have the 'passwords' group\r\n\t\tlet pass = group.controls.newPassword.value;\r\n\t\tlet confirmPass = group.controls.confirmPassword.value;\r\n\r\n\t\treturn pass === confirmPass ? null : { notSame: true };\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget changeFormControl() {\r\n\t\treturn this.changeForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.changeForm.valid) {\r\n\t\t\tthis.session\r\n\t\t\t\t.change(\r\n\t\t\t\t\tthis.changeForm.get('newPassword').value,\r\n\t\t\t\t\tthis.changeForm.get('confirmPassword').value,\r\n\t\t\t\t\tthis.token\r\n\t\t\t\t)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar('Password changed with success');\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\r\n\t\t\t\t\t\tlet errorMessage = error.error.message || \"Token expired. Please send a new request.\"\r\n\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(errorMessage);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields and try again.\")\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-card-title>Change Password</mat-card-title>\r\n<form [formGroup]=\"changeForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-form-field>\r\n\t\t<mat-label>New Password</mat-label>\r\n\t\t<input matInput placeholder=\"Password\" type=\"password\" formControlName=\"newPassword\" name=\"newPassword\">\r\n\t\t<mat-error [hidden]=\"(changeFormControl.newPassword.touched) && changeFormControl.newPassword.errors?.required\">\r\n\t\t\tNew Password is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>lock</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Confirm Password</mat-label>\r\n\t\t<input matInput placeholder=\"Password\" type=\"password\" formControlName=\"confirmPassword\" name=\"confirmPassword\"\r\n\t\t\t[errorStateMatcher]=\"matcher\">\r\n\t\t<mat-error [hidden]=\"changeForm.hasError('notSame')\">\r\n\t\t\tPasswords do not match\r\n\t\t</mat-error>\r\n\t\t<mat-error\r\n\t\t\t[hidden]=\"(changeFormControl.confirmPassword.touched) && changeFormControl.confirmPassword.errors?.required\">\r\n\t\t\tConfirm Password is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>lock</mat-icon>\r\n\t</mat-form-field>\r\n\t<button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!changeForm.valid\" class=\"change-button\">\r\n\t\tChange\r\n\t</button>\r\n</form>\r\n<div class=\"text-right mt-20px\">\r\n\t<a routerLink=\"/login\" mat-button color=\"primary\">\r\n\t\tLogin\r\n\t\t<mat-icon>keyboard_arrow_right</mat-icon>\r\n\t</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.sass'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\tloginForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tpublic router: Router,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate fBuild: FormBuilder,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle(\"Sing In\")\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tconst me = this.session.me()\r\n\r\n\t\tif (me) {\r\n\t\t\tthis.router.navigateByUrl('/admin')\r\n\t\t}\r\n\r\n\t\tthis.loginForm = new FormGroup({\r\n\t\t\t'email': new FormControl('', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]),\r\n\t\t\t'password': new FormControl('', [Validators.required])\r\n\t\t});\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget loginFormControl() {\r\n\t\treturn this.loginForm.controls;\r\n\t}\r\n\r\n\t// When submit form\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.loginForm.valid) {\r\n\r\n\t\t\tconst user = {\r\n\t\t\t\temail: this.loginForm.get('email').value,\r\n\t\t\t\tpassword: this.loginForm.get('password').value\r\n\t\t\t};\r\n\r\n\t\t\t// Send POST Request to API\r\n\t\t\tthis.session\r\n\t\t\t\t.login(user.email, user.password)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t(user) => {\r\n\t\t\t\t\t\tthis.router.navigateByUrl('/admin')\r\n\t\t\t\t\t\tthis.uiService.showSnackBar('Login with success!')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(((typeof error.error.message != \"object\") ? error.error.message : \"Sorry but have error on login. Try again later please.\") || \"Sorry but have error on login. Try again later please.\")\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar('Please validate all fields on form.')\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-card-title>Sign In</mat-card-title>\r\n<form [formGroup]=\"loginForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-form-field>\r\n\t\t<mat-label>Your Email</mat-label>\r\n\t\t<input matInput placeholder=\"Email\" name=\"email\" formControlName=\"email\">\r\n\t\t<mat-error\r\n\t\t\t[hidden]=\"(loginFormControl.email.touched) && (loginFormControl.email.errors?.email ||  loginFormControl.email.errors?.pattern)\">\r\n\t\t\tInvalid email.\r\n\t\t</mat-error>\r\n\t\t<mat-error [hidden]=\"(loginFormControl.email.touched) && loginFormControl.email.errors?.required\">\r\n\t\t\tEmail is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Your Password</mat-label>\r\n\t\t<input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\" name=\"password\">\r\n\t\t<mat-error [hidden]=\"(loginFormControl.password.touched) && loginFormControl.password.errors?.required\">\r\n\t\t\tPassword is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>lock</mat-icon>\r\n\t</mat-form-field>\r\n\t<button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"login-button\">\r\n\t\tSign In\r\n\t</button>\r\n</form>\r\n<div class=\"text-right mt-20px\">\r\n\t<a routerLink=\"/reset-password\" mat-button color=\"primary\">\r\n\t\tReset Password\r\n\t\t<mat-icon>keyboard_arrow_right</mat-icon>\r\n\t</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n\tselector: 'app-reset',\r\n\ttemplateUrl: './reset.component.html',\r\n\tstyleUrls: ['./reset.component.sass']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\tresetForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tprivate titleService: TitleService,\r\n\t\tprivate uiService: UiService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('Reset Password')\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.resetForm = new FormGroup({\r\n\t\t\t'email': new FormControl('', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t])\r\n\t\t})\r\n\t}\r\n\r\n\tget resetFormControl() {\r\n\t\treturn this.resetForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\t//Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.resetForm.valid) {\r\n\t\t\tconst email = this.resetForm.get('email').value;\r\n\r\n\t\t\tthis.session\r\n\t\t\t\t.reset(email)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(`An email was sent to ${email} with sucess!`)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(error.error.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Upps! Have any error, please validate all fields on form.\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n","<mat-card-title>Reset Password</mat-card-title>\r\n\r\n<form [formGroup]=\"resetForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-form-field>\r\n\t\t<mat-label>Your Email</mat-label>\r\n\t\t<input matInput placeholder=\"Email\" name=\"email\" formControlName=\"email\">\r\n\t\t<mat-error\r\n\t\t\t[hidden]=\"(resetFormControl.email.touched) && (resetFormControl.email.errors?.email ||  resetFormControl.email.errors?.pattern)\">\r\n\t\t\tInvalid email.\r\n\t\t</mat-error>\r\n\r\n\t\t<mat-error *ngIf=\"(resetFormControl.email.touched) && resetFormControl.email.errors?.required\">\r\n\t\t\tEmail is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>email</mat-icon>\r\n\r\n\t</mat-form-field>\r\n\t<button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!resetForm.valid\" class=\"reset-button\">\r\n\t\tReset Password\r\n\t</button>\r\n</form>\r\n<div class=\"text-right mt-20px\">\r\n\t<a routerLink=\"/login\" mat-button color=\"primary\">\r\n\t\tLogin\r\n\t\t<mat-icon>keyboard_arrow_right</mat-icon>\r\n\t</a>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from \"rxjs/operators\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\n\r\nexport class SessionService {\r\n\r\n\texpired: boolean\r\n\tprivate session: any = localStorage.getItem(\"user\")\r\n\t\t? JSON.parse(localStorage.getItem(\"user\"))\r\n\t\t: null\r\n\r\n\r\n\tconstructor(public http: HttpClient) {\r\n\t}\r\n\r\n\tlogin(email: String, password: String) {\r\n\t\tconst request = this.http\r\n\t\t\t.post(\r\n\t\t\t\t`${API_URL}/login`,\r\n\t\t\t\t{\r\n\t\t\t\t\temail, password\r\n\t\t\t\t},\r\n\t\t\t\thttpOptions\r\n\t\t\t)\r\n\t\t\t.pipe(share());\r\n\r\n\t\trequest.subscribe(\r\n\t\t\t(user) => {\r\n\t\t\t\tthis.session = user\r\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(user))\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n\tme() {\r\n\t\treturn this.session\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.expired = false;\r\n\t\tthis.session = null\r\n\t\tlocalStorage.removeItem('user')\r\n\r\n\t\tconst request = this.http.post(`${API_URL}/logout`, httpOptions).subscribe()\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n\treset(email: string) {\r\n\r\n\r\n\t\tconst request = this.http\r\n\t\t\t.post(`${API_URL}/reset-password`, { email }, httpOptions)\r\n\t\t\t.pipe(share());\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n\tclearSession() {\r\n\t\tthis.expired = true;\r\n\t\tthis.session = null\r\n\t\tlocalStorage.removeItem('user')\r\n\t}\r\n\r\n\tchange(newPassword: string, confirmPassword: string, token: string): Observable<any> {\r\n\r\n\t\tconst request = this.http\r\n\t\t\t.post(`${API_URL}/change-password/${token}`, {\r\n\t\t\t\tnewPassword, confirmPassword\r\n\t\t\t}, httpOptions)\r\n\t\t\t.pipe(share());\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n@Component({\r\n\tselector: 'app-by-day',\r\n\ttemplateUrl: './by-day.component.html',\r\n\tstyleUrls: ['./by-day.component.sass']\r\n})\r\nexport class ByDayComponent implements OnInit {\r\n\r\n\tchartData: ChartDataSets[];\r\n\tchartLabels: number[] = [];\r\n\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\ttooltips: {\r\n\t\t\tenabled: true,\r\n\t\t\tmode: 'single',\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function (tooltipItem, data) {\r\n\t\t\t\t\treturn `Day ${data.labels[tooltipItem[0].index]}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tdisplay: false,\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\tpublic chartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: '#56a0d3',\r\n\t\t\tborderColor: '#56a0d3',\r\n\t\t\tpointBackgroundColor: '#56a0d3',\r\n\t\t\tpointBorderColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBackgroundColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBorderColor: '#56a0d3'\r\n\t\t},\r\n\t];\r\n\r\n\tpublic chartLegend = true;\r\n\tpublic chartType = 'line';\r\n\tpublic chart = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tdaysInMonth(month, year) {\r\n\t\treturn new Date(year, month, 0).getDate();\r\n\t}\r\n\r\n\r\n\tngOnInit(): void {\r\n\t\tconst actualMonth = (new Date().getMonth() + 1);\r\n\t\tconst actualYear = (new Date()).getFullYear();\r\n\t\tconst numberOfDays = this.daysInMonth(actualMonth, actualYear);\r\n\t\tconst numberOfTests: number[] = [numberOfDays];\r\n\r\n\t\tthis.summaryService.getByDay().subscribe(data => {\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tfor (var i = 0; i < numberOfDays; i++) {\r\n\t\t\t\t\tnumberOfTests[i] = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.map((element) => {\r\n\t\t\t\t\tif ((new Date(element.date).getMonth() + 1) == actualMonth && (new Date(element.date)).getFullYear() == actualYear) {\r\n\t\t\t\t\t\tnumberOfTests[(new Date(element.date).getDate()) - 1] += element.numberOfTests\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.chartData = [\r\n\t\t\t\t\t{ data: numberOfTests, label: 'Number of COVID Tests' },\r\n\t\t\t\t];\r\n\r\n\t\t\t\tfor (i = 1; i <= numberOfDays; i++) {\r\n\t\t\t\t\tthis.chartLabels.push(i)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.chart = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chart = false;\r\n\t\t\t}\r\n\r\n\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","<div>\r\n\t<canvas *ngIf=\"chart\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [options]=\"chartOptions\"\r\n\t\t[colors]=\"chartColors\" [legend]=\"chartLegend\" [chartType]=\"chartType\" height=\"100px\">\r\n\t</canvas>\r\n\t<h3 *ngIf=\"!chart\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-by-gender',\r\n\ttemplateUrl: './by-gender.component.html',\r\n\tstyleUrls: ['./by-gender.component.sass']\r\n})\r\nexport class ByGenderComponent implements OnInit {\r\n\t// Chart Options\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: false, //this will remove only the label\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\t// Chart Labels\r\n\tpublic chartLabels: Label[] = [\"Gender\"];\r\n\r\n\t// Chart Type\r\n\tpublic chartType: ChartType = \"bar\";\r\n\r\n\t// Chart Colors\r\n\tpublic chartColors = [{\r\n\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\tpointBorderColor: '#fff',\r\n\t\tpointHoverBackgroundColor: '#fff',\r\n\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t}]\r\n\r\n\t// Chart Data\r\n\tpublic chartData;\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.summaryService.getByGender().subscribe((data) => {\r\n\t\t\tif (data.length > 0) {\r\n\r\n\t\t\t\tconst backgroundColor = [\r\n\t\t\t\t\t'#56a0d3',\r\n\t\t\t\t\t'#ff9933',\r\n\t\t\t\t\t'#0a8ea0',\r\n\t\t\t\t\t'#3369e7',\r\n\t\t\t\t\t'#146eb4',\r\n\t\t\t\t\t'#49c0b6',\r\n\t\t\t\t\t'#ee6123',\r\n\t\t\t\t\t'#075aaa',\r\n\t\t\t\t];\r\n\t\t\t\tlet dataArray = [];\r\n\t\t\t\tdata.map((element, index) => {\r\n\r\n\t\t\t\t\telement.gender =\r\n\t\t\t\t\t\telement.gender.charAt(0).toUpperCase() + element.gender.slice(1);\r\n\r\n\t\t\t\t\tdataArray.push({\r\n\t\t\t\t\t\tlabel: element.gender,\r\n\t\t\t\t\t\tdata: [element.count],\r\n\t\t\t\t\t\tbackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t\thoverBackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = dataArray;\r\n\t\t\t\tthis.chartReady = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chartReady = false\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n}","<div>\r\n\t<canvas *ngIf=\"chartReady\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [chartType]=\"chartType\"\r\n\t\t[options]=\"chartOptions\" [colors]=\"chartColors\">\r\n\t</canvas>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n@Component({\r\n\tselector: 'app-by-month',\r\n\ttemplateUrl: './by-month.component.html',\r\n\tstyleUrls: ['./by-month.component.sass']\r\n})\r\nexport class ByMonthComponent implements OnInit {\r\n\r\n\tpublic chartData: ChartDataSets[];\r\n\tpublic chartLabels: Label[] = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tdisplay: false,\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\tpublic chartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: '#56a0d3',\r\n\t\t\tborderColor: '#56a0d3',\r\n\t\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\t\tpointBorderColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBackgroundColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t\t},\r\n\t];\r\n\r\n\tpublic chartLegend = true;\r\n\tpublic chartType = 'line';\r\n\tpublic chart = false;\r\n\r\n\r\n\tconstructor(private summaryService: SummaryService) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tconst actualYear = new Date().getFullYear()\r\n\t\tconst numberOfMonths = 12;\r\n\t\tconst numberOfTests: number[] = [numberOfMonths];\r\n\r\n\t\tthis.summaryService.getByDay().subscribe(data => {\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tfor (var i = 0; i < numberOfMonths; i++) {\r\n\t\t\t\t\tnumberOfTests[i] = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.map(element => {\r\n\t\t\t\t\tif ((new Date(element.date)).getFullYear() == actualYear) {\r\n\t\t\t\t\t\tnumberOfTests[new Date(element.date).getMonth()] += element.numberOfTests;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = [\r\n\t\t\t\t\t{ data: numberOfTests, label: 'Number of COVID Tests by Month' },\r\n\t\t\t\t];\r\n\r\n\t\t\t\tthis.chart = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chart = false;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\r\n}","<div>\r\n\t<canvas *ngIf=\"chart\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [options]=\"chartOptions\"\r\n\t\t[colors]=\"chartColors\" [legend]=\"chartLegend\" [chartType]=\"chartType\" height=\"100px\">\r\n\t</canvas>\r\n\t<h3 *ngIf=\"!chart\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-by-status',\r\n\ttemplateUrl: './by-status.component.html',\r\n\tstyleUrls: ['./by-status.component.sass']\r\n})\r\nexport class ByStatusComponent implements OnInit {\r\n\t// Chart Options\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: false, //this will remove only the label\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\t// Chart Labels\r\n\tpublic chartLabels: Label[] = [\"Status\"];\r\n\r\n\t// Chart Type\r\n\tpublic chartType: ChartType = \"bar\";\r\n\r\n\t// Chart Colors\r\n\tpublic chartColors = [{\r\n\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\tpointBorderColor: '#fff',\r\n\t\tpointHoverBackgroundColor: '#fff',\r\n\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t}]\r\n\r\n\t// Chart Data\r\n\tpublic chartData;\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.summaryService.getByStatus().subscribe((data) => {\r\n\t\t\tif (data.length > 0) {\r\n\r\n\t\t\t\tconst backgroundColor = [\r\n\t\t\t\t\t'#56a0d3',\r\n\t\t\t\t\t'#ff9933',\r\n\t\t\t\t\t'#0a8ea0',\r\n\t\t\t\t\t'#3369e7',\r\n\t\t\t\t\t'#146eb4',\r\n\t\t\t\t\t'#49c0b6',\r\n\t\t\t\t\t'#ee6123',\r\n\t\t\t\t\t'#075aaa',\r\n\t\t\t\t];\r\n\t\t\t\tlet dataArray = [];\r\n\t\t\t\tdata.map((element, index) => {\r\n\r\n\t\t\t\t\telement.status =\r\n\t\t\t\t\t\telement.status.charAt(0).toUpperCase() + element.status.slice(1);\r\n\r\n\t\t\t\t\tdataArray.push({\r\n\t\t\t\t\t\tlabel: element.status,\r\n\t\t\t\t\t\tdata: [element.count],\r\n\t\t\t\t\t\tbackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t\thoverBackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = dataArray;\r\n\t\t\t\tthis.chartReady = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chartReady = false\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","<div>\r\n\t<canvas *ngIf=\"chartReady\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [chartType]=\"chartType\"\r\n\t\t[options]=\"chartOptions\" [colors]=\"chartColors\">\r\n\t</canvas>\r\n\t<h3 *ngIf=\"!chartReady\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n@Component({\r\n\tselector: 'app-by-symptoms',\r\n\ttemplateUrl: './by-symptoms.component.html',\r\n\tstyleUrls: ['./by-symptoms.component.sass'],\r\n})\r\nexport class BySymptomsComponent implements OnInit {\r\n\t// Chart Options\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: false, //this will remove only the label\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\t// Chart Labels\r\n\tpublic chartLabels: Label[] = ['Symptom'];\r\n\r\n\t// Chart Type\r\n\tpublic chartType: ChartType = 'bar';\r\n\r\n\t// Chart Colors\r\n\tpublic chartColors = [{\r\n\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\tpointBorderColor: '#fff',\r\n\t\tpointHoverBackgroundColor: '#fff',\r\n\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t}]\r\n\r\n\t// Chart Data\r\n\tpublic chartData;\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.summaryService.getBySymptoms().subscribe((data) => {\r\n\t\t\tif (data.length > 0) {\r\n\r\n\t\t\t\tconst backgroundColor = [\r\n\t\t\t\t\t'#56a0d3',\r\n\t\t\t\t\t'#0a8ea0',\r\n\t\t\t\t\t'#3369e7',\r\n\t\t\t\t\t'#146eb4',\r\n\t\t\t\t\t'#49c0b6',\r\n\t\t\t\t\t'#ff9933',\r\n\t\t\t\t\t'#ee6123',\r\n\t\t\t\t\t'#075aaa',\r\n\t\t\t\t];\r\n\t\t\t\tlet dataArray = [];\r\n\r\n\t\t\t\tdata.map((element, index) => {\r\n\t\t\t\t\telement.symptom =\r\n\t\t\t\t\t\telement.symptom.charAt(0).toUpperCase() + element.symptom.slice(1);\r\n\t\t\t\t\tdataArray.push({\r\n\t\t\t\t\t\tlabel: element.symptom,\r\n\t\t\t\t\t\tdata: [element.count],\r\n\t\t\t\t\t\tbackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t\thoverBackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = dataArray;\r\n\t\t\t\tthis.chartReady = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chartReady = false\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<div>\r\n\t<canvas *ngIf=\"chartReady\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [chartType]=\"chartType\"\r\n\t\t[options]=\"chartOptions\" [colors]=\"chartColors\">\r\n\t</canvas>\r\n\r\n\t<h3 *ngIf=\"!chartReady\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CovidApiService } from '../../../services/covid-api/covid-api.service';\r\n\r\n@Component({\r\n\tselector: 'app-pt-chart',\r\n\ttemplateUrl: './pt-chart.component.html',\r\n\tstyleUrls: ['./pt-chart.component.sass'],\r\n})\r\nexport class PtChartComponent implements OnInit {\r\n\t// Status of chart\r\n\tpublic chartReady = false;\r\n\r\n\t// Labels\r\n\tpublic pieChartLabels = ['Total Recovered', 'Total Death', 'Total Confirmed'];\r\n\r\n\t// Chart Type\r\n\tpublic pieChartType = 'pie';\r\n\r\n\t// Data to chart\r\n\tpublic pieChartData;\r\n\r\n\t// Options\r\n\tpublic pieChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: (window.matchMedia('(prefers-color-scheme: dark)').matches) ? \"white\" : \"black\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Last update\r\n\tpublic updatedAt;\r\n\r\n\t// Set colors\r\n\tpublic pieChartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: ['#0099cc', '#ff9933', '#146eb4'],\r\n\t\t},\r\n\t];\r\n\r\n\tconstructor(private covidApiService: CovidApiService) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.covidApiService.getSummary().subscribe((data) => {\r\n\t\t\tconst portugalSummary = this.covidApiService.getPortugalSummary(data);\r\n\t\t\tthis.pieChartData = [\r\n\t\t\t\tportugalSummary.TotalRecovered,\r\n\t\t\t\tportugalSummary.TotalDeaths,\r\n\t\t\t\tportugalSummary.TotalConfirmed\r\n\t\t\t];\r\n\t\t\tthis.updatedAt = new Date(portugalSummary.Date).toLocaleString();\r\n\t\t\tthis.chartReady = true;\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-card class=\"chart-card\">\r\n\t<mat-card-header>\r\n\t\t<mat-card-title>Portugal</mat-card-title>\r\n\t\t<mat-card-subtitle>Updated at: {{ updatedAt }}</mat-card-subtitle>\r\n\t</mat-card-header>\r\n\t<mat-card-content>\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"chart\" *ngIf=\"chartReady\">\r\n\t\t\t\t\t<canvas baseChart [data]=\"pieChartData\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\"\r\n\t\t\t\t\t\t[colors]=\"pieChartColors\" [options]=\"pieChartOptions\">\r\n\t\t\t\t\t</canvas>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CovidApiService } from '../../../services/covid-api/covid-api.service';\r\n\r\n@Component({\r\n\tselector: 'app-world-chart',\r\n\ttemplateUrl: './world-chart.component.html',\r\n\tstyleUrls: ['./world-chart.component.sass']\r\n})\r\nexport class WorldChartComponent implements OnInit {\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\t// Chart Labels\r\n\tpublic pieChartLabels = ['Total Recovered', 'Total Death', 'Total Confirmed'];\r\n\r\n\t// Chart Type\r\n\tpublic pieChartType = 'pie';\r\n\r\n\t// Chart colors\r\n\tpublic pieChartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: ['#0099cc', '#ff9933', '#146eb4'],\r\n\t\t},\r\n\t];\r\n\r\n\t// Chart Data\r\n\tpublic pieChartData;\r\n\r\n\t// Chart options\r\n\tpublic pieChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: (window.matchMedia('(prefers-color-scheme: dark)').matches) ? \"white\" : \"black\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Last Update\r\n\tpublic updatedAt;\r\n\r\n\tconstructor(private covidApiService: CovidApiService) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.covidApiService.getSummary().subscribe((summary) => {\r\n\t\t\tthis.pieChartData = [\r\n\t\t\t\tsummary[0].Global.TotalRecovered,\r\n\t\t\t\tsummary[0].Global.TotalDeaths,\r\n\t\t\t\tsummary[0].Global.TotalConfirmed,\r\n\t\t\t];\r\n\t\t\tthis.updatedAt = new Date(summary[0].Date).toLocaleString();\r\n\t\t\tthis.chartReady = true;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n","<mat-card class=\"chart-card\">\r\n\t<mat-card-header>\r\n\t\t<mat-card-title>Rest of the World</mat-card-title>\r\n\t\t<mat-card-subtitle>Updated at: {{ updatedAt }}</mat-card-subtitle>\r\n\t</mat-card-header>\r\n\t<mat-card-content>\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"chart\" *ngIf=\"chartReady\">\r\n\t\t\t\t\t<canvas baseChart [data]=\"pieChartData\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\"\r\n\t\t\t\t\t\t[colors]=\"pieChartColors\" [options]=\"pieChartOptions\">\r\n\t\t\t\t\t</canvas>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</mat-card-content>\r\n</mat-card>\r\n","import { UiService } from '../../../../services/ui/ui.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CovidTest } from '../../../../models/covid-test.model';\r\nimport { CovidTestService } from '../../../../services/covid-test/covid-test.service';\r\nimport { PatientsService } from '../../../../services/patients/patients.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'covid-test-create',\r\n\ttemplateUrl: './covid-test-create.component.html',\r\n\tstyleUrls: ['./covid-test-create.component.sass']\r\n})\r\nexport class CovidTestCreateComponent implements OnInit {\r\n\tpublic data: CovidTest;\r\n\tpublic covidTestForm: FormGroup;\r\n\tpublic patients: any[] = [];\r\n\tpublic patientsForm = new FormControl();\r\n\tpublic filteredOptions: Observable<any[]>;\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic covidTest: CovidTestService,\r\n\t\tpublic patientsService: PatientsService,\r\n\t\tpublic uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestCreateComponent>\r\n\t) { }\r\n\r\n\tfilterValues(value: string): any[] {\r\n\t\treturn this.patients.filter(option => option.name.toLowerCase().indexOf(value.toLowerCase()) === 0);\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget covidTestFormControl() {\r\n\t\treturn this.covidTestForm.controls;\r\n\t}\r\n\r\n\tdisplayFn(object?: any): string | undefined {\r\n\t\treturn object ? `${object.name} (${object.patientNumber})` : undefined;\r\n\t}\r\n\r\n\r\n\tonSubmit(evt) {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.covidTestForm.valid) {\r\n\r\n\t\t\tconst formDate = new Date(this.covidTestForm.get('scheduleDate').value);\r\n\r\n\t\t\tconst formData = {\r\n\t\t\t\tpatient: this.covidTestForm.get('patient').value.id,\r\n\t\t\t\tdate: new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`),\r\n\t\t\t\tnotes: this.covidTestForm.get('notes').value,\r\n\t\t\t};\r\n\r\n\t\t\tthis.covidTest.create(formData).subscribe((success) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: \"COVID Test created with success!\",\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tconst errorMessage = error.error.message\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: errorMessage,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.patientsService.getAll().subscribe((patients) => {\r\n\t\t\tpatients.map((patient) => {\r\n\t\t\t\tthis.patients.push({ name: patient.name, patientNumber: patient.patientNumber, id: patient._id });\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tthis.covidTestForm = this.formBuilder.group({\r\n\t\t\tpatient: ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\tscheduleDate: ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\tnotes: ['', []],\r\n\t\t})\r\n\r\n\t\tthis.filteredOptions = this.covidTestForm.get('patient').valueChanges.pipe(\r\n\t\t\tstartWith<string | any>(''),\r\n\t\t\tmap(val => (typeof val === 'string' ? val : val.name)),\r\n\t\t\tmap(name => (name ? this.filterValues(name) : this.patients.slice()))\r\n\t\t);\r\n\r\n\t}\r\n}\r\n","<h2 mat-dialog-title>Create</h2>\r\n\r\n<form [formGroup]=\"covidTestForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<input type=\"text\" matInput formControlName=\"patient\" placeholder=\"Patient Name (Patient Number)\"\r\n\t\t\t\t[matAutocomplete]=\"auto\">\r\n\t\t\t<mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}} <small>({{ option.patientNumber }})</small>\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-autocomplete>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(covidTestFormControl.patient.touched) && covidTestFormControl.patient.errors?.required\">\r\n\t\t\t\tPatient is required\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Schedule Date</mat-label>\r\n\t\t\t<input matInput [matDatepicker]=\"scheduleDate\" formControlName=\"scheduleDate\">\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"scheduleDate\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #scheduleDate></mat-datepicker>\r\n\t\t\t<mat-icon matPrefix>today</mat-icon>\r\n\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(covidTestFormControl.scheduleDate.touched) && covidTestFormControl.scheduleDate.errors?.required\">\r\n\t\t\t\tSchedule Date is required\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Notes</mat-label>\r\n\t\t\t<textarea matInput placeholder=\"Notes\" formControlName=\"notes\"></textarea>\r\n\t\t\t<mat-icon matPrefix>notes</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"primary\" [disabled]=\"!covidTestForm.valid\">Save</button>\r\n\t\t<button mat-button color=\"warn\" type=\"button\" (click)=\"onClose()\">Cancel</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CovidTestService } from '../../../../services/covid-test/covid-test.service';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test-delete',\r\n\ttemplateUrl: './covid-test-delete.component.html',\r\n\tstyleUrls: ['./covid-test-delete.component.sass']\r\n})\r\nexport class CovidTestDeleteComponent implements OnInit {\r\n\r\n\tpublic covidTest\r\n\r\n\tconstructor(\r\n\t\tpublic covidTestService: CovidTestService,\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestDeleteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data\r\n\t) {\r\n\t\tthis.covidTest = data\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tlet response: object = {}\r\n\r\n\t\tthis.covidTestService.getOneAndDelete(this.covidTest[\"_id\"]).subscribe(() => {\r\n\t\t\tresponse[\"message\"] = \"COVID Test deleted with success!\"\r\n\t\t\tresponse[\"status\"] = true\r\n\t\t}, (error) => {\r\n\t\t\tlet codeMessage = error.error.message\r\n\r\n\t\t\tresponse[\"message\"] = codeMessage\r\n\t\t\tresponse[\"status\"] = false\r\n\t\t})\r\n\r\n\t\tthis.dialogRef.close(response)\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<h2 class=\"accent-color\">\r\n\t\t<mat-icon >delete</mat-icon>\r\n\t\tYou want delete COVID Test?\r\n\t</h2>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n\t\t<mat-icon>check</mat-icon>\r\n\t\tYes\r\n\t</button>\r\n\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tNo\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CovidTest } from '../../../../models/covid-test.model';\r\nimport { CovidTestService } from '../../../../services/covid-test/covid-test.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test-edit',\r\n\ttemplateUrl: './covid-test-edit.component.html',\r\n\tstyleUrls: ['./covid-test-edit.component.sass']\r\n})\r\nexport class CovidTestEditComponent implements OnInit {\r\n\tcovidTest: CovidTest;\r\n\tcovidTestForm: FormGroup;\r\n\tfile: File = null\r\n\t// Default Status\r\n\tstatus: string[] = ['pending', 'in Progress', 'finished', 'waiting Result'];\r\n\tresults: string[] = ['positive', 'negative', 'inconclusive'];\r\n\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic covidTests: CovidTestService,\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestEditComponent>,\r\n\t\tprivate uiService: UiService,\r\n\t\t@Inject(MAT_DIALOG_DATA) data\r\n\t) {\r\n\t\tthis.covidTest = data;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.covidTestForm = this.formBuilder.group({\r\n\t\t\t'notes': [this.covidTest.notes, []],\r\n\t\t\t'scheduleDate': [new Date(this.covidTest.date), [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'status': [this.covidTest.status, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'result': [this.covidTest.result, []],\r\n\t\t\t'file': ['', []]\r\n\t\t});\r\n\t}\r\n\r\n\tonFileSelected(e) {\r\n\t\tthis.file = <File>(e.target.files || [])[0]\r\n\t}\r\n\r\n\tstatusValue() {\r\n\t\treturn this.covidTestForm.get('status').value || '';\r\n\t}\r\n\r\n\tisUpdateValid() {\r\n\t\tif (!this.covidTestForm.valid) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.covidTestForm.get('status').value === 'finished' && (this.covidTestForm.get('result').value === null || this.file === null)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsave(evt) {\r\n\t\tevt.preventDefault()\r\n\r\n\t\tif (this.covidTestForm.valid) {\r\n\t\t\tlet formDate: Date = new Date(this.covidTestForm.get('scheduleDate').value)\r\n\t\t\tformDate = new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`)\r\n\r\n\t\t\tlet fData = new FormData();\r\n\t\t\tfData.append('notes', this.covidTestForm.get('notes').value)\r\n\t\t\tfData.append('date', formDate.toString())\r\n\t\t\tfData.append('status', this.covidTestForm.get('status').value)\r\n\r\n\t\t\tif (this.covidTestForm.get('result').value)\r\n\t\t\t\tfData.append('result', this.covidTestForm.get('result').value)\r\n\r\n\t\t\tif (this.file)\r\n\t\t\t\tfData.append('file', this.file, this.file.name)\r\n\r\n\t\t\tthis.covidTests.getOneAndUpdate(this.covidTest._id, fData).subscribe(\r\n\t\t\t\t(success) => {\r\n\t\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\t\tmessage: \"COVID Test updated with success!\",\r\n\t\t\t\t\t\tstatus: true\r\n\t\t\t\t\t})\r\n\t\t\t\t}, (error) => {\r\n\t\t\t\t\tconst codeMessage = error.error.message;\r\n\t\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\t\tmessage: codeMessage || \"Error on update COVID Test. Try again please.\",\r\n\t\t\t\t\t\tstatus: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget covidTestFormControl() {\r\n\t\treturn this.covidTestForm.controls;\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h2 mat-dialog-title>Edit</h2>\r\n\r\n<form [formGroup]=\"covidTestForm\" (submit)=\"save($event)\" enctype=\"multipart/form-data\">\r\n  <mat-dialog-content>\r\n    <mat-form-field>\r\n      <mat-label>Notes</mat-label>\r\n      <textarea matInput placeholder=\"Notes\" formControlName=\"notes\"></textarea>\r\n      <mat-icon matPrefix>notes</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Schedule Date</mat-label>\r\n      <input matInput [matDatepicker]=\"scheduleDate\" formControlName=\"scheduleDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"scheduleDate\"></mat-datepicker-toggle>\r\n      <mat-datepicker #scheduleDate></mat-datepicker>\r\n      <mat-error\r\n        [hidden]=\"(covidTestFormControl.scheduleDate.touched) && covidTestFormControl.scheduleDate.errors?.required\">\r\n        Schedul Date is required.\r\n      </mat-error>\r\n      <mat-icon matPrefix>today</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Status</mat-label>\r\n      <mat-select matNativeControl formControlName=\"status\" name=\"status\">\r\n        <mat-option *ngFor=\"let stat of status\" [value]=\"stat\">\r\n          {{stat | titlecase}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-icon matPrefix>healing</mat-icon>\r\n      <mat-error [hidden]=\"(covidTestFormControl.status.touched) && covidTestFormControl.status.errors?.required\">\r\n        Status is required.\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field *ngIf=\"statusValue() ==='finished'\">\r\n      <mat-label>Result</mat-label>\r\n      <mat-select matNativeControl formControlName=\"result\" name=\"result\">\r\n        <mat-option *ngFor=\"let result of results\" [value]=\"result\">\r\n          {{result | titlecase}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-icon matPrefix>info</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <input type=\"file\" formControlName=\"file\" (change)=\"onFileSelected($event)\" accept=\".pdf\"\r\n      *ngIf=\"statusValue() ==='finished'\">\r\n\r\n    <div class=\"accent-color\" *ngIf=\"covidTest.pathFile\">\r\n      <small>Already have upload one file.</small>\r\n    </div>\r\n    <mat-error class=\"validation-error\" *ngIf=\"!isUpdateValid()\">Please make sure if status is Finished, both Result and\r\n      File should be\r\n      insert</mat-error>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!isUpdateValid()\">Save</button>\r\n    <button mat-button color=\"warn\" (click)=\"onClose()\" type=\"button\">Cancel</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CovidTest } from '../../../../models/covid-test.model';\r\nimport { PatientInfoComponent } from '../../patients/patient-info/patient-info.component';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test-information',\r\n\ttemplateUrl: './covid-test-information.component.html',\r\n\tstyleUrls: ['./covid-test-information.component.sass']\r\n})\r\nexport class CovidTestInformationComponent implements OnInit {\r\n\tpublic covidTest: CovidTest;\r\n\tpublic scheduleDate: string;\r\n\r\n\tprivate dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestInformationComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data,\r\n\t\tpublic dialog: MatDialog\r\n\t) {\r\n\t\tthis.covidTest = data;\r\n\t\tthis.scheduleDate = new Date(this.covidTest.date).toLocaleDateString();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\topenInformationDialog() {\r\n\t\tconst dialogConfig = new MatDialogConfig();\r\n\r\n\t\tdialogConfig.data = this.covidTest.patient;\r\n\r\n\t\tthis.dialog.open(PatientInfoComponent, {\r\n\t\t\tdata: this.covidTest.patient,\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\t}\r\n}\r\n\r\n","<h1 mat-dialog-title>COVID Test <strong>{{ covidTest.code }}</strong></h1>\r\n\r\n<mat-dialog-content>\r\n\t<mat-form-field>\r\n\t\t<mat-label>COVID Test Code</mat-label>\r\n\t\t<input matInput placeholder=\"COVID Test Code\" disabled [value]=\"covidTest.code\" />\r\n\t\t<mat-icon matPrefix>copyright</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-expansion-panel>\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\tPatient\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<div>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Patient Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient\" disabled [value]=\"covidTest.patient.name\" />\r\n\t\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient Number\" disabled [value]=\"covidTest.patient.patientNumber\" />\r\n\t\t\t\t<mat-icon matPrefix>info</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let symptom of covidTest.patient.symptoms\">{{ symptom | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t\t<button mat-button mat-dialog-close color=\"primary\" (click)=\"openInformationDialog()\">\r\n\t\t\tPatient Info\r\n\t\t</button>\r\n\r\n\t</mat-expansion-panel>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Notes</mat-label>\r\n\t\t<input matInput placeholder=\"Notes\" disabled [value]=\"covidTest.notes || ''\" />\r\n\t\t<mat-icon matPrefix>subject</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Result</mat-label>\r\n\t\t<input matInput placeholder=\"Result\" disabled [value]=\"(covidTest.result | titlecase) || 'No result for now'\" />\r\n\t\t<mat-icon matPrefix>info</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Test Date</mat-label>\r\n\t\t<input matInput placeholder=\"Test Date\" disabled [value]=\"scheduleDate\" />\r\n\t\t<mat-icon matPrefix>today</mat-icon>\r\n\t</mat-form-field>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\tClose\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { PatientsService } from '../../../services/patients/patients.service';\r\nimport { UiService } from '../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-data-by-email',\r\n\ttemplateUrl: './data-by-email.component.html',\r\n\tstyleUrls: ['./data-by-email.component.sass']\r\n})\r\nexport class DataByEmailComponent implements OnInit {\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\tgetDataForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tpublic router: Router,\r\n\t\tprivate fBuild: FormBuilder,\r\n\t\tpublic patientsService: PatientsService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<DataByEmailComponent>\r\n\t) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.getDataForm = this.fBuild.group({\r\n\t\t\t'email': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]],\r\n\t\t\t'phoneNumber': ['', [Validators.required, Validators.minLength(9)]],\r\n\t\t\t'patientNumber': ['', [Validators.required, Validators.minLength(9)]]\r\n\t\t});\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget getDataFormControl() {\r\n\t\treturn this.getDataForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.getDataForm.valid) {\r\n\r\n\t\t\tconst email = this.getDataForm.get('email').value\r\n\t\t\tconst phoneNumber = this.getDataForm.get('phoneNumber').value\r\n\t\t\tconst patientNumber = this.getDataForm.get('patientNumber').value\r\n\r\n\t\t\tthis.patientsService\r\n\t\t\t\t.getDataByEmail(email, phoneNumber, patientNumber)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t(success) => {\r\n\t\t\t\t\t\tthis.dialogRef.close({ message: success.message })\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tthis.dialogRef.close({ message: error.error.message })\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<h1 mat-dialog-title>Patient Data</h1>\r\n\r\n<form [formGroup]=\"getDataForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t<input matInput placeholder=\"Email\" name=\"email\" formControlName=\"email\">\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(getDataFormControl.email.touched) && (getDataFormControl.email.errors?.email ||  getDataFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error [hidden]=\"(getDataFormControl.email.touched) && getDataFormControl.email.errors?.required\">\r\n\t\t\t\tEmail is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Phone Number</mat-label>\r\n\t\t\t<input matInput placeholder=\"Phone Number\" type=\"number\" formControlName=\"phoneNumber\" name=\"phoneNumber\">\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(getDataFormControl.phoneNumber.touched) && getDataFormControl.phoneNumber.errors?.required\">\r\n\t\t\t\tPhone number is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>smartphone</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t<input matInput placeholder=\"Patient Number\" type=\"number\" formControlName=\"patientNumber\"\r\n\t\t\t\tname=\"patientNumber\">\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(getDataFormControl.patientNumber.touched) && getDataFormControl.phoneNumber.errors?.required\">\r\n\t\t\t\tPatient number is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!getDataForm.valid\" class=\"login-button\">\r\n\t\t\t<mat-icon>email</mat-icon>\r\n\t\t\tGet Your Data\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>close</mat-icon>\r\n\t\t\tClose\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Patient } from '../../../../models/patient.model';\r\nimport { PatientsService } from '../../../../services/patients/patients.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-patient-add',\r\n\ttemplateUrl: './patient-add.component.html',\r\n\tstyleUrls: ['./patient-add.component.sass']\r\n})\r\nexport class PatientAddComponent implements OnInit {\r\n\t// Default Status\r\n\tstatus: string[] = ['Suspect', 'Infected', 'Non Infected'];\r\n\r\n\t// Default Symptoms\r\n\tsymptoms: string[] = ['cough',\r\n\t\t'fever',\r\n\t\t'shortness of breathe',\r\n\t\t'lack of smell',\r\n\t\t'lack of taste',\r\n\t\t'tiredness',\r\n\t\t'headaches',\r\n\t\t'diarrhea'\r\n\t];\r\n\r\n\t// Default Observations\r\n\tobservations: object[] = [\r\n\t\t{ value: 'saude24', label: \"Saúde 24\" },\r\n\t\t{ value: 'riskGroup', label: \"Risk Group\" },\r\n\t\t{ value: 'riskZone', label: \"Risk Zone\" }\r\n\t];\r\n\r\n\tprivate observationsToCreate = {\r\n\t\tsaude24: false,\r\n\t\triskGroup: false,\r\n\t\triskZone: false,\r\n\t};\r\n\r\n\tcurrentObservations: any;\r\n\r\n\tpatient: Patient;\r\n\r\n\tpatientForm: FormGroup\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic patients: PatientsService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<PatientAddComponent>\r\n\t) { }\r\n\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.patientForm = this.formBuilder.group({\r\n\t\t\t'name': ['', [\r\n\t\t\t\tValidators.required\r\n\t\t\t]],\r\n\t\t\t'birthdayDate': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'patientNumber': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000), // Min value\r\n\t\t\t\tValidators.max(999999999) // Max value\r\n\t\t\t]],\r\n\t\t\t'status': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'phone': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000),\r\n\t\t\t\tValidators.max(999999999)\r\n\t\t\t]],\r\n\t\t\t'email': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]],\r\n\t\t\t'symptoms': ['', []],\r\n\t\t\t'observations': ['', []],\r\n\t\t\t\"gender\": ['', [Validators.required]]\r\n\t\t})\r\n\t}\r\n\r\n\tget patientFormControl() {\r\n\t\treturn this.patientForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\t// Prevent duplicate submit of form\r\n\t\tevt.preventDefault()\r\n\r\n\t\tif (this.patientForm.valid) {\r\n\r\n\t\t\tconst formDate = new Date(this.patientForm.get('birthdayDate').value)\r\n\t\t\tthis.currentObservations = this.patientForm.get('observations').value;\r\n\r\n\t\t\tfor (let element in this.currentObservations) {\r\n\t\t\t\tif (this.currentObservations[element] === 'saude24') {\r\n\t\t\t\t\tthis.observationsToCreate.saude24 = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskGroup') {\r\n\t\t\t\t\tthis.observationsToCreate.riskGroup = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskZone') {\r\n\t\t\t\t\tthis.observationsToCreate.riskZone = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst formData = {\r\n\t\t\t\tname: this.patientForm.get('name').value,\r\n\t\t\t\tbirthdayDate: new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`),\r\n\t\t\t\tpatientNumber: this.patientForm.get('patientNumber').value,\r\n\t\t\t\tstatus: this.patientForm.get('status').value,\r\n\t\t\t\tcontacts: {\r\n\t\t\t\t\tphone: this.patientForm.get('phone').value,\r\n\t\t\t\t\temail: this.patientForm.get('email').value,\r\n\t\t\t\t},\r\n\t\t\t\tsymptoms: this.patientForm.get('symptoms').value || undefined,\r\n\t\t\t\tobservations: this.observationsToCreate,\r\n\t\t\t\tgender: this.patientForm.get('gender').value\r\n\t\t\t}\r\n\t\t\tthis.patients.create(formData).subscribe((success) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tmessage: \"Patient created with success!\"\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tlet codeMessage = error.error.message.errmsg || error.error.message;\r\n\r\n\t\t\t\tif (codeMessage.includes('E11000')) {\r\n\t\t\t\t\tif (codeMessage.includes('phone:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Phone inserted already exists';\r\n\t\t\t\t\t} else if (codeMessage.includes('patientNumber:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Patient number inserted already exists';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcodeMessage = 'Unique error. Please validate all fields!';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcodeMessage = error.error.message\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: false,\r\n\t\t\t\t\tmessage: codeMessage\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}","<h2 mat-dialog-title>New Patient</h2>\r\n\r\n<form [formGroup]=\"patientForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field appearance=\"legacy\">\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"Name\" formControlName=\"name\">\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t\t<mat-error [hidden]=\"(patientFormControl.name.touched) && patientFormControl.name.errors?.required\">\r\n\t\t\t\tPatient name is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Birthday Date</mat-label>\r\n\t\t\t<input matInput [matDatepicker]=\"myBirthdayDate\" formControlName=\"birthdayDate\">\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"myBirthdayDate\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #myBirthdayDate></mat-datepicker>\r\n\t\t\t<mat-icon matPrefix>today</mat-icon>\r\n\t\t\t<mat-error [hidden]=\"(patientFormControl.name.touched) && patientFormControl.name.errors?.required\">\r\n\t\t\t\tBirthay date is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t<input matInput type=\"number\" formControlName=\"patientNumber\">\r\n\t\t\t<mat-icon matPrefix>local_parking</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.required\">\r\n\t\t\t\tPatient number number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.min\">\r\n\t\t\t\tPatient number number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.max\">\r\n\t\t\t\tPatient number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Gender</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"gender\" name=\"gender\">\r\n\t\t\t\t<mat-option value=\"Male\">\r\n\t\t\t\t\tMale\r\n\t\t\t\t</mat-option>\r\n\t\t\t\t<mat-option value=\"Female\">\r\n\t\t\t\t\tFemale\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>face</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.gender.touched) && patientFormControl.gender.errors?.required\">\r\n\t\t\t\tPatient gender is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Status</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"status\" name=\"status\">\r\n\t\t\t\t<mat-option *ngFor=\"let stat of status\" [value]=\"stat\">\r\n\t\t\t\t\t{{stat}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>healing</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.status.touched) && patientFormControl.status.errors?.required\">\r\n\t\t\t\tPatient status is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Phone</mat-label>\r\n\t\t\t<input matInput type=\"number\" maxlength=\"9\" minlength=\"9\" formControlName=\"phone\">\r\n\t\t\t<mat-icon matPrefix>phone</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.required\">\r\n\t\t\t\tPhone number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.min\">\r\n\t\t\t\tPhone number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.max\">\r\n\t\t\t\tPhone number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>E-mail</mat-label>\r\n\t\t\t<input matInput type=\"email\" formControlName=\"email\">\r\n\t\t\t<mat-icon matPrefix>alternate_email</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(patientFormControl.email.touched) && (patientFormControl.email.errors?.email || patientFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Symptoms</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"symptoms\" name=\"symptoms\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let symptom of symptoms\" [value]=\"symptom\">\r\n\t\t\t\t\t{{symptom | titlecase}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>local_hospital</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.symptoms.touched) && patientFormControl.symptoms.errors?.required\">\r\n\t\t\t\tPatient symptoms is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Observations</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"observations\" name=\"observations\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let observation of observations\" [value]=\"observation.value\">\r\n\t\t\t\t\t{{observation.label}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>remove_red_eye</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\r\n\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!patientForm.valid\">Save</button>\r\n\t\t<button mat-button color=\"accent\" (click)=\"onClose()\" type=\"button\">Cancel</button>\r\n\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { PatientsService } from 'src/app/services/patients/patients.service';\r\nimport { Patient } from '../../../../models/patient.model';\r\n\r\n@Component({\r\n\tselector: 'app-patient-delete',\r\n\ttemplateUrl: './patient-delete.component.html',\r\n\tstyleUrls: ['./patient-delete.component.sass']\r\n})\r\nexport class PatientDeleteComponent implements OnInit {\r\n\tpatient: Patient\r\n\r\n\tconstructor(\r\n\t\tprivate patientService: PatientsService,\r\n\t\tpublic dialogRef: MatDialogRef<PatientDeleteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: Patient\r\n\t) {\r\n\t\tthis.patient = data\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonDelete() {\r\n\t\tlet response: object = {}\r\n\r\n\t\tthis.patientService.getOneAndDelete(this.patient._id).subscribe(() => {\r\n\t\t\tresponse[\"message\"] = \"Patient deleted with success!\"\r\n\t\t\tresponse[\"status\"] = true\r\n\t\t}, (error) => {\r\n\t\t\tlet codeMessage = error.error.message\r\n\r\n\t\t\tresponse[\"message\"] = codeMessage\r\n\t\t\tresponse[\"status\"] = false\r\n\t\t})\r\n\r\n\t\tthis.dialogRef.close(response)\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<h2 class=\"accent-color\">\r\n\t\t<mat-icon>delete</mat-icon>\r\n\t\tYou want delete {{ patient.name }}?\r\n\t</h2>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"primary\" type=\"submit\" (click)=\"onDelete()\">\r\n\t\t<mat-icon>check</mat-icon>\r\n\t\tYes\r\n\t</button>\r\n\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tNo\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Patient } from '../../../../models/patient.model';\r\nimport { PatientsService } from '../../../../services/patients/patients.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-patient-edit',\r\n\ttemplateUrl: './patient-edit.component.html',\r\n\tstyleUrls: ['./patient-edit.component.sass']\r\n})\r\nexport class PatientEditComponent implements OnInit {\r\n\t// Default Status\r\n\tstatus: string[] = ['Suspect', 'Infected', 'Non Infected'];\r\n\r\n\t// Default Symptoms\r\n\tsymptoms: string[] = ['cough',\r\n\t\t'fever',\r\n\t\t'shortness of breathe',\r\n\t\t'lack of smell',\r\n\t\t'lack of taste',\r\n\t\t'tiredness',\r\n\t\t'headaches',\r\n\t\t'diarrhea'\r\n\t];\r\n\r\n\t// Default Observations\r\n\tallObservationsArr: object[] = [\r\n\t\t{ value: 'saude24', label: \"Saúde 24\" },\r\n\t\t{ value: 'riskGroup', label: \"Risk Group\" },\r\n\t\t{ value: 'riskZone', label: \"Risk Zone\" }\r\n\t];\r\n\r\n\t// current observations selected\r\n\tcurrentObservations = [];\r\n\r\n\t// observations object to update\r\n\tobservationsToUpdate = {\r\n\t\tsaude24: false,\r\n\t\triskGroup: false,\r\n\t\triskZone: false,\r\n\t};\r\n\r\n\t// patient to edit\r\n\tpatient: Patient;\r\n\r\n\t// Form of the edit dialog\r\n\tpatientForm: FormGroup;\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\t//checks wich observations are in the database and returns them\r\n\tcheckRealObservations(elements) {\r\n\t\tlet observationsArr = new Array()\r\n\r\n\t\tif (elements.saude24) {\r\n\t\t\tobservationsArr.push(\"saude24\");\r\n\t\t}\r\n\t\tif (elements.riskGroup) {\r\n\t\t\tobservationsArr.push(\"riskGroup\");\r\n\t\t}\r\n\t\tif (elements.riskZone) {\r\n\t\t\tobservationsArr.push(\"riskZone\");\r\n\t\t}\r\n\r\n\t\treturn observationsArr;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic patients: PatientsService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<PatientEditComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data\r\n\t) {\r\n\t\tthis.patient = data;\r\n\t\tthis.currentObservations = this.checkRealObservations(data.observations);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.patientForm = this.formBuilder.group({\r\n\t\t\t'name': [this.patient.name, [\r\n\t\t\t\tValidators.required\r\n\t\t\t]],\r\n\t\t\t'birthdayDate': [new Date(this.patient.birthdayDate), [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'patientNumber': [this.patient.patientNumber, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000),\r\n\t\t\t\tValidators.max(999999999)\r\n\t\t\t]],\r\n\t\t\t'status': [this.patient.status, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'phone': [this.patient.contacts.phone, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000),\r\n\t\t\t\tValidators.max(999999999)\r\n\t\t\t]],\r\n\t\t\t'email': [this.patient.contacts.email, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]],\r\n\t\t\t'symptoms': [this.patient.symptoms, []],\r\n\t\t\t'observations': [this.currentObservations, []],\r\n\t\t\t\"gender\": [this.patient.gender, [Validators.required]]\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tget patientFormControl() {\r\n\t\treturn this.patientForm.controls;\r\n\t}\r\n\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.patientForm.valid) {\r\n\t\t\tconst formDate = new Date(this.patientForm.get('birthdayDate').value)\r\n\r\n\t\t\tthis.currentObservations = this.patientForm.get('observations').value;\r\n\r\n\t\t\tfor (let element in this.currentObservations) {\r\n\t\t\t\tif (this.currentObservations[element] === 'saude24') {\r\n\t\t\t\t\tthis.observationsToUpdate.saude24 = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskGroup') {\r\n\t\t\t\t\tthis.observationsToUpdate.riskGroup = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskZone') {\r\n\t\t\t\t\tthis.observationsToUpdate.riskZone = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst formData = {\r\n\t\t\t\tname: this.patientForm.get('name').value,\r\n\t\t\t\tbirthdayDate: new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`),\r\n\t\t\t\tpatientNumber: this.patientForm.get('patientNumber').value,\r\n\t\t\t\tstatus: this.patientForm.get('status').value,\r\n\t\t\t\tcontacts: {\r\n\t\t\t\t\tphone: this.patientForm.get('phone').value,\r\n\t\t\t\t\temail: this.patientForm.get('email').value,\r\n\t\t\t\t},\r\n\t\t\t\tsymptoms: this.patientForm.get('symptoms').value,\r\n\t\t\t\tobservations: this.observationsToUpdate,\r\n\t\t\t\tgender: this.patientForm.get('gender').value\r\n\t\t\t}\r\n\r\n\t\t\tthis.patients.getOneAndUpdate(this.patient._id, formData).subscribe((success) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tmessage: \"Patient edited with success!\"\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tlet codeMessage = error.error.message.errmsg || error.error.message;\r\n\r\n\t\t\t\tif (codeMessage.includes('E11000')) {\r\n\t\t\t\t\tif (codeMessage.includes('phone:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Phone inserted already exists';\r\n\t\t\t\t\t} else if (codeMessage.includes('patientNumber:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Patient number inserted already exists';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcodeMessage = 'Unique error. Please validate all fields!';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcodeMessage = error.error.message\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: false,\r\n\t\t\t\t\tmessage: codeMessage\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}","<h2 mat-dialog-title>Edit Patient {{ patient.name }}</h2>\r\n\r\n<form [formGroup]=\"patientForm\" (submit)=\"onSubmit($event)\">\r\n\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field appearance=\"legacy\">\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"Name\" formControlName=\"name\">\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Birthday Date</mat-label>\r\n\t\t\t<input matInput [matDatepicker]=\"myBirthdayDate\" formControlName=\"birthdayDate\">\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"myBirthdayDate\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #myBirthdayDate></mat-datepicker>\r\n\t\t\t<mat-icon matPrefix>today</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t<input matInput type=\"number\" formControlName=\"patientNumber\">\r\n\t\t\t<mat-icon matPrefix>local_parking</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.required\">\r\n\t\t\t\tPatient number number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.min\">\r\n\t\t\t\tPatient number number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.max\">\r\n\t\t\t\tPatient number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Gender</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"gender\" name=\"gender\">\r\n\t\t\t\t<mat-option value=\"Male\">\r\n\t\t\t\t\tMale\r\n\t\t\t\t</mat-option>\r\n\t\t\t\t<mat-option value=\"Female\">\r\n\t\t\t\t\tFemale\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>face</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.gender.touched) && patientFormControl.gender.errors?.required\">\r\n\t\t\t\tPatient gender is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Status</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"status\" name=\"status\">\r\n\t\t\t\t<mat-option *ngFor=\"let stat of status\" [value]=\"stat\">\r\n\t\t\t\t\t{{stat}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>healing</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Phone</mat-label>\r\n\t\t\t<input matInput type=\"number\" formControlName=\"phone\">\r\n\t\t\t<mat-icon matPrefix>phone</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.required\">\r\n\t\t\t\tPhone number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.min\">\r\n\t\t\t\tPhone number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.max\">\r\n\t\t\t\tPhone number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>E-mail</mat-label>\r\n\t\t\t<input matInput type=\"email\" formControlName=\"email\">\r\n\t\t\t<mat-icon matPrefix>alternate_email</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(patientFormControl.email.touched) && (patientFormControl.email.errors?.email ||  patientFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Symptoms</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"symptoms\" name=\"symptoms\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let symptom of symptoms\" [value]=\"symptom\">\r\n\t\t\t\t\t{{symptom | titlecase}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-error [hidden]=\"(patientFormControl.symptoms.touched) && patientFormControl.symptoms.errors?.required\">\r\n\t\t\t\tSymptoms is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>local_hospital</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Observations</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"observations\" name=\"observations\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let observation of allObservationsArr\" [value]=\"observation.value\">\r\n\t\t\t\t\t{{observation.label}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>remove_red_eye</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\r\n\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!patientForm.valid\">\r\n\t\t\t<mat-icon>check</mat-icon>\r\n\t\t\tUpdate\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Patient } from '../../../../models/patient.model';\r\n\r\n@Component({\r\n\tselector: 'app-patient-info',\r\n\ttemplateUrl: './patient-info.component.html',\r\n\tstyleUrls: ['./patient-info.component.sass']\r\n})\r\nexport class PatientInfoComponent implements OnInit {\r\n\tpatient: Patient;\r\n\tbDate: string;\r\n\tsymptoms: [];\r\n\r\n\tallObservationsArr: object[] = [\r\n\t\t{ value: 'saude24', label: \"Saúde 24\" },\r\n\t\t{ value: 'riskGroup', label: \"Risk Group\" },\r\n\t\t{ value: 'riskZone', label: \"Risk Zone\" }\r\n\t];\r\n\r\n\tobservations: any[];\r\n\r\n\tcheckObservations(elements) {\r\n\t\tlet observationsArr = new Array()\r\n\r\n\t\tif (elements.saude24) {\r\n\t\t\tobservationsArr.push(\"Saúde 24\");\r\n\t\t}\r\n\t\tif (elements.riskGroup) {\r\n\t\t\tobservationsArr.push(\"Risk Group\");\r\n\t\t}\r\n\t\tif (elements.riskZone) {\r\n\t\t\tobservationsArr.push(\"Risk Zone\");\r\n\t\t}\r\n\r\n\t\treturn observationsArr;\r\n\t}\r\n\r\n\tconstructor(public dialogRef: MatDialogRef<PatientInfoComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data) {\r\n\t\tthis.patient = data;\r\n\t\tthis.bDate = new Date(this.patient.birthdayDate).toLocaleDateString();\r\n\t\tthis.symptoms = data.symptoms;\r\n\t\tthis.observations = this.checkObservations(data.observations)\r\n\t}\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h2 mat-dialog-title>Information</h2>\r\n<mat-dialog-content>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Name</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Name\" disabled [value]=\"patient.name\" />\r\n\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Birthday Date</mat-label>\r\n\t\t<input matInput placeholder=\"Birthday Date\" disabled [value]=\"bDate\" />\r\n\t\t<mat-icon matPrefix>calendar_today</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Patient Number</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Number\" disabled [value]=\"patient.patientNumber\" />\r\n\t\t<mat-icon matPrefix>local_parking</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Patient Gender</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Gender\" disabled [value]=\"patient.gender || '--'\" />\r\n\t\t<mat-icon matPrefix>face</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Status</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Status\" disabled [value]=\"patient.status\" />\r\n\t\t<mat-icon matPrefix>healing</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-expansion-panel>\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\t<mat-icon>phone</mat-icon>\r\n\t\t\t\tContacts\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<div class=\"mx-20px\">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Phone</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient Phone\" disabled [value]=\"patient.contacts.phone\" />\r\n\t\t\t\t<mat-icon matPrefix>phone</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient Email\" disabled [value]=\"patient.contacts.email\" />\r\n\t\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t</mat-expansion-panel>\r\n\r\n\t<mat-expansion-panel *ngIf=\"symptoms.length != 0\">\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\t<mat-icon>local_hospital</mat-icon>\r\n\t\t\t\tSymptoms\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let symptom of symptoms\">{{ symptom | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t</mat-expansion-panel>\r\n\r\n\t<mat-expansion-panel *ngIf=\"observations.length != 0\">\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\t<mat-icon>remove_red_eye</mat-icon>\r\n\t\t\t\tObservations\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let observation of observations\">{{ observation | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t</mat-expansion-panel>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"accent\" (click)=\"onClose()\">Close</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { User } from '../../../../models/user.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n\tisErrorState(\r\n\t\tcontrol: FormControl | null,\r\n\t\tform: FormGroupDirective | NgForm | null\r\n\t): boolean {\r\n\t\tconst invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n\t\tconst invalidParent = !!(\r\n\t\t\tcontrol &&\r\n\t\t\tcontrol.parent &&\r\n\t\t\tcontrol.parent.invalid &&\r\n\t\t\tcontrol.parent.dirty\r\n\t\t);\r\n\r\n\t\treturn invalidCtrl || invalidParent;\r\n\t}\r\n}\r\n@Component({\r\n\tselector: 'app-update-password',\r\n\ttemplateUrl: './update-password.component.html',\r\n\tstyleUrls: ['./update-password.component.sass'],\r\n})\r\nexport class UpdatePasswordComponent implements OnInit {\r\n\tform: FormGroup;\r\n\tuser: User;\r\n\tmatcher = new MyErrorStateMatcher();\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tpublic uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<UpdatePasswordComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) {\r\n\t\tthis.user = data;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.form = this.formBuilder.group(\r\n\t\t\t{\r\n\t\t\t\toldPwd: ['', [Validators.required]],\r\n\t\t\t\tnewPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n\t\t\t\tconfirmPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n\t\t\t},\r\n\t\t\t{ validator: this.checkPasswords }\r\n\t\t);\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget formControl() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tcheckPasswords(group: FormGroup) {\r\n\t\t// here we have the 'passwords' group\r\n\t\tlet pass = group.controls.newPassword.value;\r\n\t\tlet confirmPass = group.controls.confirmPassword.value;\r\n\r\n\t\treturn pass === confirmPass ? null : { notSame: true };\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst updatedData = {\r\n\t\t\t\temail: this.user.email,\r\n\t\t\t\toldPwd: this.form.get('oldPwd').value,\r\n\t\t\t\tnewPwd: this.form.get('newPassword').value,\r\n\t\t\t\tconfirmPwd: this.form.get('confirmPassword').value,\r\n\t\t\t};\r\n\r\n\t\t\tconst updated = this.usersService.updatePassword(updatedData);\r\n\r\n\t\t\tupdated.subscribe(\r\n\t\t\t\t(success) => {\r\n\t\t\t\t\tconst object = {\r\n\t\t\t\t\t\tstatus: true,\r\n\t\t\t\t\t\tmessage: success.message,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.dialogRef.close(object);\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconst codeMessage = error.error.message;\r\n\t\t\t\t\tconst object = {\r\n\t\t\t\t\t\tstatus: false,\r\n\t\t\t\t\t\tmessage: codeMessage || \"Error on update password! Please try again.\",\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.dialogRef.close(object);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h1 mat-dialog-title>Update your password</h1>\r\n<form [formGroup]=\"form\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Old Password</mat-label>\r\n\t\t\t<input matInput placeholder=\"Your old password\" formControlName=\"oldPwd\" name=\"oldPwd\" type=\"password\" />\r\n\t\t\t<mat-error *ngIf=\"(formControl.oldPwd.touched) && formControl.oldPwd.errors?.required\">\r\n\t\t\t\tOld Password is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>vpn_key</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>New Password</mat-label>\r\n\t\t\t<input matInput placeholder=\"New Password\" type=\"password\" formControlName=\"newPassword\"\r\n\t\t\t\tname=\"newPassword\" />\r\n\t\t\t<mat-error *ngIf=\"(formControl.newPassword.touched) && formControl.newPassword.errors?.required\">\r\n\t\t\t\tNew Password is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(formControl.newPassword.touched) && formControl.newPassword.errors?.minlength\">\r\n\t\t\t\tNew Password needs minimum 6 characters\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>vpn_key</mat-icon>\r\n\t\t</mat-form-field>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Confirm Password</mat-label>\r\n\t\t\t<input matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmPassword\"\r\n\t\t\t\tname=\"confirmPassword\" [errorStateMatcher]=\"matcher\" />\r\n\t\t\t<mat-error *ngIf=\"form.hasError('notSame')\">\r\n\t\t\t\tPasswords do not match\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"formControl.confirmPassword.errors?.required\">\r\n\t\t\t\tConfirm Password is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"formControl.confirmPassword?.touched && formControl.confirmPassword.errors?.minlength\">\r\n\t\t\t\tConfirm Password needs minimum 6 characters\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>vpn_key</mat-icon>\r\n\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">\r\n\t\t\t<mat-icon>check</mat-icon>\r\n\t\t\tUpdate\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { UiService } from '../../../../services/ui/ui.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { Role } from '../../../../models/role.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\n\r\n@Component({\r\n\tselector: 'app-user-add',\r\n\ttemplateUrl: './user-add.component.html',\r\n\tstyleUrls: ['./user-add.component.sass']\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n\r\n\troles: Role[] = []\r\n\tuserForm: FormGroup\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tpublic dialogRef: MatDialogRef<UserAddComponent>,\r\n\t\tprivate uiService: UiService\r\n\t) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tconst emailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\t\tthis.rolesService.getAll().subscribe((roles) => {\r\n\t\t\troles.map((role) => {\r\n\t\t\t\tthis.roles.push(role)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tthis.userForm = this.formBuilder.group({\r\n\t\t\t\"name\": ['', [Validators.required]],\r\n\t\t\t\"email\": ['', [Validators.required, Validators.email, Validators.pattern(emailPattern)]],\r\n\t\t\t\"role\": ['', [Validators.required]]\r\n\t\t})\r\n\r\n\t}\r\n\t// To disable button if have errors\r\n\tget userFormControl() {\r\n\t\treturn this.userForm.controls;\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.userForm.valid) {\r\n\t\t\tconst body = {\r\n\t\t\t\tname: this.userForm.get('name').value,\r\n\t\t\t\temail: this.userForm.get('email').value,\r\n\t\t\t\trole: this.userForm.get('role').value,\r\n\t\t\t\tpassword: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n\t\t\t}\r\n\r\n\t\t\tthis.usersService.new(body).subscribe((user) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: \"User created with success! Please tell to user request a reset password.\",\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: error.error.message || \"Error when create user. Try again please.\",\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h1 mat-dialog-title>Add User</h1>\r\n<form [formGroup]=\"userForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"User Name\" formControlName=\"name\" name=\"name\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.name.touched) && userFormControl.name.errors?.required\">\r\n\t\t\t\tName is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t<input matInput placeholder=\"User email\" type=\"email\" formControlName=\"email\" name=\"email\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.required\">\r\n\t\t\t\tEmail is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.email\">\r\n\t\t\t\tEmail is invalid\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.pattern\">\r\n\t\t\t\tEmail is invalid\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t<mat-select formControlName=\"role\" name=\"role\">\r\n\t\t\t\t<mat-option *ngFor=\"let role of roles\" [value]=\"role._id\">\r\n\t\t\t\t\t{{ role.name | titlecase }}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.role.touched) && userFormControl.role.errors?.required\">\r\n\t\t\t\tRole is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>admin_panel_settings</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!userForm.valid\">\r\n\t\t\t<mat-icon>person_add</mat-icon>\r\n\t\t\tAdd\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { User } from '../../../../models/user.model';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\n\r\n@Component({\r\n\tselector: 'app-user-delete',\r\n\ttemplateUrl: './user-delete.component.html',\r\n\tstyleUrls: ['./user-delete.component.sass']\r\n})\r\nexport class UserDeleteComponent implements OnInit {\r\n\r\n\tuser\r\n\r\n\tconstructor(\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic dialogRef: MatDialogRef<UserDeleteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: User\r\n\t) {\r\n\t\tthis.user = data\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit() {\r\n\r\n\t\tlet response: object = {}\r\n\r\n\t\tthis.usersService.getOneAndDelete(this.user[\"_id\"]).subscribe(() => {\r\n\t\t\tresponse[\"message\"] = \"User deleted with success!\"\r\n\t\t\tresponse[\"status\"] = true\r\n\t\t}, (error) => {\r\n\t\t\tlet codeMessage = error.error.message\r\n\r\n\t\t\tresponse[\"message\"] = codeMessage\r\n\t\t\tresponse[\"status\"] = false\r\n\t\t})\r\n\r\n\t\tthis.dialogRef.close(response)\r\n\t}\r\n\r\n\t// Close dialog\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<h2 class=\"accent-color\">\r\n\t\t<mat-icon>delete</mat-icon>\r\n\t\tYou want delete {{ user.name }}?\r\n\t</h2>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n\t\t<mat-icon>check</mat-icon>\r\n\t\tYes\r\n\t</button>\r\n\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tNo\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { User } from '../../../../models/user.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\ttemplateUrl: './user-edit.component.html',\r\n\tstyleUrls: ['./user-edit.component.sass'],\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\troles: any[] = [];\r\n\tuser: User;\r\n\tuserForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<UserEditComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) {\r\n\t\tthis.user = data;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tconst emailPattern = '^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$';\r\n\r\n\t\tthis.rolesService.getAll().subscribe((roles) => {\r\n\t\t\troles.map((role) => {\r\n\t\t\t\tthis.roles.push(role);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.userForm = this.formBuilder.group({\r\n\t\t\tname: [this.user.name, [Validators.required]],\r\n\t\t\temail: [\r\n\t\t\t\tthis.user.email,\r\n\t\t\t\t[\r\n\t\t\t\t\tValidators.required,\r\n\t\t\t\t\tValidators.email,\r\n\t\t\t\t\tValidators.pattern(emailPattern),\r\n\t\t\t\t],\r\n\t\t\t],\r\n\t\t\trole: [this.user.role['_id'], [Validators.required]],\r\n\t\t});\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget userFormControl() {\r\n\t\treturn this.userForm.controls;\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.userForm.valid) {\r\n\t\t\tconst updatedData = {\r\n\t\t\t\tname: this.userForm.get('name').value,\r\n\t\t\t\temail: this.userForm.get('email').value,\r\n\t\t\t\trole: this.userForm.get('role').value,\r\n\t\t\t};\r\n\r\n\t\t\tlet response: object = {};\r\n\r\n\t\t\tthis.usersService.getOneAndUpdate(this.user['_id'], updatedData).subscribe(\r\n\t\t\t\t(updated) => {\r\n\t\t\t\t\tresponse['message'] = 'User updated with success!';\r\n\t\t\t\t\tresponse['status'] = true;\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tlet codeMessage = error.error.message;\r\n\r\n\t\t\t\t\tif (codeMessage.includes('E11000')) {\r\n\t\t\t\t\t\tif (codeMessage.includes('email:')) {\r\n\t\t\t\t\t\t\tcodeMessage = 'Email inserted already exists';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcodeMessage = 'Unique error. Please validate all fields!';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresponse['message'] = codeMessage;\r\n\t\t\t\t\tresponse['status'] = false;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tthis.dialogRef.close(response);\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h1 mat-dialog-title>Edit User</h1>\r\n<form [formGroup]=\"userForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"User Name\" formControlName=\"name\" name=\"name\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.name.touched) && userFormControl.name.errors?.required\">\r\n\t\t\t\tName is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t<input matInput placeholder=\"User email\" type=\"email\" formControlName=\"email\" name=\"email\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.required\">\r\n\t\t\t\tEmail is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(userFormControl.email.touched) && (userFormControl.email.errors?.email ||  userFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t<mat-select formControlName=\"role\" name=\"role\">\r\n\t\t\t\t<mat-option *ngFor=\"let role of roles\" [value]=\"role._id\">\r\n\t\t\t\t\t{{ role.name | titlecase }}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.role.touched) && userFormControl.role.errors?.required\">\r\n\t\t\t\tRole is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>admin_panel_settings</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!userForm.valid\">\r\n\t\t\t<mat-icon>check</mat-icon>\r\n\t\t\tUpdate\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { User } from '../../../../models/user.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\n\r\n@Component({\r\n\tselector: 'app-user-info',\r\n\ttemplateUrl: './user-info.component.html',\r\n\tstyleUrls: ['./user-info.component.sass']\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n\tscopes: any[] = []\r\n\tuser: User\r\n\r\n\tconstructor(\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tpublic dialogRef: MatDialogRef<UserInfoComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: User\r\n\t) {\r\n\t\tthis.user = data\r\n\t\tthis.scopes = data.role.scopes.map((scope) => {\r\n\t\t\tlet cleanScope = scope.split('--').join('').split('-').join(' ')\r\n\t\t\treturn cleanScope\r\n\t\t})\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<h1 mat-dialog-title>User {{ user.name }}</h1>\r\n<mat-dialog-content>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Name</mat-label>\r\n\t\t<input matInput placeholder=\"User Name\" disabled [value]=\"user.name\" />\r\n\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Role</mat-label>\r\n\t\t<input matInput placeholder=\"User Role\" disabled [value]=\"user.role.name | titlecase\" />\r\n\t\t<mat-icon matPrefix>admin_panel_settings</mat-icon>\r\n\r\n\t</mat-form-field>\r\n\t<mat-form-field>\r\n\t\t<mat-label>Email</mat-label>\r\n\t\t<input matInput placeholder=\"User Email\" disabled [value]=\"user.email\" />\r\n\t\t<mat-icon matPrefix>email</mat-icon>\r\n\r\n\t</mat-form-field>\r\n\r\n\t<mat-expansion-panel>\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\tScopes / Permissions\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<p>This user have permissions to:</p>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let scope of scopes\">{{ scope | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t</mat-expansion-panel>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tClose\r\n\t</button>\r\n</mat-dialog-actions>","import {\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { validateScopes } from 'src/app/functions/validateScopes';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Directive({\r\n  selector: '[canUse]',\r\n})\r\nexport class CanUseDirective implements OnInit {\r\n  scopes: string[];\r\n  session;\r\n\r\n  constructor(\r\n    private sessionService: SessionService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>\r\n  ) {\r\n    this.session = this.sessionService.me();\r\n  }\r\n\r\n  @Input() set canUse(scopes) {\r\n    this.scopes = scopes;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!validateScopes(this.session.user.scopes, this.scopes))\r\n      this.viewContainerRef.clear();\r\n    else this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { validateRoles } from '../../functions/validateRoles';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Directive({\r\n\tselector: '[roleEnable]'\r\n})\r\nexport class RoleEnableDirective implements OnInit {\r\n\troles: string[];\r\n\tsession;\r\n\r\n\tconstructor(\r\n\t\tprivate sessionService: SessionService,\r\n\t\tprivate viewContainerRef: ViewContainerRef,\r\n\t\tprivate templateRef: TemplateRef<any>\r\n\t) {\r\n\t\tthis.session = this.sessionService.me();\r\n\t}\r\n\r\n\t@Input() set roleEnable(roles) {\r\n\t\tthis.roles = roles;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tif (!validateRoles(this.session.user.role, this.roles))\r\n\t\t\tthis.viewContainerRef.clear();\r\n\t\telse this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n\t}\r\n\r\n}\r\n","export function ageToDate(age: number) {\r\n    const today = new Date();\r\n    const newYear = today.getFullYear() - age;\r\n    const date = newYear + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);\r\n\r\n    return date;\r\n}","export function formatDate(date: Date) {\r\n    const shortDate = new Date(date);\r\n    const year = shortDate.getFullYear();\r\n    const month = ('0' + (shortDate.getMonth() + 1)).slice(-2);\r\n    const day = ('0' + shortDate.getDate()).slice(-2);\r\n\r\n    return [year, month, day].join('-');\r\n}","export function validateRoles(userRole: string, roles: string[]) {\r\n\tconst userRoleLower = userRole.toLowerCase()\r\n\tconst rolesLower = roles.map((role) => { return role.toLowerCase() })\r\n\r\n\tlet have = rolesLower.some((roleLower) => {\r\n\t\treturn userRoleLower.includes(roleLower)\r\n\t})\r\n\r\n\treturn have\r\n}","export function validateScopes(userScopes: string[], scopes: string[]) {\r\n\tconst have = scopes.some((accessScope) => {\r\n\t\treturn userScopes.includes(accessScope);\r\n\t});\r\n\treturn have\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { validateScopes } from 'src/app/functions/validateScopes';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ScopeGuard implements CanActivate {\r\n\r\n\tscopes: string[]\r\n\tsession: any\r\n\r\n\tconstructor(\r\n\t\tprivate sessionService: SessionService, private router: Router\r\n\t) {\r\n\t\tthis.session = this.sessionService.me()\r\n\t}\r\n\r\n\tcanActivate(\r\n\t\troute: ActivatedRouteSnapshot,\r\n\t\tstate: RouterStateSnapshot\r\n\t): Observable<boolean> | boolean {\r\n\t\tif (this.session) {\r\n\t\t\tif (validateScopes(this.session.user.scopes, route.data.scopes)) {\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tthis.router.navigate(['/admin'])\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear session to prevent local storage\r\n\t\t\tthis.sessionService.clearSession()\r\n\t\t\t// Redirect\r\n\t\t\tthis.router.navigate(['/login'])\r\n\t\t\t// Return False\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { SessionService } from '../auth/session.service';\r\n\r\n@Injectable()\r\nexport class SessionLostInterceptor implements HttpInterceptor {\r\n\tconstructor(public sessionService: SessionService, public router: Router, private snackBar: MatSnackBar, ) { }\r\n\tintercept(\r\n\t\treq: HttpRequest<any>,\r\n\t\tnext: HttpHandler\r\n\t): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(req).pipe(\r\n\t\t\tcatchError((error: HttpErrorResponse) => {\r\n\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\t// 401 handled in auth.interceptor\t\t\r\n\t\t\t\t\tthis.sessionService.clearSession();\r\n\t\t\t\t\tthis.snackBar.open(\"Session Expired, log in again\", 'Close', { duration: 3000 });\r\n\t\t\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t\t\t}\r\n\t\t\t\treturn throwError(error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-auth',\r\n\ttemplateUrl: './auth.component.html',\r\n\tstyleUrls: ['./auth.component.sass'],\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n\tconstructor(private router: Router) {\r\n\t}\r\n\r\n\tngOnInit(): void { }\r\n}\r\n","<div class=\"auth-page\">\r\n\t<mat-card>\r\n\t\t<mat-card-content>\r\n\t\t\t<div id=\"logo\"></div>\r\n\r\n\t\t\t<router-outlet></router-outlet>\r\n\r\n\t\t</mat-card-content>\r\n\t</mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../../../../auth/session.service';\r\n\r\n@Component({\r\n\tselector: 'app-sidebar',\r\n\ttemplateUrl: './sidebar.component.html',\r\n\tstyleUrls: ['./sidebar.component.sass']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n\tconstructor(public session: SessionService, public router: Router) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t}\r\n\r\n\r\n}\r\n","<mat-nav-list>\r\n\r\n\t<h2 matSubheader>Dashboard</h2>\r\n\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t<mat-icon>dashboard</mat-icon>\r\n\t\tDashboard\r\n\t</a>\r\n\r\n\t<ng-template [canUse]=\"['--view-all']\">\r\n\t\t<mat-divider></mat-divider>\r\n\r\n\t\t<h2 matSubheader>Records</h2>\r\n\r\n\t\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin/patients\"\r\n\t\t\t[routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t\t<mat-icon>folder_shared</mat-icon>\r\n\t\t\tPatients\r\n\t\t</a>\r\n\r\n\t\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin/covid-tests\"\r\n\t\t\t[routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t\t<mat-icon>folder_special</mat-icon>\r\n\t\t\tCOVID Tests\r\n\t\t</a>\r\n\t</ng-template>\r\n\r\n\r\n\t<ng-template [canUse]=\"['--view-users']\">\r\n\t\t<mat-divider></mat-divider>\r\n\r\n\t\t<h2 matSubheader>Administration</h2>\r\n\r\n\t\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin/users\"\r\n\t\t\t[routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t\t<mat-icon>supervised_user_circle</mat-icon>\r\n\t\t\tUsers\r\n\t\t</a>\r\n\t</ng-template>\r\n\r\n</mat-nav-list>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../../../../auth/session.service';\r\nimport { UpdatePasswordComponent } from '../../../../components/dialogs/users/update-password/update-password.component';\r\nimport { User } from '../../../../models/user.model';\r\n\r\n@Component({\r\n\tselector: 'app-topbar',\r\n\ttemplateUrl: './topbar.component.html',\r\n\tstyleUrls: ['./topbar.component.sass'],\r\n})\r\nexport class TopbarComponent implements OnInit {\r\n\t@Input()\r\n\tuser: User;\r\n\r\n\t@Output()\r\n\ttoggleSideBarForMe: EventEmitter<any> = new EventEmitter();\r\n\r\n\tconstructor(\r\n\t\tprivate session: SessionService,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate snackBar: MatSnackBar,\r\n\t\tprivate router: Router\r\n\t) { }\r\n\r\n\tngOnInit(): void { }\r\n\r\n\ttoggleSideBar() {\r\n\t\tthis.toggleSideBarForMe.emit();\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.dispatchEvent(new Event('resize'));\r\n\t\t}, 300);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.session.logout();\r\n\t\tthis.router.navigateByUrl('/login');\r\n\t}\r\n\r\n\topenSnackBar(message: string) {\r\n\t\tthis.snackBar.open(message, 'Close', { duration: 5000 });\r\n\t}\r\n\r\n\topenUpdatePasswordDialog() {\r\n\t\tlet dialogRef = this.dialog.open(UpdatePasswordComponent, {\r\n\t\t\tdata: this.user,\r\n\t\t\twidth: '25vw',\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((response) => {\r\n\t\t\tif (response) {\r\n\t\t\t\tthis.openSnackBar(response['message']);\r\n\r\n\t\t\t\tif (response.status == true) this.logout();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-toolbar>\r\n\t<mat-toolbar-row>\r\n\t\t<button mat-icon-button (click)=\"toggleSideBar()\">\r\n\t\t\t<mat-icon>menu</mat-icon>\r\n\t\t</button>\r\n\r\n\t\t<div id=\"logo\">\r\n\t\t\t<!-- <img src=\"/assets/images/logo.png\" class=\"logo\" alt=\"\"> -->\r\n\t\t</div>\r\n\r\n\t\t<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n\t\t\t<ul fxLayout=\"row\" fxLayoutGap=\"20px\" class=\"headerItems\">\r\n\t\t\t\t<li class=\"user\" *ngIf=\"user\">\r\n\t\t\t\t\t<mat-button mat-button [matMenuTriggerFor]=\"menu\">\r\n\t\t\t\t\t\t<img src=\"/assets/images/user.png\" class=\"avatar\" alt=\"\">\r\n\t\t\t\t\t\t{{ user.name }}\r\n\t\t\t\t\t</mat-button>\r\n\r\n\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t<div class=\"center\">\r\n\t\t\t\t\t\t\t<img src=\"/assets/images/user.png\" alt=\"\">\r\n\r\n\t\t\t\t\t\t\t<h3>{{ user.name }}</h3>\r\n\t\t\t\t\t\t\t<small>{{ user.role }}</small>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openUpdatePasswordDialog()\">\r\n\t\t\t\t\t\t\t<mat-icon>vpn_key</mat-icon>\r\n\t\t\t\t\t\t\tChange Password\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button mat-menu-item class=\"btn-logout\" (click)=\"logout()\">\r\n\t\t\t\t\t\t\t<mat-icon>exit_to_app</mat-icon>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Component({\r\n\tselector: 'app-default',\r\n\ttemplateUrl: './default.component.html',\r\n\tstyleUrls: ['./default.component.sass']\r\n})\r\nexport class DefaultComponent implements OnInit {\r\n\tsideBarOpen = true;\r\n\tuser: any\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tpublic router: Router\r\n\t) {\r\n\t\twindow.matchMedia('(max-width: 800px)' || '(max-width: 600px)').addEventListener('change', e => {\r\n\t\t\twindow.location.reload()\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tngOnInit(): void {\r\n\t\tif (window.innerWidth <= 1000) {\r\n\t\t\tthis.sideBarOpen = false\r\n\t\t}\r\n\r\n\t\t// Close sidebar when change router\r\n\t\tthis.router.events.subscribe((router) => {\r\n\t\t\tif (window.innerWidth <= 1000) {\r\n\t\t\t\tthis.sideBarOpen = false;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst me = this.session.me()\r\n\r\n\t\tif (!me) {\r\n\t\t\tthis.router.navigateByUrl('/login')\r\n\t\t} else {\r\n\t\t\tthis.user = me.user\r\n\t\t}\r\n\t}\r\n\r\n\tsideBarToggler() {\r\n\t\tthis.sideBarOpen = !this.sideBarOpen;\r\n\t}\r\n}","<app-topbar (toggleSideBarForMe)=\"sideBarToggler()\" [user]=\"user\"></app-topbar>\r\n\r\n<mat-drawer-container>\r\n\t<mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\r\n\t\t<app-sidebar></app-sidebar>\r\n\t</mat-drawer>\r\n\t<mat-drawer-content>\r\n\t\t<div class=\"container\">\r\n\t\t\t<router-outlet></router-outlet>\r\n\t\t</div>\r\n\t</mat-drawer-content>\r\n</mat-drawer-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DataByEmailComponent } from '../../../../components/dialogs/data-by-email/data-by-email.component';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-header',\r\n\ttemplateUrl: './header.component.html',\r\n\tstyleUrls: ['./header.component.sass'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\tpublic dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\r\n\tconstructor(\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate uiService: UiService\r\n\t) { }\r\n\r\n\tngOnInit(): void { }\r\n\r\n\topenPatientDataForm() {\r\n\t\tlet dialogRef = this.dialog.open(DataByEmailComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((response) => {\r\n\t\t\tif (response) {\r\n\t\t\t\tthis.uiService.showSnackBar(response.message);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-toolbar>\r\n\t<mat-toolbar-row class=\"row\">\r\n\r\n\t\t<div id=\"logo\">\r\n\t\t</div>\r\n\r\n\t\t<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n\t\t\t<ul fxLayout=\"row\" fxLayoutGap=\"20px\" class=\"headerItems\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a [routerLink]=\"['/login']\" mat-button>\r\n\t\t\t\t\t\t<mat-icon>lock</mat-icon>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button mat-button (click)=\"openPatientDataForm()\">\r\n\t\t\t\t\t\t<mat-icon>storage</mat-icon>\r\n\t\t\t\t\t\tPatient Data\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport { TitleService } from '../../services/title/title.service';\r\n\r\n@Component({\r\n\tselector: 'app-landing-page',\r\n\ttemplateUrl: './landing-page.component.html',\r\n\tstyleUrls: ['./landing-page.component.sass']\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n\r\n\tconstructor(\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle()\r\n\r\n\t\twindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\r\n\t\t\twindow.location.reload()\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tscroll(el: HTMLElement) {\r\n\t\tel.scrollIntoView({ behavior: 'smooth' });\r\n\t}\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"hero\">\r\n\t<div class=\"container\">\r\n\t\t<h1 class=\"text-white\">\r\n\t\t\tProtect yourself and others!\r\n\t\t</h1>\r\n\r\n\t\t<button mat-icon-button (click)=\"scroll(content)\">\r\n\t\t\t<mat-icon>\r\n\t\t\t\tkeyboard_arrow_down\r\n\t\t\t</mat-icon>\r\n\t\t</button>\r\n\r\n\t</div>\r\n</div>\r\n<mat-drawer-container>\r\n\t<mat-drawer-content>\r\n\t\t<div class=\"container px-30px\" #content>\r\n\t\t\t<h2 class=\"section-title\">Prevention Tips</h2>\r\n\t\t\t<p class=\"text-center\">Here are some preventions tips that you should pay attention.</p>\r\n\t\t\t<div class=\"button-section text-center\">\r\n\t\t\t\t<p>For more information please visit link below.</p>\r\n\t\t\t\t<a href=\"https://www.cdc.gov/coronavirus/2019-ncov/prevent-getting-sick/prevention.html\" mat-button\r\n\t\t\t\t\tcolor=\"primary\" target=\"_blank\">\r\n\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\tMore Information\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/contact.svg\" alt=\"Avoid close contact\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Avoid close contact</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>void close contact with people who are sick, even inside your home. Put\r\n\t\t\t\t\t\t\t\tdistance between yourself and other people\r\n\t\t\t\t\t\t\t\toutside of your home, remember that, some people without symptoms may be able to spread\r\n\t\t\t\t\t\t\t\tthe virus.\r\n\t\t\t\t\t\t\t</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/gloves.svg\"\r\n\t\t\t\t\t\t\talt=\"Cover your mouth , nose and hands\" class=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Cover your mouth, nose and hands</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>You could spread COVID-19 to others even if you do not feel sick Everyone\r\n\t\t\t\t\t\t\t\tshould wear a cloth face cover and gloves when\r\n\t\t\t\t\t\t\t\tthey have to go out in public. Continue to keep distance between yourself and others.\r\n\t\t\t\t\t\t\t\tThe cloth face and gloves are not\r\n\t\t\t\t\t\t\t\ta substitute for a social distancing.</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/sneeze.svg\" alt=\"Know how it spreads\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Know how it spreads</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>There is currently no vaccine to prevent coronavirus disease 2019\r\n\t\t\t\t\t\t\t\t(COVID-19). The best way to prevent illness is to\r\n\t\t\t\t\t\t\t\tavoid being exposed to this virus.\r\n\t\t\t\t\t\t\t</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/wash.svg\" alt=\"Clean and disinfect\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Clean and disinfect</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>Clean and disinfect frequently touched surfaces daily. This includes\r\n\t\t\t\t\t\t\t\ttables, light switches, desks, phones, keyboards\r\n\t\t\t\t\t\t\t\tand toilets. Then, use a household disinfectant.</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container px-30px\">\r\n\t\t\t<h2 class=\"section-title\">Symptoms (Most Common)</h2>\r\n\t\t\t<p class=\"text-center\">Here are some symptoms that you should pay attention.</p>\r\n\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/cough.svg\" alt=\"Cough\" class=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Cough</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/fever.svg\" alt=\"High Fever\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>High Fever</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/headache.svg\" alt=\"Headache\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Headache</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/sore-troath.svg\" alt=\"Sore Troath\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Sore Troath</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container px-30px\">\r\n\t\t\t<h2 class=\"section-title\">Current Situation</h2>\r\n\t\t\t<p class=\"text-center\">Here are some graphics with information about Portugal and the rest of the World.</p>\r\n\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 50%\" fxFlex.xs=\"100\">\r\n\t\t\t\t\t<app-pt-chart></app-pt-chart>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 50%\" fxFlex.xs=\"100\">\r\n\t\t\t\t\t<app-world-chart></app-world-chart>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container px-30px\" id=\"dgs-container\">\r\n\t\t\t<h2 class=\"section-title\">Portugal Situation</h2>\r\n\t\t\t<p class=\"text-center\">Here are some information about Portugal with more details.</p>\r\n\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 100%\">\r\n\t\t\t\t\t<embed\r\n\t\t\t\t\t\tsrc=\"https://esriportugal.maps.arcgis.com/apps/opsdashboard/index.html#/acf023da9a0b4f9dbb2332c13f635829\"\r\n\t\t\t\t\t\tstyle=\"width:100%;\" height=\"800\" frameborder=\"0\" />\r\n\r\n\t\t\t\t\t<small>\r\n\t\t\t\t\t\t<strong>Source:</strong>\r\n\t\t\t\t\t\t<a href=\"https://covid19.min-saude.pt/ponto-de-situacao-atual-em-portugal/\" target=\"_blank\">\r\n\t\t\t\t\t\t\tDGS - Ponto de Situação Atual\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"footer-dark\">\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"100\">\r\n\t\t\t\t\t<img src=\"/assets/images/logo/covid-white.svg\" alt=\"COVID Tracking System\" class=\"logo\">\r\n\t\t\t\t\t<h3 class=\"title\">COVID Tracking System</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 75%\" fxFlex.xs=\"50\" fxFlex.sm=\"50\">\r\n\t\t\t\t\t<mat-list role=\"list\">\r\n\t\t\t\t\t\t<mat-list-item role=\"listitem\">\r\n\t\t\t\t\t\t\t<a href=\"mailto:covidtrackingsystem@gmail.com\">\r\n\t\t\t\t\t\t\t\t<mat-icon>email</mat-icon>\r\n\t\t\t\t\t\t\t\tcovidtrackingsystem@gmail.com\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t<mat-list-item role=\"listitem\">\r\n\t\t\t\t\t\t\t<a href=\"tel:tel:808300201\">\r\n\t\t\t\t\t\t\t\t<mat-icon>phone</mat-icon>\r\n\t\t\t\t\t\t\t\t808 300 201\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t</mat-list>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</mat-drawer-content>\r\n</mat-drawer-container>","export class Patient {\r\n\t_id?: string;\r\n\tname: string;\r\n\tbirthdayDate: Date;\r\n\tpatientNumber: number;\r\n\tstatus: string;\r\n\tgender: string;\r\n\tcontacts: {\r\n\t\tphone: number;\r\n\t\temail: string;\r\n\t};\r\n\tsymptoms: string[];\r\n\tobservations: {\r\n\t\tsaude24?: boolean;\r\n\t\triskGroup?: boolean;\r\n\t\triskZone?: boolean;\r\n\t};\r\n}","import { Role } from './role.model';\r\nexport class User {\r\n\t_id?: string;\r\n\tname: string;\r\n\temail: string;\r\n\trole: Role;\r\n\tpassword?: string;\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CovidTestCreateComponent } from '../../components/dialogs/covid-test/covid-test-create/covid-test-create.component';\r\nimport { CovidTestDeleteComponent } from '../../components/dialogs/covid-test/covid-test-delete/covid-test-delete.component';\r\nimport { CovidTestEditComponent } from '../../components/dialogs/covid-test/covid-test-edit/covid-test-edit.component';\r\nimport { CovidTestInformationComponent } from '../../components/dialogs/covid-test/covid-test-information/covid-test-information.component';\r\nimport { formatDate } from '../../functions/formatDate';\r\nimport { CovidTest } from '../../models/covid-test.model';\r\nimport { CovidTestService } from '../../services/covid-test/covid-test.service';\r\nimport { PatientInfoComponent } from '../../components/dialogs/patients/patient-info/patient-info.component';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test',\r\n\ttemplateUrl: './covid-test.component.html',\r\n\tstyleUrls: ['./covid-test.component.sass']\r\n})\r\nexport class CovidTestComponent implements OnInit {\r\n\tdialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\tresult: any;\r\n\r\n\tsearchText;\r\n\r\n\tfields: Object[] = [\r\n\t\t{ value: 'date', view: 'Date' },\r\n\t\t{ value: 'status', view: 'Status' },\r\n\t\t{ value: 'result', view: 'Result' }\r\n\t];\r\n\r\n\torders: Object[] = [\r\n\t\t{ value: 'asc', view: 'Ascendent' },\r\n\t\t{ value: 'desc', view: 'Descendent' },\r\n\t];\r\n\r\n\tstatus: Object[] = [\r\n\t\t{ value: 'pending', view: 'Pending' },\r\n\t\t{ value: 'in Progress', view: 'In Progress' },\r\n\t\t{ value: 'finished', view: 'Finished' },\r\n\t\t{ value: 'waiting Result', view: 'Waiting Result' },\r\n\t];\r\n\r\n\tresults: Object[] = [\r\n\t\t{ value: 'positive', view: 'Positive' },\r\n\t\t{ value: 'negative', view: 'Negative' },\r\n\t\t{ value: 'inconclusive', view: 'Inconclusive' }\r\n\t];\r\n\r\n\tselectedField: string;\r\n\tselectedOrder: string;\r\n\tselectedSearchField: string;\r\n\tselectedSearchFilter: string;\r\n\tfromDate: Date;\r\n\ttoDate: Date;\r\n\tselectedSearchFilterFrom: Date;\r\n\tselectedSearchFilterTo: Date;\r\n\r\n\tconstructor(\r\n\t\tpublic covidTests: CovidTestService,\r\n\t\tprivate http: HttpClient,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tpublic uiService: UiService,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('COVID Tests')\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\tdateFormated(date) {\r\n\t\treturn formatDate(date)\r\n\t}\r\n\r\n\tfetchData() {\r\n\t\tconst getAll = this.covidTests.getAll()\r\n\r\n\t\treturn getAll.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tclearFilters() {\r\n\t\tthis.selectedSearchField = undefined\r\n\t\tthis.selectedSearchFilter = undefined\r\n\t\tthis.fetchData()\r\n\t}\r\n\r\n\tfetchOrderedData() {\r\n\t\tconst getAllWithSort = this.covidTests.getAllWithSort(this.selectedField, this.selectedOrder);\r\n\r\n\t\treturn getAllWithSort.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\topenPatientInfoDialog(patient) {\r\n\t\tthis.dialog.open(PatientInfoComponent, {\r\n\t\t\tdata: patient,\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredData() {\r\n\t\tconst getAllWithFilter = this.covidTests.getAllWithFilter(this.selectedSearchField, this.selectedSearchFilter);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredDataWithDate() {\r\n\t\tconst from = formatDate(this.selectedSearchFilterFrom);\r\n\t\tconst to = formatDate(this.selectedSearchFilterTo);\r\n\t\tconst getAllWithFilter = this.covidTests.getAllFilteredWithDate(this.selectedSearchField, from, to);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tselectedSearchFieldMethod() {\r\n\t\treturn this.selectedSearchField;\r\n\t}\r\n\r\n\tselectedSearchFilterMethod() {\r\n\t\tif ((this.selectedSearchField === 'status' || this.selectedSearchField === 'result') && this.selectedSearchFilter) {\r\n\t\t\tthis.fetchFilteredData();\r\n\t\t}\r\n\t\tif (this.selectedSearchField === 'date' && this.selectedSearchFilterFrom && this.selectedSearchFilterTo) {\r\n\t\t\tthis.fetchFilteredDataWithDate();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedFieldMethod() {\r\n\t\tif (this.selectedOrder) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedOrderMethod() {\r\n\t\tif (this.selectedField) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\topenCreateDialog() {\r\n\t\tconst dialogRef = this.dialog.open(CovidTestCreateComponent, {\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\t\t\tif (data) {\r\n\r\n\t\t\t\tif (data.status == true) {\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\topenDeleteDialog(covidTest: CovidTest) {\r\n\t\tlet dialogRef = this.dialog.open(CovidTestDeleteComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: covidTest\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.uiService.showSnackBar(res.message)\r\n\r\n\t\t\t\tif (res.status == true) {\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\topenInformationDialog(covidTest: CovidTest) {\r\n\t\tthis.dialog.open(CovidTestInformationComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: covidTest\r\n\t\t});\r\n\t}\r\n\r\n\topenEditDialog(covidTest: any) {\r\n\t\tlet dialogRef = this.dialog.open(CovidTestEditComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: covidTest\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\r\n\t\t\t\tif (data.status == true) {\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t}\r\n}\r\n","<div id=\"header\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t<mat-icon>folder_shared</mat-icon>\r\n\t\t\t\tCOVID Tests\r\n\t\t\t</mat-card-title>\r\n\t\t</mat-card-header>\r\n\r\n\t\t<mat-card-actions>\r\n\t\t\t<ng-template [canUse]=\"['--create-all']\">\r\n\t\t\t\t<button mat-button color=\"primary\" (click)=\"openCreateDialog()\">\r\n\t\t\t\t\t<mat-icon>add</mat-icon>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<mat-tab-group>\r\n\t\t<mat-tab label=\"Search\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field id=\"search\">\r\n\t\t\t\t\t<mat-label>Search</mat-label>\r\n\t\t\t\t\t<input matInput class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\"\r\n\t\t\t\t\t\tautocomplete=\"off\" placeholder=\"Insert text to search\">\r\n\t\t\t\t\t<mat-icon matPrefix>search</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Filters\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchField\" (selectionChange)=\"selectedSearchFieldMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\r\n\t\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='status'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of status\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='result'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of results\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='date'\">\r\n\t\t\t\t\t<mat-label>From Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"fromDate\" [(ngModel)]=\"selectedSearchFilterFrom\"\r\n\t\t\t\t\t\t(dateChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"fromDate\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #fromDate></mat-datepicker>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='date'\">\r\n\r\n\t\t\t\t\t<mat-label>To Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"toDate\" [(ngModel)]=\"selectedSearchFilterTo\"\r\n\t\t\t\t\t\t(dateChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"toDate\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #toDate></mat-datepicker>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<button mat-button color=\"accent\" [disabled]=\"!selectedSearchField\" (click)=\"clearFilters()\">\r\n\t\t\t\t\tClear Filters\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Sort\">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedField\" (selectionChange)=\"selectedFieldMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\r\n\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Order</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedOrder\" (selectionChange)=\"selectedOrderMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let order of orders\" [value]=\"order.value\">\r\n\t\t\t\t\t\t{{order.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t</mat-tab>\r\n\t</mat-tab-group>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<div fxFlex=\"0 1 25\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\"\r\n\t\t\t*ngFor=\"let covidTest of result | filter:searchText\" class=\"card-item\">\r\n\t\t\t<mat-card>\r\n\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>perm_identity</mat-icon>\r\n\t\t\t\t\t\t<b>Patient:</b> {{covidTest.patient.name}}\r\n\t\t\t\t\t\t<a (click)=\"openPatientInfoDialog(covidTest.patient)\" id=\"patientInfo\">\r\n\t\t\t\t\t\t\t<mat-icon>visibility</mat-icon>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>healing</mat-icon>\r\n\t\t\t\t\t\t<b>Status:</b> {{covidTest.status  | titlecase}}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>calendar_today</mat-icon>\r\n\t\t\t\t\t\t<b>Date:</b> {{dateFormated(covidTest.date)}}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p *ngIf=\"covidTest.result\">\r\n\t\t\t\t\t\t<mat-icon>description</mat-icon>\r\n\t\t\t\t\t\t<b>Result:</b> {{covidTest.result | titlecase}}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t\t<mat-card-actions>\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openInformationDialog(covidTest)\">\r\n\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(covidTest)\">\r\n\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(covidTest)\">\r\n\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</mat-card>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { TitleService } from '../../services/title/title.service';\r\n\r\n@Component({\r\n\tselector: 'app-dashboard',\r\n\ttemplateUrl: './dashboard.component.html',\r\n\tstyleUrls: ['./dashboard.component.sass']\r\n})\r\nexport class DashboardComponent {\r\n\r\n\r\n\tconstructor(\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle(\"Dashboard\")\r\n\r\n\t\twindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\r\n\t\t\twindow.location.reload()\r\n\t\t});\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<ng-template [roleEnable]=\"['Admin', 'Technic']\">\r\n\t\t\t<div fxFlex=\"0 1 40%\" fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card id=\"card-symptoms\">\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of Symptoms\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-symptoms></app-by-symptoms>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 30%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card class=\"card-flex-column\">\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of Status\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-status></app-by-status>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 30%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card class=\"card-flex-column\">\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of Patients by Gender\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-gender></app-by-gender>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</div>\r\n</div>\r\n<div class=\"container mb-40px\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 50%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of tests by month\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-month></app-by-month>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 50%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of tests by day\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-day></app-by-day>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ageToDate } from 'src/app/functions/ageToDate';\r\nimport { formatDate } from '../../functions/formatDate';\r\nimport { PatientsService } from '../../services/patients/patients.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\nimport { PatientAddComponent } from '../../components/dialogs/patients/patient-add/patient-add.component';\r\nimport { PatientDeleteComponent } from '../../components/dialogs/patients/patient-delete/patient-delete.component';\r\nimport { PatientEditComponent } from '../../components/dialogs/patients/patient-edit/patient-edit.component';\r\nimport { PatientInfoComponent } from '../../components/dialogs/patients/patient-info/patient-info.component';\r\nimport { Patient } from '../../models/patient.model';\r\nimport { TitleService } from '../../services/title/title.service';\r\n\r\n@Component({\r\n\tselector: 'app-patients',\r\n\ttemplateUrl: './patients.component.html',\r\n\tstyleUrls: ['./patients.component.sass']\r\n})\r\nexport class PatientsComponent implements OnInit {\r\n\tpublic dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\r\n\tresult: any;\r\n\r\n\tsearchText;\r\n\r\n\tfields: Object[] = [\r\n\t\t{ value: 'name', view: 'Name' },\r\n\t\t{ value: 'birthdayDate', view: 'Birthday Date' },\r\n\t\t{ value: 'status', view: 'Status' },\r\n\t];\r\n\r\n\tfilters: Object[] = [\r\n\t\t{ value: 'age', view: 'Age' },\r\n\t\t{ value: 'status', view: 'Status' },\r\n\t\t{ value: 'gender', view: 'Gender' },\r\n\t];\r\n\r\n\torders: Object[] = [\r\n\t\t{ value: 'asc', view: 'Ascendent' },\r\n\t\t{ value: 'desc', view: 'Descendent' },\r\n\t];\r\n\r\n\tstatus: Object[] = [\r\n\t\t{ value: 'Suspect', view: 'Suspect' },\r\n\t\t{ value: 'Infected', view: 'Infected' },\r\n\t\t{ value: 'Non Infected', view: 'Non Infected' }\r\n\t];\r\n\r\n\tgenders: Object[] = [\r\n\t\t{ value: 'Male', view: 'Male' },\r\n\t\t{ value: 'Female', view: 'Female' }\r\n\t];\r\n\r\n\tselectedField: string;\r\n\tselectedOrder: string;\r\n\tselectedSearchField: string;\r\n\tselectedSearchFilter: string;\r\n\r\n\tselectedSearchFilterFromAge: number;\r\n\tselectedSearchFilterToAge: number;\r\n\r\n\tconstructor(\r\n\t\tpublic patients: PatientsService,\r\n\t\tprivate http: HttpClient,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('Patients')\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\r\n\tfetchData() {\r\n\t\tconst getAll = this.patients.getAll()\r\n\r\n\t\treturn getAll.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchOrderedData() {\r\n\t\tconst getAllWithSort = this.patients.getAllWithSort(this.selectedField, this.selectedOrder);\r\n\r\n\t\treturn getAllWithSort.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredData() {\r\n\t\tconst getAllWithFilter = this.patients.getAllWithFilter(this.selectedSearchField, this.selectedSearchFilter);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredDataWithDate() {\r\n\t\tconst from = ageToDate(this.selectedSearchFilterFromAge);\r\n\t\tlet to;\r\n\t\tif (this.selectedSearchFilterToAge > 0) {\r\n\t\t\tto = ageToDate(this.selectedSearchFilterToAge);\r\n\t\t}\r\n\t\telse if (this.selectedSearchFilterToAge === 0) {\r\n\t\t\tto = formatDate(new Date());\r\n\t\t}\r\n\r\n\t\tconst getAllWithFilter = this.patients.getAllFilteredWithDate(to, from);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tselectedSearchFieldMethod() {\r\n\t\treturn this.selectedSearchField;\r\n\t}\r\n\r\n\tselectedSearchFilterMethod() {\r\n\t\tif ((this.selectedSearchField === 'status' || this.selectedSearchField === 'gender') && this.selectedSearchFilter) {\r\n\t\t\tthis.fetchFilteredData();\r\n\t\t}\r\n\r\n\t\tif (this.selectedSearchField === 'age' && this.selectedSearchFilterToAge > -1 && this.selectedSearchFilterToAge != undefined) {\r\n\t\t\tthis.fetchFilteredDataWithDate();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedFieldMethod() {\r\n\t\tif (this.selectedOrder) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedOrderMethod() {\r\n\t\tif (this.selectedField) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\tclearFilters() {\r\n\t\tthis.selectedSearchField = undefined\r\n\t\tthis.selectedSearchFilter = undefined\r\n\t\tthis.fetchData()\r\n\t}\r\n\r\n\topenDeleteDialog(patient: Patient) {\r\n\t\tlet dialogRef = this.dialog.open(PatientDeleteComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: patient\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.uiService.showSnackBar(res.message)\r\n\r\n\t\t\t\tif (res.status == true)\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\r\n\topenInformationDialog(patient: Patient) {\r\n\r\n\t\tthis.dialog.open(PatientInfoComponent, {\r\n\t\t\tdata: patient,\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\t}\r\n\r\n\topenEditDialog(patient: Patient) {\r\n\r\n\t\tlet dialogRef = this.dialog.open(PatientEditComponent, {\r\n\t\t\tdata: patient,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\r\n\t\t\t\tif (data.status == true)\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\topenCreateDialog() {\r\n\t\tconst dialogRef = this.dialog.open(PatientAddComponent, {\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\r\n\t\t\t\tif (data.status == true)\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n","<div id=\"header\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t<mat-icon>folder_shared</mat-icon>\r\n\t\t\t\tPatients\r\n\t\t\t</mat-card-title>\r\n\t\t</mat-card-header>\r\n\r\n\t\t<mat-card-actions>\r\n\t\t\t<ng-template [canUse]=\"['--create-all']\">\r\n\t\t\t\t<button mat-button color=\"primary\" (click)=\"openCreateDialog()\">\r\n\t\t\t\t\t<mat-icon>add</mat-icon>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<mat-tab-group>\r\n\t\t<mat-tab label=\"Search\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field id=\"search\">\r\n\t\t\t\t\t<mat-label>Search</mat-label>\r\n\t\t\t\t\t<input matInput class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\"\r\n\t\t\t\t\t\tautocomplete=\"off\" placeholder=\"Insert text to search\">\r\n\t\t\t\t\t<mat-icon matPrefix>search</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Filters\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchField\" (selectionChange)=\"selectedSearchFieldMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let field of filters\" [value]=\"field.value\">\r\n\t\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='status'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of status\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='gender'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of genders\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='age'\">\r\n\t\t\t\t\t<mat-label>Age From</mat-label>\r\n\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Age\" [(ngModel)]=\"selectedSearchFilterFromAge\"\r\n\t\t\t\t\t\t(change)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='age'\">\r\n\t\t\t\t\t<mat-label>Age To</mat-label>\r\n\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Age\" [(ngModel)]=\"selectedSearchFilterToAge\"\r\n\t\t\t\t\t\t(ngModelChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<button mat-button color=\"accent\" [disabled]=\"!selectedSearchField\" (click)=\"clearFilters()\">\r\n\t\t\t\t\tClear Filters\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Sort\">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedField\" (selectionChange)=\"selectedFieldMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\r\n\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Order</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedOrder\" (selectionChange)=\"selectedOrderMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let order of orders\" [value]=\"order.value\">\r\n\t\t\t\t\t\t{{order.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t</mat-tab>\r\n\t</mat-tab-group>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<div fxFlex=\"0 1 25\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\"\r\n\t\t\t*ngFor=\"let patient of result | filter:searchText\" class=\"card-item\">\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t{{ patient.name | titlecase }}\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t<mat-icon>perm_identity</mat-icon>\r\n\t\t\t\t\t\t\tPatient Number:\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t{{ patient.patientNumber }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t<mat-icon>healing</mat-icon>\r\n\t\t\t\t\t\t\tStatus:\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t{{ patient.status }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t\t<mat-card-actions>\r\n\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--view-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openInformationDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--edit-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--delete-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</mat-card>\r\n\t\t\t<!-- <mat-card>\r\n\t\t\t\t<mat-card-actions>\r\n\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--view-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openInformationDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--edit-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--delete-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t{{patient.name}}\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>healing</mat-icon>\r\n\t\t\t\t\t\t<b>Status: </b>{{ patient.status }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>perm_identity</mat-icon>\r\n\t\t\t\t\t\t<b>Patient number: </b>{{ patient.patientNumber }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card> -->\r\n\t\t</div>\r\n\t\t<!-- <div fxFlex=\"0 1 25%\" class=\"card-item\" (click)=\"openCreateDialog()\">\r\n\t\t\t<mat-card id=\"add-card\">\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"add-btn\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\tAdd Patient\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t</mat-card>\r\n\t\t</div> -->\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UsersService } from '../../services/users/users.service';\r\nimport { SessionService } from '../../auth/session.service';\r\nimport { UserAddComponent } from '../../components/dialogs/users/user-add/user-add.component';\r\nimport { UserDeleteComponent } from '../../components/dialogs/users/user-delete/user-delete.component';\r\nimport { UserEditComponent } from '../../components/dialogs/users/user-edit/user-edit.component';\r\nimport { UserInfoComponent } from '../../components/dialogs/users/user-info/user-info.component';\r\nimport { User } from '../../models/user.model';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-users',\r\n\ttemplateUrl: './users.component.html',\r\n\tstyleUrls: ['./users.component.sass'],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\tpublic dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\tpublic users;\r\n\tpublic loggedUserEmail: string;\r\n\r\n\tconstructor(\r\n\t\tprivate usersService: UsersService,\r\n\t\tprivate sessionService: SessionService,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('Users')\r\n\t\tthis.loggedUserEmail = this.sessionService.me().user.email;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\tfetchData() {\r\n\t\tconst getAll = this.usersService.getAll();\r\n\r\n\t\treturn getAll.subscribe((data) => {\r\n\t\t\tthis.users = data;\r\n\t\t});\r\n\t}\r\n\r\n\topenEditDialog(user: User) {\r\n\t\tlet dialogRef = this.dialog.open(UserEditComponent, {\r\n\t\t\tdata: user,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tif (result.status == true) {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenDeleteDialog(user: User) {\r\n\t\tlet dialogRef = this.dialog.open(UserDeleteComponent, {\r\n\t\t\tdata: user,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tif (result.status == true) {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenInfoDialog(user: User) {\r\n\t\tthis.dialog.open(UserInfoComponent, {\r\n\t\t\tdata: user,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\t}\r\n\r\n\topenAddDialog() {\r\n\t\tlet dialogRef = this.dialog.open(UserAddComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tif (result.status == true) {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<div id=\"header\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t<mat-icon>supervised_user_circle</mat-icon>\r\n\t\t\t\tUsers\r\n\t\t\t</mat-card-title>\r\n\t\t</mat-card-header>\r\n\t\t<mat-card-actions>\r\n\t\t\t<ng-template [canUse]=\"['--create-all']\">\r\n\t\t\t\t<button mat-button color=\"primary\" (click)=\"openAddDialog()\">\r\n\t\t\t\t\t<mat-icon>person_add</mat-icon>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<div fxFlex=\"0 1 25\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"start\" *ngFor=\"let user of users\"\r\n\t\t\tclass=\"card-item\">\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t{{user.name}}\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t<mat-icon>admin_panel_settings</mat-icon>\r\n\t\t\t\t\t\t\tRole:\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t{{ user.role.name | titlecase }}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<p id=\"warning-text\" class=\"accent-color\" *ngIf=\"loggedUserEmail == user.email\">\r\n\t\t\t\t\t\t<mat-icon>warning</mat-icon>\r\n\t\t\t\t\t\tLogged User!\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t\t<mat-card-actions *ngIf=\"loggedUserEmail != user.email\">\r\n\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--view-users']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openInfoDialog(user)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--edit-users']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(user)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--delete-users']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(user)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</mat-card>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CovidApiService {\r\n\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tgetSummary() {\r\n\t\tconst result = this.http.get(`http://localhost:3000/api/api-covid/`);\r\n\t\treturn result\r\n\t}\r\n\r\n\tgetPortugalSummary(data) {\r\n\t\tlet Portugal;\r\n\t\tdata[0].Countries.forEach(element => {\r\n\t\t\tif (element.Country == \"Portugal\") {\r\n\t\t\t\tPortugal = element;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn Portugal;\r\n\t}\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { CovidTest } from \"../../models/covid-test.model\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CovidTestService {\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tcreate(covidTest: CovidTest) {\r\n\t\treturn this.http.post(`${API_URL}/covid-tests/`, covidTest, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetById(id: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/${id}`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetOneAndUpdate(id: string, body) {\r\n\t\treturn this.http.put(`${API_URL}/covid-tests/${id}`, body).pipe(share());\r\n\t}\r\n\r\n\tgetOneAndDelete(id: string) {\r\n\t\treturn this.http.delete(`${API_URL}/covid-tests/${id}`, httpOptions).pipe(share());\r\n\t}\r\n\tgetByPatient(patientId: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/patient/${patientId}`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetAllWithSort(field: string, order: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/?sort=${field},${order}`, httpOptions);\r\n\t}\r\n\r\n\tgetAllWithFilter(field: string, filter: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/?${field}=${filter}`, httpOptions);\r\n\t}\r\n\r\n\tgetAllFilteredWithDate(field: string, from: string, to: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/?${field}=${from},${to}`, httpOptions);\r\n\t}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Patient } from '../../models/patient.model';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n    }),\r\n    withCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PatientsService {\r\n    constructor(public http: HttpClient) { }\r\n\r\n    create(patient: Patient): Observable<any> {\r\n        return this.http\r\n            .post(`${API_URL}/patients/`, patient, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getAll(): Observable<any> {\r\n        return this.http.get(`${API_URL}/patients/`, httpOptions).pipe(share());\r\n    }\r\n\r\n    getAllWithSort(field: string, order: string) {\r\n        return this.http.get(`${API_URL}/patients/?sort=${field},${order}`, httpOptions);\r\n    }\r\n\r\n    getAllWithFilter(field: string, filter: string) {\r\n        return this.http.get(`${API_URL}/patients/?${field}=${filter}`, httpOptions);\r\n    }\r\n\r\n    getAllFilteredWithDate(from: string, to: string) {\r\n        return this.http.get(`${API_URL}/patients/?birthdayDate=${from},${to}`, httpOptions);\r\n    }\r\n\r\n    getById(id: string): Observable<any> {\r\n        return this.http\r\n            .get(`${API_URL}/patients/${id}`, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getOneAndUpdate(id: string, patient: Patient): Observable<any> {\r\n        return this.http\r\n            .put(`${API_URL}/patients/${id}`, patient, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getOneAndDelete(id: string): Observable<any> {\r\n        return this.http\r\n            .delete(`${API_URL}/patients/${id}`, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getDataByEmail(\r\n        email: string,\r\n        phoneNumber: number,\r\n        patientNumber: number\r\n    ): Observable<any> {\r\n        return this.http\r\n            .post(\r\n                `${API_URL}/patients/get-data`,\r\n                { email, phoneNumber, patientNumber },\r\n                httpOptions\r\n            )\r\n            .pipe(share());\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RolesService {\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tgetAll(): Observable<any> {\r\n\r\n\t\tconst request = this.http\r\n\t\t\t.get(`${API_URL}/roles/`, httpOptions)\r\n\t\t\t.pipe(share());\r\n\r\n\t\treturn request\r\n\t}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class SummaryService {\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\r\n\tgetByStatus(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/patients/status`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetByDay(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/tests/day`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetBySymptoms(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/patients/symptoms`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetByGender(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/patients/gender`, httpOptions).pipe(share());\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class TitleService {\r\n\tprivate baseTitle = environment.baseTitle || 'COVID Tracking System';\r\n\tprivate divider = '|';\r\n\r\n\tconstructor(private titleService: Title) { }\r\n\r\n\tsetPageTitle(page?: string) {\r\n\t\tthis.titleService.setTitle(`${page ? `${page} ${this.divider}` : ''} ${this.baseTitle}`);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UiService {\r\n\r\n\tconstructor(public snackBar: MatSnackBar) { }\r\n\r\n\tshowSnackBar(message, button = 'OK', duration = 3000) {\r\n\t\treturn this.snackBar.open(message, button, { duration: duration })\r\n\t}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { User } from '../../models/user.model';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tgetAll() {\r\n\t\treturn this.http\r\n\t\t\t.get(`${API_URL}/users/`, httpOptions)\r\n\t\t\t.pipe(share());\r\n\t}\r\n\r\n\tgetOneAndUpdate(id: string, user: User): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.put(`${API_URL}/users/${id}`, user, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n\r\n\tgetOneAndDelete(id: string): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.delete(`${API_URL}/users/${id}`, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n\r\n\tnew(body: object): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.post(`${API_URL}/users/`, body, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n\r\n\tupdatePassword(body: object): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.post(`${API_URL}/users/update-password`, body, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\tproduction: false,\r\n\tapiUrl: '/api',\r\n\tbaseTitle: 'COVID Tracking System',\r\n\tcovidAPI: 'https://api.covid19api.com'\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}
