{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/change/change.component.ts","webpack:///src/app/auth/change/change.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/reset/reset.component.ts","webpack:///src/app/auth/reset/reset.component.html","webpack:///src/app/auth/session.service.ts","webpack:///src/app/components/charts/by-day/by-day.component.ts","webpack:///src/app/components/charts/by-day/by-day.component.html","webpack:///src/app/components/charts/by-gender/by-gender.component.ts","webpack:///src/app/components/charts/by-gender/by-gender.component.html","webpack:///src/app/components/charts/by-month/by-month.component.ts","webpack:///src/app/components/charts/by-month/by-month.component.html","webpack:///src/app/components/charts/by-status/by-status.component.ts","webpack:///src/app/components/charts/by-status/by-status.component.html","webpack:///src/app/components/charts/by-symptoms/by-symptoms.component.ts","webpack:///src/app/components/charts/by-symptoms/by-symptoms.component.html","webpack:///src/app/components/charts/pt-chart/pt-chart.component.ts","webpack:///src/app/components/charts/pt-chart/pt-chart.component.html","webpack:///src/app/components/charts/world-chart/world-chart.component.ts","webpack:///src/app/components/charts/world-chart/world-chart.component.html","webpack:///src/app/components/dialogs/covid-test/covid-test-create/covid-test-create.component.ts","webpack:///src/app/components/dialogs/covid-test/covid-test-create/covid-test-create.component.html","webpack:///src/app/components/dialogs/covid-test/covid-test-delete/covid-test-delete.component.ts","webpack:///src/app/components/dialogs/covid-test/covid-test-delete/covid-test-delete.component.html","webpack:///src/app/components/dialogs/covid-test/covid-test-edit/covid-test-edit.component.ts","webpack:///src/app/components/dialogs/covid-test/covid-test-edit/covid-test-edit.component.html","webpack:///src/app/components/dialogs/covid-test/covid-test-information/covid-test-information.component.ts","webpack:///src/app/components/dialogs/covid-test/covid-test-information/covid-test-information.component.html","webpack:///src/app/components/dialogs/data-by-email/data-by-email.component.ts","webpack:///src/app/components/dialogs/data-by-email/data-by-email.component.html","webpack:///src/app/components/dialogs/patients/patient-add/patient-add.component.ts","webpack:///src/app/components/dialogs/patients/patient-add/patient-add.component.html","webpack:///src/app/components/dialogs/patients/patient-delete/patient-delete.component.ts","webpack:///src/app/components/dialogs/patients/patient-delete/patient-delete.component.html","webpack:///src/app/components/dialogs/patients/patient-edit/patient-edit.component.ts","webpack:///src/app/components/dialogs/patients/patient-edit/patient-edit.component.html","webpack:///src/app/components/dialogs/patients/patient-info/patient-info.component.ts","webpack:///src/app/components/dialogs/patients/patient-info/patient-info.component.html","webpack:///src/app/components/dialogs/users/update-password/update-password.component.ts","webpack:///src/app/components/dialogs/users/update-password/update-password.component.html","webpack:///src/app/components/dialogs/users/user-add/user-add.component.ts","webpack:///src/app/components/dialogs/users/user-add/user-add.component.html","webpack:///src/app/components/dialogs/users/user-delete/user-delete.component.ts","webpack:///src/app/components/dialogs/users/user-delete/user-delete.component.html","webpack:///src/app/components/dialogs/users/user-edit/user-edit.component.ts","webpack:///src/app/components/dialogs/users/user-edit/user-edit.component.html","webpack:///src/app/components/dialogs/users/user-info/user-info.component.ts","webpack:///src/app/components/dialogs/users/user-info/user-info.component.html","webpack:///src/app/directives/can-use/can-use.directive.ts","webpack:///src/app/directives/role-enable/role-enable.directive.ts","webpack:///src/app/functions/ageToDate.ts","webpack:///src/app/functions/formatDate.ts","webpack:///src/app/functions/validateRoles.ts","webpack:///src/app/functions/validateScopes.ts","webpack:///src/app/guards/scope/scope.guard.ts","webpack:///src/app/interceptors/session-lost.interceptor.ts","webpack:///src/app/layout/auth/auth.component.ts","webpack:///src/app/layout/auth/auth.component.html","webpack:///src/app/layout/default/components/sidebar/sidebar.component.ts","webpack:///src/app/layout/default/components/sidebar/sidebar.component.html","webpack:///src/app/layout/default/components/topbar/topbar.component.ts","webpack:///src/app/layout/default/components/topbar/topbar.component.html","webpack:///src/app/layout/default/default.component.ts","webpack:///src/app/layout/default/default.component.html","webpack:///src/app/layout/landing-page/components/header/header.component.ts","webpack:///src/app/layout/landing-page/components/header/header.component.html","webpack:///src/app/layout/landing-page/landing-page.component.ts","webpack:///src/app/layout/landing-page/landing-page.component.html","webpack:///src/app/models/patient.model.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/covid-test/covid-test.component.ts","webpack:///src/app/pages/covid-test/covid-test.component.html","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/pages/patients/patients.component.ts","webpack:///src/app/pages/patients/patients.component.html","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.component.html","webpack:///src/app/services/covid-api/covid-api.service.ts","webpack:///src/app/services/covid-test/covid-test.service.ts","webpack:///src/app/services/patients/patients.service.ts","webpack:///src/app/services/roles/roles.service.ts","webpack:///src/app/services/summary/summary.service.ts","webpack:///src/app/services/title/title.service.ts","webpack:///src/app/services/ui/ui.service.ts","webpack:///src/app/services/users/users.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","component","children","canActivate","data","scopes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","MyErrorStateMatcher","control","form","invalidCtrl","invalid","parent","dirty","invalidParent","ChangeComponent","session","uiService","titleService","activatedRoute","formBuilder","router","matcher","setPageTitle","changeForm","group","newPassword","required","confirmPassword","validator","checkPasswords","token","snapshot","paramMap","get","pass","controls","value","confirmPass","notSame","evt","preventDefault","valid","change","subscribe","showSnackBar","error","errorMessage","message","navigateByUrl","onSubmit","LoginComponent","fBuild","emailPattern","me","loginForm","email","pattern","user","password","login","ResetComponent","resetForm","reset","API_URL","apiUrl","httpOptions","headers","withCredentials","SessionService","http","localStorage","getItem","JSON","parse","request","post","pipe","setItem","stringify","expired","removeItem","providedIn","ByDayComponent","summaryService","chartLabels","chartOptions","tooltips","enabled","mode","callbacks","tooltipItem","labels","index","legend","display","fontColor","window","matchMedia","matches","responsive","scales","yAxes","ticks","beginAtZero","stepSize","gridLines","xAxes","color","chartColors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","chartLegend","chartType","chart","month","year","Date","getDate","actualMonth","getMonth","actualYear","getFullYear","numberOfDays","daysInMonth","numberOfTests","getByDay","length","i","element","date","chartData","label","push","ByGenderComponent","chartReady","getByGender","dataArray","gender","charAt","toUpperCase","slice","count","hoverBackgroundColor","ByMonthComponent","numberOfMonths","ByStatusComponent","getByStatus","status","BySymptomsComponent","getBySymptoms","symptom","PtChartComponent","covidApiService","pieChartLabels","pieChartType","pieChartOptions","pieChartColors","getSummary","portugalSummary","getPortugalSummary","pieChartData","TotalRecovered","TotalDeaths","TotalConfirmed","updatedAt","toLocaleString","WorldChartComponent","summary","Global","CovidTestCreateComponent","covidTest","patientsService","dialogRef","patients","patientsForm","filter","option","name","toLowerCase","indexOf","object","patientNumber","undefined","covidTestForm","formDate","formData","patient","notes","create","success","close","getAll","_id","scheduleDate","filteredOptions","valueChanges","val","filterValues","onClose","CovidTestDeleteComponent","covidTestService","response","getOneAndDelete","codeMessage","CovidTestEditComponent","covidTests","file","results","result","target","files","fData","FormData","append","toString","getOneAndUpdate","save","CovidTestInformationComponent","dialog","dialogSize","innerWidth","toLocaleDateString","dialogConfig","open","width","openInformationDialog","DataByEmailComponent","getDataForm","minLength","phoneNumber","getDataByEmail","PatientAddComponent","symptoms","observations","observationsToCreate","saude24","riskGroup","riskZone","patientForm","min","max","currentObservations","birthdayDate","contacts","phone","errmsg","includes","PatientDeleteComponent","patientService","onDelete","PatientEditComponent","allObservationsArr","observationsToUpdate","checkRealObservations","elements","observationsArr","Array","PatientInfoComponent","bDate","checkObservations","UpdatePasswordComponent","usersService","rolesService","oldPwd","updatedData","newPwd","confirmPwd","updated","updatePassword","UserAddComponent","roles","role","userForm","body","Math","random","substring","console","log","UserDeleteComponent","UserEditComponent","UserInfoComponent","scope","cleanScope","split","join","CanUseDirective","sessionService","viewContainerRef","templateRef","clear","createEmbeddedView","RoleEnableDirective","ageToDate","age","today","newYear","formatDate","shortDate","day","validateRoles","userRole","userRoleLower","rolesLower","have","some","roleLower","validateScopes","userScopes","accessScope","ScopeGuard","route","state","navigate","clearSession","SessionLostInterceptor","snackBar","next","handle","duration","AuthComponent","SidebarComponent","TopbarComponent","toggleSideBarForMe","emit","setTimeout","dispatchEvent","Event","logout","afterClosed","openSnackBar","toggleSideBar","DefaultComponent","sideBarOpen","addEventListener","location","reload","events","sideBarToggler","HeaderComponent","openPatientDataForm","LandingPageComponent","el","scrollIntoView","behavior","scroll","Patient","User","CovidTestComponent","fields","view","orders","fetchData","selectedSearchField","selectedSearchFilter","getAllWithSort","selectedField","selectedOrder","getAllWithFilter","from","selectedSearchFilterFrom","to","selectedSearchFilterTo","getAllFilteredWithDate","fetchFilteredData","fetchFilteredDataWithDate","fetchOrderedData","res","selectedFieldMethod","selectedOrderMethod","DashboardComponent","PatientsComponent","filters","genders","selectedSearchFilterFromAge","selectedSearchFilterToAge","UsersComponent","loggedUserEmail","users","CovidApiService","Portugal","Countries","forEach","Country","CovidTestService","put","patientId","field","order","PatientsService","RolesService","SummaryService","TitleService","baseTitle","divider","page","setTitle","UiService","button","UsersService","environment","production","covidAPI","bootstrapModule","err"],"mappings":"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AAA,mBAAS,IAAAI,MAAA,KAAT;AAAwB,WAAxB;;AACvB;;AACC;;AACD;;AACD;;AAED;;AACD;;AACA;;AACC;;AACC;;AACC;;AAA0B;;AAAe;;AACzC;;AAAuB;;AAA6D;;AACpF;;AACC;;AAAG;;AAA6C;;AAChD;;AAEC;;AAAU;;AAAI;;AACd;;AACD;;AACD;;AACA;;AACC;;AACC;;AACC;;AAEA;;AACC;;AAAgB;;AAAmB;;AACnC;;AAAmB;;AAInB;;AACD;;AACD;;AAED;;AACA;;AACC;;AACC;;AAEA;;AACC;;AAAgB;;AAAgC;;AAChD;;AAAmB;;AAImB;;AACvC;;AACD;;AAED;;AAEA;;AACC;;AACC;;AAEA;;AACC;;AAAgB;;AAAmB;;AACnC;;AAAmB;;AAGnB;;AACD;;AACD;;AAED;;AACA;;AACC;;AACC;;AAEA;;AACC;;AAAgB;;AAAmB;;AACnC;;AAAmB;;AAE8B;;AAClD;;AACD;;AAED;;AACD;;AACD;;AAEA;;AACC;;AAA0B;;AAAsB;;AAChD;;AAAuB;;AAAqD;;AAE5E;;AACC;;AACC;;AACC;;AACA;;AACC;;AAAgB;;AAAK;;AAEtB;;AACD;;AAED;;AACA;;AACC;;AACC;;AAEA;;AACC;;AAAgB;;AAAU;;AAE3B;;AACD;;AAED;;AACA;;AACC;;AACC;;AAEA;;AACC;;AAAgB;;AAAQ;;AAEzB;;AACD;;AAED;;AACA;;AACC;;AACC;;AAEA;;AACC;;AAAgB;;AAAW;;AAE5B;;AACD;;AAED;;AACD;;AACD;;AAEA;;AACC;;AAA0B;;AAAiB;;AAC3C;;AAAuB;;AAAiF;;AAExG;;AACC;;AACC;;AACD;;AACA;;AACC;;AACD;;AAED;;AACD;;AAEA;;AACC;;AAA0B;;AAAkB;;AAC5C;;AAAuB;;AAA2D;;AAElF;;AACC;;AACC;;AAIA;;AACC;;AAAQ;;AAAO;;AACf;;AACC;;AACD;;AACD;;AACD;;AAED;;AACD;;AAEA;;AACC;;AACC;;AACC;;AACA;;AAAkB;;AAAqB;;AACxC;;AACA;;AACC;;AACC;;AACC;;AACC;;AAAU;;AAAK;;AACf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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChangeComponent } from './auth/change/change.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { ResetComponent } from './auth/reset/reset.component';\r\nimport { ScopeGuard } from './guards/scope/scope.guard';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { DefaultComponent } from './layout/default/default.component';\r\nimport { LandingPageComponent } from './layout/landing-page/landing-page.component';\r\nimport { CovidTestComponent } from './pages/covid-test/covid-test.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { PatientsComponent } from './pages/patients/patients.component';\r\nimport { UsersComponent } from './pages/users/users.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: LandingPageComponent,\r\n\t},\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: AuthComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: 'login',\r\n\t\t\t\tcomponent: LoginComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'reset-password',\r\n\t\t\t\tcomponent: ResetComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'change-password/:token',\r\n\t\t\t\tcomponent: ChangeComponent,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tpath: 'admin',\r\n\t\tcomponent: DefaultComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: DashboardComponent,\r\n\t\t\t\tcanActivate: [ScopeGuard],\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tscopes: ['--view-all'],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'patients',\r\n\t\t\t\tcomponent: PatientsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'covid-tests',\r\n\t\t\t\tcomponent: CovidTestComponent,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'users',\r\n\t\t\t\tcomponent: UsersComponent,\r\n\t\t\t\tcanActivate: [ScopeGuard],\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tscopes: ['--view-users'],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n\ttitle = 'COVID Tracking System';\r\n\r\n\tconstructor() {\r\n\t}\r\n}","<router-outlet></router-outlet>\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChangeComponent } from './auth/change/change.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { ResetComponent } from './auth/reset/reset.component';\r\nimport { ByDayComponent } from './components/charts/by-day/by-day.component';\r\nimport { ByGenderComponent } from './components/charts/by-gender/by-gender.component';\r\nimport { ByMonthComponent } from './components/charts/by-month/by-month.component';\r\nimport { ByStatusComponent } from './components/charts/by-status/by-status.component';\r\nimport { BySymptomsComponent } from './components/charts/by-symptoms/by-symptoms.component';\r\nimport { PtChartComponent } from './components/charts/pt-chart/pt-chart.component';\r\nimport { WorldChartComponent } from './components/charts/world-chart/world-chart.component';\r\nimport { CovidTestCreateComponent } from './components/dialogs/covid-test/covid-test-create/covid-test-create.component';\r\nimport { CovidTestDeleteComponent } from './components/dialogs/covid-test/covid-test-delete/covid-test-delete.component';\r\nimport { CovidTestEditComponent } from './components/dialogs/covid-test/covid-test-edit/covid-test-edit.component';\r\nimport { CovidTestInformationComponent } from './components/dialogs/covid-test/covid-test-information/covid-test-information.component';\r\nimport { DataByEmailComponent } from './components/dialogs/data-by-email/data-by-email.component';\r\nimport { PatientAddComponent } from './components/dialogs/patients/patient-add/patient-add.component';\r\nimport { PatientDeleteComponent } from './components/dialogs/patients/patient-delete/patient-delete.component';\r\nimport { PatientEditComponent } from './components/dialogs/patients/patient-edit/patient-edit.component';\r\nimport { PatientInfoComponent } from './components/dialogs/patients/patient-info/patient-info.component';\r\nimport { UpdatePasswordComponent } from './components/dialogs/users/update-password/update-password.component';\r\nimport { UserAddComponent } from './components/dialogs/users/user-add/user-add.component';\r\nimport { UserDeleteComponent } from './components/dialogs/users/user-delete/user-delete.component';\r\nimport { UserEditComponent } from './components/dialogs/users/user-edit/user-edit.component';\r\nimport { UserInfoComponent } from './components/dialogs/users/user-info/user-info.component';\r\nimport { CanUseDirective } from './directives/can-use/can-use.directive';\r\nimport { RoleEnableDirective } from './directives/role-enable/role-enable.directive';\r\nimport { ScopeGuard } from './guards/scope/scope.guard';\r\nimport { SessionLostInterceptor } from './interceptors/session-lost.interceptor';\r\nimport { AuthComponent } from './layout/auth/auth.component';\r\nimport { SidebarComponent } from './layout/default/components/sidebar/sidebar.component';\r\nimport { TopbarComponent } from './layout/default/components/topbar/topbar.component';\r\nimport { DefaultComponent } from './layout/default/default.component';\r\nimport { HeaderComponent } from './layout/landing-page/components/header/header.component';\r\nimport { LandingPageComponent } from './layout/landing-page/landing-page.component';\r\nimport { CovidTestComponent } from './pages/covid-test/covid-test.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { PatientsComponent } from './pages/patients/patients.component';\r\nimport { UsersComponent } from './pages/users/users.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tAuthComponent,\r\n\r\n\t\t// Landing Page\r\n\t\tLandingPageComponent,\r\n\t\tPtChartComponent,\r\n\t\tWorldChartComponent,\r\n\t\tHeaderComponent,\r\n\t\tDataByEmailComponent,\r\n\r\n\t\t// Admin Panel\r\n\t\tTopbarComponent,\r\n\t\tSidebarComponent,\r\n\t\tDefaultComponent,\r\n\t\tDashboardComponent,\r\n\t\tPatientsComponent,\r\n\t\tUsersComponent,\r\n\r\n\t\t// Dialogs\r\n\t\tUserEditComponent,\r\n\t\tUserDeleteComponent,\r\n\t\tUserInfoComponent,\r\n\t\tUserAddComponent,\r\n\t\tUpdatePasswordComponent,\r\n\t\tPatientDeleteComponent,\r\n\t\tPatientInfoComponent,\r\n\t\tPatientEditComponent,\r\n\t\tPatientAddComponent,\r\n\r\n\t\t// Auth\r\n\t\tLoginComponent,\r\n\t\tChangeComponent,\r\n\t\tResetComponent,\r\n\r\n\t\tPatientDeleteComponent,\r\n\t\tPatientInfoComponent,\r\n\t\tPatientEditComponent,\r\n\t\tPatientAddComponent,\r\n\t\tCanUseDirective,\r\n\t\tByStatusComponent,\r\n\t\tByDayComponent,\r\n\t\tByMonthComponent,\r\n\t\tBySymptomsComponent,\r\n\r\n\t\t// Directives\r\n\t\tCanUseDirective,\r\n\t\tRoleEnableDirective,\r\n\t\tPatientEditComponent,\r\n\t\tPatientAddComponent,\r\n\t\tCovidTestComponent,\r\n\t\tCovidTestCreateComponent,\r\n\t\tCovidTestDeleteComponent,\r\n\t\tCovidTestEditComponent,\r\n\t\tCovidTestInformationComponent,\r\n\t\tByGenderComponent\r\n\t],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserModule,\r\n\t\tMatIconModule,\r\n\t\tHttpClientModule,\r\n\t\tAppRoutingModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tChartsModule,\r\n\t\tMatInputModule,\r\n\t\tMatButtonModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatCardModule,\r\n\t\tMatMenuModule,\r\n\t\tMatGridListModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatTabsModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatListModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatDialogModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatDatepickerModule,\r\n\t\tDragDropModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatBadgeModule,\r\n\t\tMatBottomSheetModule,\r\n\t\tMatButtonToggleModule,\r\n\t\tMatChipsModule,\r\n\t\tMatStepperModule,\r\n\t\tMatDividerModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatRadioModule,\r\n\t\tMatRippleModule,\r\n\t\tMatSelectModule,\r\n\t\tMatSliderModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatSortModule,\r\n\t\tMatTableModule,\r\n\t\tMatTreeModule,\r\n\t\tScrollingModule,\r\n\t\tNg2SearchPipeModule\r\n\t],\r\n\tproviders: [\r\n\t\tScopeGuard,\r\n\t\t{\r\n\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\tuseClass: SessionLostInterceptor,\r\n\t\t\tmulti: true\r\n\t\t},\r\n\r\n\t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SessionService } from '../session.service';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n\tisErrorState(\r\n\t\tcontrol: FormControl | null,\r\n\t\tform: FormGroupDirective | NgForm | null\r\n\t): boolean {\r\n\t\tconst invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n\t\tconst invalidParent = !!(\r\n\t\t\tcontrol &&\r\n\t\t\tcontrol.parent &&\r\n\t\t\tcontrol.parent.invalid &&\r\n\t\t\tcontrol.parent.dirty\r\n\t\t);\r\n\r\n\t\treturn invalidCtrl || invalidParent;\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'app-change',\r\n\ttemplateUrl: './change.component.html',\r\n\tstyleUrls: ['./change.component.sass'],\r\n})\r\nexport class ChangeComponent implements OnInit {\r\n\tchangeForm: FormGroup;\r\n\r\n\tprivate token: string;\r\n\tmatcher = new MyErrorStateMatcher();\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate titleService: TitleService,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate router: Router\r\n\t) {\r\n\t\tthis.titleService.setPageTitle(\"Change Password\")\r\n\r\n\t\tthis.changeForm = this.formBuilder.group(\r\n\t\t\t{\r\n\t\t\t\tnewPassword: ['', [Validators.required]],\r\n\t\t\t\tconfirmPassword: [''],\r\n\t\t\t},\r\n\t\t\t{ validator: this.checkPasswords }\r\n\t\t);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.token = this.activatedRoute.snapshot.paramMap.get('token');\r\n\t}\r\n\r\n\tcheckPasswords(group: FormGroup) {\r\n\t\t// here we have the 'passwords' group\r\n\t\tlet pass = group.controls.newPassword.value;\r\n\t\tlet confirmPass = group.controls.confirmPassword.value;\r\n\r\n\t\treturn pass === confirmPass ? null : { notSame: true };\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget changeFormControl() {\r\n\t\treturn this.changeForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.changeForm.valid) {\r\n\t\t\tthis.session\r\n\t\t\t\t.change(\r\n\t\t\t\t\tthis.changeForm.get('newPassword').value,\r\n\t\t\t\t\tthis.changeForm.get('confirmPassword').value,\r\n\t\t\t\t\tthis.token\r\n\t\t\t\t)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar('Password changed with success');\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\r\n\t\t\t\t\t\tlet errorMessage = error.error.message || \"Token expired. Please send a new request.\"\r\n\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(errorMessage);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields and try again.\")\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-card-title>Change Password</mat-card-title>\r\n<form [formGroup]=\"changeForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-form-field>\r\n\t\t<mat-label>New Password</mat-label>\r\n\t\t<input matInput placeholder=\"Password\" type=\"password\" formControlName=\"newPassword\" name=\"newPassword\">\r\n\t\t<mat-error [hidden]=\"(changeFormControl.newPassword.touched) && changeFormControl.newPassword.errors?.required\">\r\n\t\t\tNew Password is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>lock</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Confirm Password</mat-label>\r\n\t\t<input matInput placeholder=\"Password\" type=\"password\" formControlName=\"confirmPassword\" name=\"confirmPassword\"\r\n\t\t\t[errorStateMatcher]=\"matcher\">\r\n\t\t<mat-error [hidden]=\"changeForm.hasError('notSame')\">\r\n\t\t\tPasswords do not match\r\n\t\t</mat-error>\r\n\t\t<mat-error\r\n\t\t\t[hidden]=\"(changeFormControl.confirmPassword.touched) && changeFormControl.confirmPassword.errors?.required\">\r\n\t\t\tConfirm Password is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>lock</mat-icon>\r\n\t</mat-form-field>\r\n\t<button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!changeForm.valid\" class=\"change-button\">\r\n\t\tChange\r\n\t</button>\r\n</form>\r\n<div class=\"text-right mt-20px\">\r\n\t<a routerLink=\"/login\" mat-button color=\"primary\">\r\n\t\tLogin\r\n\t\t<mat-icon>keyboard_arrow_right</mat-icon>\r\n\t</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyleUrls: ['./login.component.sass'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\tloginForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tpublic router: Router,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate fBuild: FormBuilder,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle(\"Sing In\")\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tconst me = this.session.me()\r\n\r\n\t\tif (me) {\r\n\t\t\tthis.router.navigateByUrl('/admin')\r\n\t\t}\r\n\r\n\t\tthis.loginForm = new FormGroup({\r\n\t\t\t'email': new FormControl('', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]),\r\n\t\t\t'password': new FormControl('', [Validators.required])\r\n\t\t});\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget loginFormControl() {\r\n\t\treturn this.loginForm.controls;\r\n\t}\r\n\r\n\t// When submit form\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.loginForm.valid) {\r\n\r\n\t\t\tconst user = {\r\n\t\t\t\temail: this.loginForm.get('email').value,\r\n\t\t\t\tpassword: this.loginForm.get('password').value\r\n\t\t\t};\r\n\r\n\t\t\t// Send POST Request to API\r\n\t\t\tthis.session\r\n\t\t\t\t.login(user.email, user.password)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t(user) => {\r\n\t\t\t\t\t\tthis.router.navigateByUrl('/admin')\r\n\t\t\t\t\t\tthis.uiService.showSnackBar('Login with success!')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(((typeof error.error.message != \"object\") ? error.error.message : \"Sorry but have error on login. Try again later please.\") || \"Sorry but have error on login. Try again later please.\")\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar('Please validate all fields on form.')\r\n\t\t}\r\n\t}\r\n}\r\n","<mat-card-title>Sign In</mat-card-title>\r\n<form [formGroup]=\"loginForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-form-field>\r\n\t\t<mat-label>Your Email</mat-label>\r\n\t\t<input matInput placeholder=\"Email\" name=\"email\" formControlName=\"email\">\r\n\t\t<mat-error\r\n\t\t\t[hidden]=\"(loginFormControl.email.touched) && (loginFormControl.email.errors?.email ||  loginFormControl.email.errors?.pattern)\">\r\n\t\t\tInvalid email.\r\n\t\t</mat-error>\r\n\t\t<mat-error [hidden]=\"(loginFormControl.email.touched) && loginFormControl.email.errors?.required\">\r\n\t\t\tEmail is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Your Password</mat-label>\r\n\t\t<input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\" name=\"password\">\r\n\t\t<mat-error [hidden]=\"(loginFormControl.password.touched) && loginFormControl.password.errors?.required\">\r\n\t\t\tPassword is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>lock</mat-icon>\r\n\t</mat-form-field>\r\n\t<button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"login-button\">\r\n\t\tSign In\r\n\t</button>\r\n</form>\r\n<div class=\"text-right mt-20px\">\r\n\t<a routerLink=\"/reset-password\" mat-button color=\"primary\">\r\n\t\tReset Password\r\n\t\t<mat-icon>keyboard_arrow_right</mat-icon>\r\n\t</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Component({\r\n\tselector: 'app-reset',\r\n\ttemplateUrl: './reset.component.html',\r\n\tstyleUrls: ['./reset.component.sass']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\tresetForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tprivate titleService: TitleService,\r\n\t\tprivate uiService: UiService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('Reset Password')\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.resetForm = new FormGroup({\r\n\t\t\t'email': new FormControl('', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t])\r\n\t\t})\r\n\t}\r\n\r\n\tget resetFormControl() {\r\n\t\treturn this.resetForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\t//Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.resetForm.valid) {\r\n\t\t\tconst email = this.resetForm.get('email').value;\r\n\r\n\t\t\tthis.session\r\n\t\t\t\t.reset(email)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(`An email was sent to ${email} with sucess!`)\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tthis.uiService.showSnackBar(error.error.message)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Upps! Have any error, please validate all fields on form.\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n","<mat-card-title>Reset Password</mat-card-title>\r\n\r\n<form [formGroup]=\"resetForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-form-field>\r\n\t\t<mat-label>Your Email</mat-label>\r\n\t\t<input matInput placeholder=\"Email\" name=\"email\" formControlName=\"email\">\r\n\t\t<mat-error\r\n\t\t\t[hidden]=\"(resetFormControl.email.touched) && (resetFormControl.email.errors?.email ||  resetFormControl.email.errors?.pattern)\">\r\n\t\t\tInvalid email.\r\n\t\t</mat-error>\r\n\r\n\t\t<mat-error *ngIf=\"(resetFormControl.email.touched) && resetFormControl.email.errors?.required\">\r\n\t\t\tEmail is required\r\n\t\t</mat-error>\r\n\t\t<mat-icon matPrefix>email</mat-icon>\r\n\r\n\t</mat-form-field>\r\n\t<button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!resetForm.valid\" class=\"reset-button\">\r\n\t\tReset Password\r\n\t</button>\r\n</form>\r\n<div class=\"text-right mt-20px\">\r\n\t<a routerLink=\"/login\" mat-button color=\"primary\">\r\n\t\tLogin\r\n\t\t<mat-icon>keyboard_arrow_right</mat-icon>\r\n\t</a>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from \"rxjs/operators\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\n\r\nexport class SessionService {\r\n\r\n\texpired: boolean\r\n\tprivate session: any = localStorage.getItem(\"user\")\r\n\t\t? JSON.parse(localStorage.getItem(\"user\"))\r\n\t\t: null\r\n\r\n\r\n\tconstructor(public http: HttpClient) {\r\n\t}\r\n\r\n\tlogin(email: String, password: String) {\r\n\t\tconst request = this.http\r\n\t\t\t.post(\r\n\t\t\t\t`${API_URL}/login`,\r\n\t\t\t\t{\r\n\t\t\t\t\temail, password\r\n\t\t\t\t},\r\n\t\t\t\thttpOptions\r\n\t\t\t)\r\n\t\t\t.pipe(share());\r\n\r\n\t\trequest.subscribe(\r\n\t\t\t(user) => {\r\n\t\t\t\tthis.session = user\r\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(user))\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n\tme() {\r\n\t\treturn this.session\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.expired = false;\r\n\t\tthis.session = null\r\n\t\tlocalStorage.removeItem('user')\r\n\r\n\t\tconst request = this.http.post(`${API_URL}/logout`, httpOptions).subscribe()\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n\treset(email: string) {\r\n\r\n\r\n\t\tconst request = this.http\r\n\t\t\t.post(`${API_URL}/reset-password`, { email }, httpOptions)\r\n\t\t\t.pipe(share());\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n\tclearSession() {\r\n\t\tthis.expired = true;\r\n\t\tthis.session = null\r\n\t\tlocalStorage.removeItem('user')\r\n\t}\r\n\r\n\tchange(newPassword: string, confirmPassword: string, token: string): Observable<any> {\r\n\r\n\t\tconst request = this.http\r\n\t\t\t.post(`${API_URL}/change-password/${token}`, {\r\n\t\t\t\tnewPassword, confirmPassword\r\n\t\t\t}, httpOptions)\r\n\t\t\t.pipe(share());\r\n\r\n\t\treturn request\r\n\t}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n@Component({\r\n\tselector: 'app-by-day',\r\n\ttemplateUrl: './by-day.component.html',\r\n\tstyleUrls: ['./by-day.component.sass']\r\n})\r\nexport class ByDayComponent implements OnInit {\r\n\r\n\tchartData: ChartDataSets[];\r\n\tchartLabels: number[] = [];\r\n\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\ttooltips: {\r\n\t\t\tenabled: true,\r\n\t\t\tmode: 'single',\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function (tooltipItem, data) {\r\n\t\t\t\t\treturn `Day ${data.labels[tooltipItem[0].index]}`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tdisplay: false,\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\tpublic chartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: '#56a0d3',\r\n\t\t\tborderColor: '#56a0d3',\r\n\t\t\tpointBackgroundColor: '#56a0d3',\r\n\t\t\tpointBorderColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBackgroundColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBorderColor: '#56a0d3'\r\n\t\t},\r\n\t];\r\n\r\n\tpublic chartLegend = true;\r\n\tpublic chartType = 'line';\r\n\tpublic chart = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tdaysInMonth(month, year) {\r\n\t\treturn new Date(year, month, 0).getDate();\r\n\t}\r\n\r\n\r\n\tngOnInit(): void {\r\n\t\tconst actualMonth = (new Date().getMonth() + 1);\r\n\t\tconst actualYear = (new Date()).getFullYear();\r\n\t\tconst numberOfDays = this.daysInMonth(actualMonth, actualYear);\r\n\t\tconst numberOfTests: number[] = [numberOfDays];\r\n\r\n\t\tthis.summaryService.getByDay().subscribe(data => {\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tfor (var i = 0; i < numberOfDays; i++) {\r\n\t\t\t\t\tnumberOfTests[i] = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.map((element) => {\r\n\t\t\t\t\tif ((new Date(element.date).getMonth() + 1) == actualMonth && (new Date(element.date)).getFullYear() == actualYear) {\r\n\t\t\t\t\t\tnumberOfTests[(new Date(element.date).getDate()) - 1] += element.numberOfTests\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.chartData = [\r\n\t\t\t\t\t{ data: numberOfTests, label: 'Number of COVID Tests' },\r\n\t\t\t\t];\r\n\r\n\t\t\t\tfor (i = 1; i <= numberOfDays; i++) {\r\n\t\t\t\t\tthis.chartLabels.push(i)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.chart = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chart = false;\r\n\t\t\t}\r\n\r\n\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","<div>\r\n\t<canvas *ngIf=\"chart\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [options]=\"chartOptions\"\r\n\t\t[colors]=\"chartColors\" [legend]=\"chartLegend\" [chartType]=\"chartType\" height=\"100px\">\r\n\t</canvas>\r\n\t<h3 *ngIf=\"!chart\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-by-gender',\r\n\ttemplateUrl: './by-gender.component.html',\r\n\tstyleUrls: ['./by-gender.component.sass']\r\n})\r\nexport class ByGenderComponent implements OnInit {\r\n\t// Chart Options\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: false, //this will remove only the label\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\t// Chart Labels\r\n\tpublic chartLabels: Label[] = [\"Gender\"];\r\n\r\n\t// Chart Type\r\n\tpublic chartType: ChartType = \"bar\";\r\n\r\n\t// Chart Colors\r\n\tpublic chartColors = [{\r\n\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\tpointBorderColor: '#fff',\r\n\t\tpointHoverBackgroundColor: '#fff',\r\n\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t}]\r\n\r\n\t// Chart Data\r\n\tpublic chartData;\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.summaryService.getByGender().subscribe((data) => {\r\n\t\t\tif (data.length > 0) {\r\n\r\n\t\t\t\tconst backgroundColor = [\r\n\t\t\t\t\t'#56a0d3',\r\n\t\t\t\t\t'#ff9933',\r\n\t\t\t\t\t'#0a8ea0',\r\n\t\t\t\t\t'#3369e7',\r\n\t\t\t\t\t'#146eb4',\r\n\t\t\t\t\t'#49c0b6',\r\n\t\t\t\t\t'#ee6123',\r\n\t\t\t\t\t'#075aaa',\r\n\t\t\t\t];\r\n\t\t\t\tlet dataArray = [];\r\n\t\t\t\tdata.map((element, index) => {\r\n\r\n\t\t\t\t\telement.gender =\r\n\t\t\t\t\t\telement.gender.charAt(0).toUpperCase() + element.gender.slice(1);\r\n\r\n\t\t\t\t\tdataArray.push({\r\n\t\t\t\t\t\tlabel: element.gender,\r\n\t\t\t\t\t\tdata: [element.count],\r\n\t\t\t\t\t\tbackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t\thoverBackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = dataArray;\r\n\t\t\t\tthis.chartReady = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chartReady = false\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n}","<div>\r\n\t<canvas *ngIf=\"chartReady\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [chartType]=\"chartType\"\r\n\t\t[options]=\"chartOptions\" [colors]=\"chartColors\">\r\n\t</canvas>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n@Component({\r\n\tselector: 'app-by-month',\r\n\ttemplateUrl: './by-month.component.html',\r\n\tstyleUrls: ['./by-month.component.sass']\r\n})\r\nexport class ByMonthComponent implements OnInit {\r\n\r\n\tpublic chartData: ChartDataSets[];\r\n\tpublic chartLabels: Label[] = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tdisplay: false,\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\tpublic chartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: '#56a0d3',\r\n\t\t\tborderColor: '#56a0d3',\r\n\t\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\t\tpointBorderColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBackgroundColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t? 'white'\r\n\t\t\t\t: 'black',\r\n\t\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t\t},\r\n\t];\r\n\r\n\tpublic chartLegend = true;\r\n\tpublic chartType = 'line';\r\n\tpublic chart = false;\r\n\r\n\r\n\tconstructor(private summaryService: SummaryService) {\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tconst actualYear = new Date().getFullYear()\r\n\t\tconst numberOfMonths = 12;\r\n\t\tconst numberOfTests: number[] = [numberOfMonths];\r\n\r\n\t\tthis.summaryService.getByDay().subscribe(data => {\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tfor (var i = 0; i < numberOfMonths; i++) {\r\n\t\t\t\t\tnumberOfTests[i] = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.map(element => {\r\n\t\t\t\t\tif ((new Date(element.date)).getFullYear() == actualYear) {\r\n\t\t\t\t\t\tnumberOfTests[new Date(element.date).getMonth()] += element.numberOfTests;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = [\r\n\t\t\t\t\t{ data: numberOfTests, label: 'Number of COVID Tests by Month' },\r\n\t\t\t\t];\r\n\r\n\t\t\t\tthis.chart = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chart = false;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\r\n}","<div>\r\n\t<canvas *ngIf=\"chart\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [options]=\"chartOptions\"\r\n\t\t[colors]=\"chartColors\" [legend]=\"chartLegend\" [chartType]=\"chartType\" height=\"100px\">\r\n\t</canvas>\r\n\t<h3 *ngIf=\"!chart\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-by-status',\r\n\ttemplateUrl: './by-status.component.html',\r\n\tstyleUrls: ['./by-status.component.sass']\r\n})\r\nexport class ByStatusComponent implements OnInit {\r\n\t// Chart Options\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: false, //this will remove only the label\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\t// Chart Labels\r\n\tpublic chartLabels: Label[] = [\"Status\"];\r\n\r\n\t// Chart Type\r\n\tpublic chartType: ChartType = \"bar\";\r\n\r\n\t// Chart Colors\r\n\tpublic chartColors = [{\r\n\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\tpointBorderColor: '#fff',\r\n\t\tpointHoverBackgroundColor: '#fff',\r\n\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t}]\r\n\r\n\t// Chart Data\r\n\tpublic chartData;\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.summaryService.getByStatus().subscribe((data) => {\r\n\t\t\tif (data.length > 0) {\r\n\r\n\t\t\t\tconst backgroundColor = [\r\n\t\t\t\t\t'#56a0d3',\r\n\t\t\t\t\t'#ff9933',\r\n\t\t\t\t\t'#0a8ea0',\r\n\t\t\t\t\t'#3369e7',\r\n\t\t\t\t\t'#146eb4',\r\n\t\t\t\t\t'#49c0b6',\r\n\t\t\t\t\t'#ee6123',\r\n\t\t\t\t\t'#075aaa',\r\n\t\t\t\t];\r\n\t\t\t\tlet dataArray = [];\r\n\t\t\t\tdata.map((element, index) => {\r\n\r\n\t\t\t\t\telement.status =\r\n\t\t\t\t\t\telement.status.charAt(0).toUpperCase() + element.status.slice(1);\r\n\r\n\t\t\t\t\tdataArray.push({\r\n\t\t\t\t\t\tlabel: element.status,\r\n\t\t\t\t\t\tdata: [element.count],\r\n\t\t\t\t\t\tbackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t\thoverBackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = dataArray;\r\n\t\t\t\tthis.chartReady = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chartReady = false\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","<div>\r\n\t<canvas *ngIf=\"chartReady\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [chartType]=\"chartType\"\r\n\t\t[options]=\"chartOptions\" [colors]=\"chartColors\">\r\n\t</canvas>\r\n\t<h3 *ngIf=\"!chartReady\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { SummaryService } from '../../../services/summary/summary.service';\r\n\r\n@Component({\r\n\tselector: 'app-by-symptoms',\r\n\ttemplateUrl: './by-symptoms.component.html',\r\n\tstyleUrls: ['./by-symptoms.component.sass'],\r\n})\r\nexport class BySymptomsComponent implements OnInit {\r\n\t// Chart Options\r\n\tpublic chartOptions: ChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t? 'white'\r\n\t\t\t\t\t: 'black',\r\n\t\t\t},\r\n\t\t},\r\n\t\tresponsive: true,\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\txAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tdisplay: false, //this will remove only the label\r\n\t\t\t\t\t\tfontColor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\tcolor: window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\t\t\t\t\t\t\t? 'white'\r\n\t\t\t\t\t\t\t: 'black',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\r\n\t// Chart Labels\r\n\tpublic chartLabels: Label[] = ['Symptom'];\r\n\r\n\t// Chart Type\r\n\tpublic chartType: ChartType = 'bar';\r\n\r\n\t// Chart Colors\r\n\tpublic chartColors = [{\r\n\t\tpointBackgroundColor: 'rgba(148,159,177,1)',\r\n\t\tpointBorderColor: '#fff',\r\n\t\tpointHoverBackgroundColor: '#fff',\r\n\t\tpointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n\t}]\r\n\r\n\t// Chart Data\r\n\tpublic chartData;\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\tconstructor(private summaryService: SummaryService) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.summaryService.getBySymptoms().subscribe((data) => {\r\n\t\t\tif (data.length > 0) {\r\n\r\n\t\t\t\tconst backgroundColor = [\r\n\t\t\t\t\t'#56a0d3',\r\n\t\t\t\t\t'#0a8ea0',\r\n\t\t\t\t\t'#3369e7',\r\n\t\t\t\t\t'#146eb4',\r\n\t\t\t\t\t'#49c0b6',\r\n\t\t\t\t\t'#ff9933',\r\n\t\t\t\t\t'#ee6123',\r\n\t\t\t\t\t'#075aaa',\r\n\t\t\t\t];\r\n\t\t\t\tlet dataArray = [];\r\n\r\n\t\t\t\tdata.map((element, index) => {\r\n\t\t\t\t\telement.symptom =\r\n\t\t\t\t\t\telement.symptom.charAt(0).toUpperCase() + element.symptom.slice(1);\r\n\t\t\t\t\tdataArray.push({\r\n\t\t\t\t\t\tlabel: element.symptom,\r\n\t\t\t\t\t\tdata: [element.count],\r\n\t\t\t\t\t\tbackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t\thoverBackgroundColor: backgroundColor[index || 0],\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.chartData = dataArray;\r\n\t\t\t\tthis.chartReady = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.chartReady = false\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<div>\r\n\t<canvas *ngIf=\"chartReady\" baseChart [datasets]=\"chartData\" [labels]=\"chartLabels\" [chartType]=\"chartType\"\r\n\t\t[options]=\"chartOptions\" [colors]=\"chartColors\">\r\n\t</canvas>\r\n\r\n\t<h3 *ngIf=\"!chartReady\">No data to show!</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CovidApiService } from '../../../services/covid-api/covid-api.service';\r\n\r\n@Component({\r\n\tselector: 'app-pt-chart',\r\n\ttemplateUrl: './pt-chart.component.html',\r\n\tstyleUrls: ['./pt-chart.component.sass'],\r\n})\r\nexport class PtChartComponent implements OnInit {\r\n\t// Status of chart\r\n\tpublic chartReady = false;\r\n\r\n\t// Labels\r\n\tpublic pieChartLabels = ['Total Recovered', 'Total Death', 'Total Confirmed'];\r\n\r\n\t// Chart Type\r\n\tpublic pieChartType = 'pie';\r\n\r\n\t// Data to chart\r\n\tpublic pieChartData;\r\n\r\n\t// Options\r\n\tpublic pieChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: (window.matchMedia('(prefers-color-scheme: dark)').matches) ? \"white\" : \"black\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Last update\r\n\tpublic updatedAt;\r\n\r\n\t// Set colors\r\n\tpublic pieChartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: ['#0099cc', '#ff9933', '#146eb4'],\r\n\t\t},\r\n\t];\r\n\r\n\tconstructor(private covidApiService: CovidApiService) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.covidApiService.getSummary().subscribe((data) => {\r\n\t\t\tconst portugalSummary = this.covidApiService.getPortugalSummary(data);\r\n\t\t\tthis.pieChartData = [\r\n\t\t\t\tportugalSummary.TotalRecovered,\r\n\t\t\t\tportugalSummary.TotalDeaths,\r\n\t\t\t\tportugalSummary.TotalConfirmed\r\n\t\t\t];\r\n\t\t\tthis.updatedAt = new Date(portugalSummary.Date).toLocaleString();\r\n\t\t\tthis.chartReady = true;\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-card class=\"chart-card\">\r\n\t<mat-card-header>\r\n\t\t<mat-card-title>Portugal</mat-card-title>\r\n\t\t<mat-card-subtitle>Updated at: {{ updatedAt }}</mat-card-subtitle>\r\n\t</mat-card-header>\r\n\t<mat-card-content>\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"chart\" *ngIf=\"chartReady\">\r\n\t\t\t\t\t<canvas baseChart [data]=\"pieChartData\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\"\r\n\t\t\t\t\t\t[colors]=\"pieChartColors\" [options]=\"pieChartOptions\">\r\n\t\t\t\t\t</canvas>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CovidApiService } from '../../../services/covid-api/covid-api.service';\r\n\r\n@Component({\r\n\tselector: 'app-world-chart',\r\n\ttemplateUrl: './world-chart.component.html',\r\n\tstyleUrls: ['./world-chart.component.sass']\r\n})\r\nexport class WorldChartComponent implements OnInit {\r\n\r\n\t// Chart Status\r\n\tpublic chartReady = false;\r\n\r\n\t// Chart Labels\r\n\tpublic pieChartLabels = ['Total Recovered', 'Total Death', 'Total Confirmed'];\r\n\r\n\t// Chart Type\r\n\tpublic pieChartType = 'pie';\r\n\r\n\t// Chart colors\r\n\tpublic pieChartColors = [\r\n\t\t{\r\n\t\t\tbackgroundColor: ['#0099cc', '#ff9933', '#146eb4'],\r\n\t\t},\r\n\t];\r\n\r\n\t// Chart Data\r\n\tpublic pieChartData;\r\n\r\n\t// Chart options\r\n\tpublic pieChartOptions = {\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tfontColor: (window.matchMedia('(prefers-color-scheme: dark)').matches) ? \"white\" : \"black\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Last Update\r\n\tpublic updatedAt;\r\n\r\n\tconstructor(private covidApiService: CovidApiService) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.covidApiService.getSummary().subscribe((summary) => {\r\n\t\t\tthis.pieChartData = [\r\n\t\t\t\tsummary[0].Global.TotalRecovered,\r\n\t\t\t\tsummary[0].Global.TotalDeaths,\r\n\t\t\t\tsummary[0].Global.TotalConfirmed,\r\n\t\t\t];\r\n\t\t\tthis.updatedAt = new Date(summary[0].Date).toLocaleString();\r\n\t\t\tthis.chartReady = true;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n","<mat-card class=\"chart-card\">\r\n\t<mat-card-header>\r\n\t\t<mat-card-title>Rest of the World</mat-card-title>\r\n\t\t<mat-card-subtitle>Updated at: {{ updatedAt }}</mat-card-subtitle>\r\n\t</mat-card-header>\r\n\t<mat-card-content>\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"chart\" *ngIf=\"chartReady\">\r\n\t\t\t\t\t<canvas baseChart [data]=\"pieChartData\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\"\r\n\t\t\t\t\t\t[colors]=\"pieChartColors\" [options]=\"pieChartOptions\">\r\n\t\t\t\t\t</canvas>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</mat-card-content>\r\n</mat-card>\r\n","import { UiService } from '../../../../services/ui/ui.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CovidTest } from '../../../../models/covid-test.model';\r\nimport { CovidTestService } from '../../../../services/covid-test/covid-test.service';\r\nimport { PatientsService } from '../../../../services/patients/patients.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'covid-test-create',\r\n\ttemplateUrl: './covid-test-create.component.html',\r\n\tstyleUrls: ['./covid-test-create.component.sass']\r\n})\r\nexport class CovidTestCreateComponent implements OnInit {\r\n\tpublic data: CovidTest;\r\n\tpublic covidTestForm: FormGroup;\r\n\tpublic patients: any[] = [];\r\n\tpublic patientsForm = new FormControl();\r\n\tpublic filteredOptions: Observable<any[]>;\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic covidTest: CovidTestService,\r\n\t\tpublic patientsService: PatientsService,\r\n\t\tpublic uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestCreateComponent>\r\n\t) { }\r\n\r\n\tfilterValues(value: string): any[] {\r\n\t\treturn this.patients.filter(option => option.name.toLowerCase().indexOf(value.toLowerCase()) === 0);\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget covidTestFormControl() {\r\n\t\treturn this.covidTestForm.controls;\r\n\t}\r\n\r\n\tdisplayFn(object?: any): string | undefined {\r\n\t\treturn object ? `${object.name} (${object.patientNumber})` : undefined;\r\n\t}\r\n\r\n\r\n\tonSubmit(evt) {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.covidTestForm.valid) {\r\n\r\n\t\t\tconst formDate = new Date(this.covidTestForm.get('scheduleDate').value);\r\n\r\n\t\t\tconst formData = {\r\n\t\t\t\tpatient: this.covidTestForm.get('patient').value.id,\r\n\t\t\t\tdate: new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`),\r\n\t\t\t\tnotes: this.covidTestForm.get('notes').value,\r\n\t\t\t};\r\n\r\n\t\t\tthis.covidTest.create(formData).subscribe((success) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: \"COVID Test created with success!\",\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tconst errorMessage = error.error.message\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: errorMessage,\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.patientsService.getAll().subscribe((patients) => {\r\n\t\t\tpatients.map((patient) => {\r\n\t\t\t\tthis.patients.push({ name: patient.name, patientNumber: patient.patientNumber, id: patient._id });\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tthis.covidTestForm = this.formBuilder.group({\r\n\t\t\tpatient: ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\tscheduleDate: ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\tnotes: ['', []],\r\n\t\t})\r\n\r\n\t\tthis.filteredOptions = this.covidTestForm.get('patient').valueChanges.pipe(\r\n\t\t\tstartWith<string | any>(''),\r\n\t\t\tmap(val => (typeof val === 'string' ? val : val.name)),\r\n\t\t\tmap(name => (name ? this.filterValues(name) : this.patients.slice()))\r\n\t\t);\r\n\r\n\t}\r\n}\r\n","<h2 mat-dialog-title>Create</h2>\r\n\r\n<form [formGroup]=\"covidTestForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<input type=\"text\" matInput formControlName=\"patient\" placeholder=\"Patient Name (Patient Number)\"\r\n\t\t\t\t[matAutocomplete]=\"auto\">\r\n\t\t\t<mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}} <small>({{ option.patientNumber }})</small>\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-autocomplete>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(covidTestFormControl.patient.touched) && covidTestFormControl.patient.errors?.required\">\r\n\t\t\t\tPatient is required\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Schedule Date</mat-label>\r\n\t\t\t<input matInput [matDatepicker]=\"scheduleDate\" formControlName=\"scheduleDate\">\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"scheduleDate\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #scheduleDate></mat-datepicker>\r\n\t\t\t<mat-icon matPrefix>today</mat-icon>\r\n\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(covidTestFormControl.scheduleDate.touched) && covidTestFormControl.scheduleDate.errors?.required\">\r\n\t\t\t\tSchedule Date is required\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Notes</mat-label>\r\n\t\t\t<textarea matInput placeholder=\"Notes\" formControlName=\"notes\"></textarea>\r\n\t\t\t<mat-icon matPrefix>notes</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"primary\" [disabled]=\"!covidTestForm.valid\">Save</button>\r\n\t\t<button mat-button color=\"warn\" type=\"button\" (click)=\"onClose()\">Cancel</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CovidTestService } from '../../../../services/covid-test/covid-test.service';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test-delete',\r\n\ttemplateUrl: './covid-test-delete.component.html',\r\n\tstyleUrls: ['./covid-test-delete.component.sass']\r\n})\r\nexport class CovidTestDeleteComponent implements OnInit {\r\n\r\n\tpublic covidTest\r\n\r\n\tconstructor(\r\n\t\tpublic covidTestService: CovidTestService,\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestDeleteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data\r\n\t) {\r\n\t\tthis.covidTest = data\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tlet response: object = {}\r\n\r\n\t\tthis.covidTestService.getOneAndDelete(this.covidTest[\"_id\"]).subscribe(() => {\r\n\t\t\tresponse[\"message\"] = \"COVID Test deleted with success!\"\r\n\t\t\tresponse[\"status\"] = true\r\n\t\t}, (error) => {\r\n\t\t\tlet codeMessage = error.error.message\r\n\r\n\t\t\tresponse[\"message\"] = codeMessage\r\n\t\t\tresponse[\"status\"] = false\r\n\t\t})\r\n\r\n\t\tthis.dialogRef.close(response)\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<h2 class=\"accent-color\">\r\n\t\t<mat-icon >delete</mat-icon>\r\n\t\tYou want delete COVID Test?\r\n\t</h2>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n\t\t<mat-icon>check</mat-icon>\r\n\t\tYes\r\n\t</button>\r\n\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tNo\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CovidTest } from '../../../../models/covid-test.model';\r\nimport { CovidTestService } from '../../../../services/covid-test/covid-test.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test-edit',\r\n\ttemplateUrl: './covid-test-edit.component.html',\r\n\tstyleUrls: ['./covid-test-edit.component.sass']\r\n})\r\nexport class CovidTestEditComponent implements OnInit {\r\n\tcovidTest: CovidTest;\r\n\tcovidTestForm: FormGroup;\r\n\tfile: File = null\r\n\t// Default Status\r\n\tstatus: string[] = ['pending', 'in Progress', 'finished', 'waiting Result'];\r\n\tresults: string[] = ['positive', 'negative', 'inconclusive'];\r\n\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic covidTests: CovidTestService,\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestEditComponent>,\r\n\t\tprivate uiService: UiService,\r\n\t\t@Inject(MAT_DIALOG_DATA) data\r\n\t) {\r\n\t\tthis.covidTest = data;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.covidTestForm = this.formBuilder.group({\r\n\t\t\t'notes': [this.covidTest.notes, []],\r\n\t\t\t'scheduleDate': [new Date(this.covidTest.date), [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'status': [this.covidTest.status, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'result': [this.covidTest.result, []],\r\n\t\t\t'file': ['', []]\r\n\t\t});\r\n\t}\r\n\r\n\tonFileSelected(e) {\r\n\t\tthis.file = <File>(e.target.files || [])[0]\r\n\t}\r\n\r\n\tstatusValue() {\r\n\t\treturn this.covidTestForm.get('status').value || '';\r\n\t}\r\n\r\n\tisUpdateValid() {\r\n\t\tif (!this.covidTestForm.valid) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.covidTestForm.get('status').value === 'finished' && (this.covidTestForm.get('result').value === null || this.file === null)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsave(evt) {\r\n\t\tevt.preventDefault()\r\n\r\n\t\tif (this.covidTestForm.valid) {\r\n\t\t\tlet formDate: Date = new Date(this.covidTestForm.get('scheduleDate').value)\r\n\t\t\tformDate = new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`)\r\n\r\n\t\t\tlet fData = new FormData();\r\n\t\t\tfData.append('notes', this.covidTestForm.get('notes').value)\r\n\t\t\tfData.append('date', formDate.toString())\r\n\t\t\tfData.append('status', this.covidTestForm.get('status').value)\r\n\r\n\t\t\tif (this.covidTestForm.get('result').value)\r\n\t\t\t\tfData.append('result', this.covidTestForm.get('result').value)\r\n\r\n\t\t\tif (this.file)\r\n\t\t\t\tfData.append('file', this.file, this.file.name)\r\n\r\n\t\t\tthis.covidTests.getOneAndUpdate(this.covidTest._id, fData).subscribe(\r\n\t\t\t\t(success) => {\r\n\t\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\t\tmessage: \"COVID Test updated with success!\",\r\n\t\t\t\t\t\tstatus: true\r\n\t\t\t\t\t})\r\n\t\t\t\t}, (error) => {\r\n\t\t\t\t\tconst codeMessage = error.error.message;\r\n\t\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\t\tmessage: codeMessage || \"Error on update COVID Test. Try again please.\",\r\n\t\t\t\t\t\tstatus: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget covidTestFormControl() {\r\n\t\treturn this.covidTestForm.controls;\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h2 mat-dialog-title>Edit</h2>\r\n\r\n<form [formGroup]=\"covidTestForm\" (submit)=\"save($event)\" enctype=\"multipart/form-data\">\r\n  <mat-dialog-content>\r\n    <mat-form-field>\r\n      <mat-label>Notes</mat-label>\r\n      <textarea matInput placeholder=\"Notes\" formControlName=\"notes\"></textarea>\r\n      <mat-icon matPrefix>notes</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Schedule Date</mat-label>\r\n      <input matInput [matDatepicker]=\"scheduleDate\" formControlName=\"scheduleDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"scheduleDate\"></mat-datepicker-toggle>\r\n      <mat-datepicker #scheduleDate></mat-datepicker>\r\n      <mat-error\r\n        [hidden]=\"(covidTestFormControl.scheduleDate.touched) && covidTestFormControl.scheduleDate.errors?.required\">\r\n        Schedul Date is required.\r\n      </mat-error>\r\n      <mat-icon matPrefix>today</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Status</mat-label>\r\n      <mat-select matNativeControl formControlName=\"status\" name=\"status\">\r\n        <mat-option *ngFor=\"let stat of status\" [value]=\"stat\">\r\n          {{stat | titlecase}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-icon matPrefix>healing</mat-icon>\r\n      <mat-error [hidden]=\"(covidTestFormControl.status.touched) && covidTestFormControl.status.errors?.required\">\r\n        Status is required.\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field *ngIf=\"statusValue() ==='finished'\">\r\n      <mat-label>Result</mat-label>\r\n      <mat-select matNativeControl formControlName=\"result\" name=\"result\">\r\n        <mat-option *ngFor=\"let result of results\" [value]=\"result\">\r\n          {{result | titlecase}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-icon matPrefix>info</mat-icon>\r\n    </mat-form-field>\r\n\r\n    <input type=\"file\" formControlName=\"file\" (change)=\"onFileSelected($event)\" accept=\".pdf\"\r\n      *ngIf=\"statusValue() ==='finished'\">\r\n\r\n    <div class=\"accent-color\" *ngIf=\"covidTest.pathFile\">\r\n      <small>Already have upload one file.</small>\r\n    </div>\r\n    <mat-error class=\"validation-error\" *ngIf=\"!isUpdateValid()\">Please make sure if status is Finished, both Result and\r\n      File should be\r\n      insert</mat-error>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!isUpdateValid()\">Save</button>\r\n    <button mat-button color=\"warn\" (click)=\"onClose()\" type=\"button\">Cancel</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CovidTest } from '../../../../models/covid-test.model';\r\nimport { PatientInfoComponent } from '../../patients/patient-info/patient-info.component';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test-information',\r\n\ttemplateUrl: './covid-test-information.component.html',\r\n\tstyleUrls: ['./covid-test-information.component.sass']\r\n})\r\nexport class CovidTestInformationComponent implements OnInit {\r\n\tpublic covidTest: CovidTest;\r\n\tpublic scheduleDate: string;\r\n\r\n\tprivate dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<CovidTestInformationComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data,\r\n\t\tpublic dialog: MatDialog\r\n\t) {\r\n\t\tthis.covidTest = data;\r\n\t\tthis.scheduleDate = new Date(this.covidTest.date).toLocaleDateString();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\topenInformationDialog() {\r\n\t\tconst dialogConfig = new MatDialogConfig();\r\n\r\n\t\tdialogConfig.data = this.covidTest.patient;\r\n\r\n\t\tthis.dialog.open(PatientInfoComponent, {\r\n\t\t\tdata: this.covidTest.patient,\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\t}\r\n}\r\n\r\n","<h1 mat-dialog-title>COVID Test <strong>{{ covidTest.code }}</strong></h1>\r\n\r\n<mat-dialog-content>\r\n\t<mat-form-field>\r\n\t\t<mat-label>COVID Test Code</mat-label>\r\n\t\t<input matInput placeholder=\"COVID Test Code\" disabled [value]=\"covidTest.code\" />\r\n\t\t<mat-icon matPrefix>copyright</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-expansion-panel>\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\tPatient\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<div>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Patient Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient\" disabled [value]=\"covidTest.patient.name\" />\r\n\t\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient Number\" disabled [value]=\"covidTest.patient.patientNumber\" />\r\n\t\t\t\t<mat-icon matPrefix>info</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let symptom of covidTest.patient.symptoms\">{{ symptom | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t\t<button mat-button mat-dialog-close color=\"primary\" (click)=\"openInformationDialog()\">\r\n\t\t\tPatient Info\r\n\t\t</button>\r\n\r\n\t</mat-expansion-panel>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Notes</mat-label>\r\n\t\t<input matInput placeholder=\"Notes\" disabled [value]=\"covidTest.notes || ''\" />\r\n\t\t<mat-icon matPrefix>subject</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Result</mat-label>\r\n\t\t<input matInput placeholder=\"Result\" disabled [value]=\"(covidTest.result | titlecase) || 'No result for now'\" />\r\n\t\t<mat-icon matPrefix>info</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Test Date</mat-label>\r\n\t\t<input matInput placeholder=\"Test Date\" disabled [value]=\"scheduleDate\" />\r\n\t\t<mat-icon matPrefix>today</mat-icon>\r\n\t</mat-form-field>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\tClose\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { PatientsService } from '../../../services/patients/patients.service';\r\nimport { UiService } from '../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-data-by-email',\r\n\ttemplateUrl: './data-by-email.component.html',\r\n\tstyleUrls: ['./data-by-email.component.sass']\r\n})\r\nexport class DataByEmailComponent implements OnInit {\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\tgetDataForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tpublic router: Router,\r\n\t\tprivate fBuild: FormBuilder,\r\n\t\tpublic patientsService: PatientsService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<DataByEmailComponent>\r\n\t) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.getDataForm = this.fBuild.group({\r\n\t\t\t'email': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]],\r\n\t\t\t'phoneNumber': ['', [Validators.required, Validators.minLength(9)]],\r\n\t\t\t'patientNumber': ['', [Validators.required, Validators.minLength(9)]]\r\n\t\t});\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget getDataFormControl() {\r\n\t\treturn this.getDataForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.getDataForm.valid) {\r\n\r\n\t\t\tconst email = this.getDataForm.get('email').value\r\n\t\t\tconst phoneNumber = this.getDataForm.get('phoneNumber').value\r\n\t\t\tconst patientNumber = this.getDataForm.get('patientNumber').value\r\n\r\n\t\t\tthis.patientsService\r\n\t\t\t\t.getDataByEmail(email, phoneNumber, patientNumber)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t(success) => {\r\n\t\t\t\t\t\tthis.dialogRef.close({ message: success.message })\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tthis.dialogRef.close({ message: error.error.message })\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<h1 mat-dialog-title>Patient Data</h1>\r\n\r\n<form [formGroup]=\"getDataForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t<input matInput placeholder=\"Email\" name=\"email\" formControlName=\"email\">\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(getDataFormControl.email.touched) && (getDataFormControl.email.errors?.email ||  getDataFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error [hidden]=\"(getDataFormControl.email.touched) && getDataFormControl.email.errors?.required\">\r\n\t\t\t\tEmail is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Phone Number</mat-label>\r\n\t\t\t<input matInput placeholder=\"Phone Number\" type=\"number\" formControlName=\"phoneNumber\" name=\"phoneNumber\">\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(getDataFormControl.phoneNumber.touched) && getDataFormControl.phoneNumber.errors?.required\">\r\n\t\t\t\tPhone number is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>smartphone</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t<input matInput placeholder=\"Patient Number\" type=\"number\" formControlName=\"patientNumber\"\r\n\t\t\t\tname=\"patientNumber\">\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(getDataFormControl.patientNumber.touched) && getDataFormControl.phoneNumber.errors?.required\">\r\n\t\t\t\tPatient number is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!getDataForm.valid\" class=\"login-button\">\r\n\t\t\t<mat-icon>email</mat-icon>\r\n\t\t\tGet Your Data\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>close</mat-icon>\r\n\t\t\tClose\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Patient } from '../../../../models/patient.model';\r\nimport { PatientsService } from '../../../../services/patients/patients.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-patient-add',\r\n\ttemplateUrl: './patient-add.component.html',\r\n\tstyleUrls: ['./patient-add.component.sass']\r\n})\r\nexport class PatientAddComponent implements OnInit {\r\n\t// Default Status\r\n\tstatus: string[] = ['Suspect', 'Infected', 'Non Infected'];\r\n\r\n\t// Default Symptoms\r\n\tsymptoms: string[] = ['cough',\r\n\t\t'fever',\r\n\t\t'shortness of breathe',\r\n\t\t'lack of smell',\r\n\t\t'lack of taste',\r\n\t\t'tiredness',\r\n\t\t'headaches',\r\n\t\t'diarrhea'\r\n\t];\r\n\r\n\t// Default Observations\r\n\tobservations: object[] = [\r\n\t\t{ value: 'saude24', label: \"Saúde 24\" },\r\n\t\t{ value: 'riskGroup', label: \"Risk Group\" },\r\n\t\t{ value: 'riskZone', label: \"Risk Zone\" }\r\n\t];\r\n\r\n\tprivate observationsToCreate = {\r\n\t\tsaude24: false,\r\n\t\triskGroup: false,\r\n\t\triskZone: false,\r\n\t};\r\n\r\n\tcurrentObservations: any;\r\n\r\n\tpatient: Patient;\r\n\r\n\tpatientForm: FormGroup\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic patients: PatientsService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<PatientAddComponent>\r\n\t) { }\r\n\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.patientForm = this.formBuilder.group({\r\n\t\t\t'name': ['', [\r\n\t\t\t\tValidators.required\r\n\t\t\t]],\r\n\t\t\t'birthdayDate': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'patientNumber': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000), // Min value\r\n\t\t\t\tValidators.max(999999999) // Max value\r\n\t\t\t]],\r\n\t\t\t'status': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'phone': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000),\r\n\t\t\t\tValidators.max(999999999)\r\n\t\t\t]],\r\n\t\t\t'email': ['', [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]],\r\n\t\t\t'symptoms': ['', []],\r\n\t\t\t'observations': ['', []],\r\n\t\t\t\"gender\": ['', [Validators.required]]\r\n\t\t})\r\n\t}\r\n\r\n\tget patientFormControl() {\r\n\t\treturn this.patientForm.controls;\r\n\t}\r\n\r\n\tonSubmit(evt) {\r\n\t\t// Prevent duplicate submit of form\r\n\t\tevt.preventDefault()\r\n\r\n\t\tif (this.patientForm.valid) {\r\n\r\n\t\t\tconst formDate = new Date(this.patientForm.get('birthdayDate').value)\r\n\t\t\tthis.currentObservations = this.patientForm.get('observations').value;\r\n\r\n\t\t\tfor (let element in this.currentObservations) {\r\n\t\t\t\tif (this.currentObservations[element] === 'saude24') {\r\n\t\t\t\t\tthis.observationsToCreate.saude24 = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskGroup') {\r\n\t\t\t\t\tthis.observationsToCreate.riskGroup = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskZone') {\r\n\t\t\t\t\tthis.observationsToCreate.riskZone = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst formData = {\r\n\t\t\t\tname: this.patientForm.get('name').value,\r\n\t\t\t\tbirthdayDate: new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`),\r\n\t\t\t\tpatientNumber: this.patientForm.get('patientNumber').value,\r\n\t\t\t\tstatus: this.patientForm.get('status').value,\r\n\t\t\t\tcontacts: {\r\n\t\t\t\t\tphone: this.patientForm.get('phone').value,\r\n\t\t\t\t\temail: this.patientForm.get('email').value,\r\n\t\t\t\t},\r\n\t\t\t\tsymptoms: this.patientForm.get('symptoms').value || undefined,\r\n\t\t\t\tobservations: this.observationsToCreate,\r\n\t\t\t\tgender: this.patientForm.get('gender').value\r\n\t\t\t}\r\n\t\t\tthis.patients.create(formData).subscribe((success) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tmessage: \"Patient created with success!\"\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tlet codeMessage = error.error.message.errmsg || error.error.message;\r\n\r\n\t\t\t\tif (codeMessage.includes('E11000')) {\r\n\t\t\t\t\tif (codeMessage.includes('phone:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Phone inserted already exists';\r\n\t\t\t\t\t} else if (codeMessage.includes('patientNumber:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Patient number inserted already exists';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcodeMessage = 'Unique error. Please validate all fields!';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcodeMessage = error.error.message\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: false,\r\n\t\t\t\t\tmessage: codeMessage\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}","<h2 mat-dialog-title>New Patient</h2>\r\n\r\n<form [formGroup]=\"patientForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field appearance=\"legacy\">\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"Name\" formControlName=\"name\">\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t\t<mat-error [hidden]=\"(patientFormControl.name.touched) && patientFormControl.name.errors?.required\">\r\n\t\t\t\tPatient name is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Birthday Date</mat-label>\r\n\t\t\t<input matInput [matDatepicker]=\"myBirthdayDate\" formControlName=\"birthdayDate\">\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"myBirthdayDate\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #myBirthdayDate></mat-datepicker>\r\n\t\t\t<mat-icon matPrefix>today</mat-icon>\r\n\t\t\t<mat-error [hidden]=\"(patientFormControl.name.touched) && patientFormControl.name.errors?.required\">\r\n\t\t\t\tBirthay date is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t<input matInput type=\"number\" formControlName=\"patientNumber\">\r\n\t\t\t<mat-icon matPrefix>local_parking</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.required\">\r\n\t\t\t\tPatient number number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.min\">\r\n\t\t\t\tPatient number number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.max\">\r\n\t\t\t\tPatient number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Gender</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"gender\" name=\"gender\">\r\n\t\t\t\t<mat-option value=\"Male\">\r\n\t\t\t\t\tMale\r\n\t\t\t\t</mat-option>\r\n\t\t\t\t<mat-option value=\"Female\">\r\n\t\t\t\t\tFemale\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>face</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.gender.touched) && patientFormControl.gender.errors?.required\">\r\n\t\t\t\tPatient gender is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Status</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"status\" name=\"status\">\r\n\t\t\t\t<mat-option *ngFor=\"let stat of status\" [value]=\"stat\">\r\n\t\t\t\t\t{{stat}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>healing</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.status.touched) && patientFormControl.status.errors?.required\">\r\n\t\t\t\tPatient status is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Phone</mat-label>\r\n\t\t\t<input matInput type=\"number\" maxlength=\"9\" minlength=\"9\" formControlName=\"phone\">\r\n\t\t\t<mat-icon matPrefix>phone</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.required\">\r\n\t\t\t\tPhone number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.min\">\r\n\t\t\t\tPhone number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.max\">\r\n\t\t\t\tPhone number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>E-mail</mat-label>\r\n\t\t\t<input matInput type=\"email\" formControlName=\"email\">\r\n\t\t\t<mat-icon matPrefix>alternate_email</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(patientFormControl.email.touched) && (patientFormControl.email.errors?.email || patientFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Symptoms</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"symptoms\" name=\"symptoms\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let symptom of symptoms\" [value]=\"symptom\">\r\n\t\t\t\t\t{{symptom | titlecase}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>local_hospital</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.symptoms.touched) && patientFormControl.symptoms.errors?.required\">\r\n\t\t\t\tPatient symptoms is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Observations</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"observations\" name=\"observations\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let observation of observations\" [value]=\"observation.value\">\r\n\t\t\t\t\t{{observation.label}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>remove_red_eye</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\r\n\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!patientForm.valid\">Save</button>\r\n\t\t<button mat-button color=\"accent\" (click)=\"onClose()\" type=\"button\">Cancel</button>\r\n\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { PatientsService } from 'src/app/services/patients/patients.service';\r\nimport { Patient } from '../../../../models/patient.model';\r\n\r\n@Component({\r\n\tselector: 'app-patient-delete',\r\n\ttemplateUrl: './patient-delete.component.html',\r\n\tstyleUrls: ['./patient-delete.component.sass']\r\n})\r\nexport class PatientDeleteComponent implements OnInit {\r\n\tpatient: Patient\r\n\r\n\tconstructor(\r\n\t\tprivate patientService: PatientsService,\r\n\t\tpublic dialogRef: MatDialogRef<PatientDeleteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: Patient\r\n\t) {\r\n\t\tthis.patient = data\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonDelete() {\r\n\t\tlet response: object = {}\r\n\r\n\t\tthis.patientService.getOneAndDelete(this.patient._id).subscribe(() => {\r\n\t\t\tresponse[\"message\"] = \"Patient deleted with success!\"\r\n\t\t\tresponse[\"status\"] = true\r\n\t\t}, (error) => {\r\n\t\t\tlet codeMessage = error.error.message\r\n\r\n\t\t\tresponse[\"message\"] = codeMessage\r\n\t\t\tresponse[\"status\"] = false\r\n\t\t})\r\n\r\n\t\tthis.dialogRef.close(response)\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<h2 class=\"accent-color\">\r\n\t\t<mat-icon>delete</mat-icon>\r\n\t\tYou want delete {{ patient.name }}?\r\n\t</h2>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"primary\" type=\"submit\" (click)=\"onDelete()\">\r\n\t\t<mat-icon>check</mat-icon>\r\n\t\tYes\r\n\t</button>\r\n\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tNo\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Patient } from '../../../../models/patient.model';\r\nimport { PatientsService } from '../../../../services/patients/patients.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-patient-edit',\r\n\ttemplateUrl: './patient-edit.component.html',\r\n\tstyleUrls: ['./patient-edit.component.sass']\r\n})\r\nexport class PatientEditComponent implements OnInit {\r\n\t// Default Status\r\n\tstatus: string[] = ['Suspect', 'Infected', 'Non Infected'];\r\n\r\n\t// Default Symptoms\r\n\tsymptoms: string[] = ['cough',\r\n\t\t'fever',\r\n\t\t'shortness of breathe',\r\n\t\t'lack of smell',\r\n\t\t'lack of taste',\r\n\t\t'tiredness',\r\n\t\t'headaches',\r\n\t\t'diarrhea'\r\n\t];\r\n\r\n\t// Default Observations\r\n\tallObservationsArr: object[] = [\r\n\t\t{ value: 'saude24', label: \"Saúde 24\" },\r\n\t\t{ value: 'riskGroup', label: \"Risk Group\" },\r\n\t\t{ value: 'riskZone', label: \"Risk Zone\" }\r\n\t];\r\n\r\n\t// current observations selected\r\n\tcurrentObservations = [];\r\n\r\n\t// observations object to update\r\n\tobservationsToUpdate = {\r\n\t\tsaude24: false,\r\n\t\triskGroup: false,\r\n\t\triskZone: false,\r\n\t};\r\n\r\n\t// patient to edit\r\n\tpatient: Patient;\r\n\r\n\t// Form of the edit dialog\r\n\tpatientForm: FormGroup;\r\n\r\n\temailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\t//checks wich observations are in the database and returns them\r\n\tcheckRealObservations(elements) {\r\n\t\tlet observationsArr = new Array()\r\n\r\n\t\tif (elements.saude24) {\r\n\t\t\tobservationsArr.push(\"saude24\");\r\n\t\t}\r\n\t\tif (elements.riskGroup) {\r\n\t\t\tobservationsArr.push(\"riskGroup\");\r\n\t\t}\r\n\t\tif (elements.riskZone) {\r\n\t\t\tobservationsArr.push(\"riskZone\");\r\n\t\t}\r\n\r\n\t\treturn observationsArr;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic patients: PatientsService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<PatientEditComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data\r\n\t) {\r\n\t\tthis.patient = data;\r\n\t\tthis.currentObservations = this.checkRealObservations(data.observations);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.patientForm = this.formBuilder.group({\r\n\t\t\t'name': [this.patient.name, [\r\n\t\t\t\tValidators.required\r\n\t\t\t]],\r\n\t\t\t'birthdayDate': [new Date(this.patient.birthdayDate), [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'patientNumber': [this.patient.patientNumber, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000),\r\n\t\t\t\tValidators.max(999999999)\r\n\t\t\t]],\r\n\t\t\t'status': [this.patient.status, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t]],\r\n\t\t\t'phone': [this.patient.contacts.phone, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.min(100000000),\r\n\t\t\t\tValidators.max(999999999)\r\n\t\t\t]],\r\n\t\t\t'email': [this.patient.contacts.email, [\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.pattern(this.emailPattern)\r\n\t\t\t]],\r\n\t\t\t'symptoms': [this.patient.symptoms, []],\r\n\t\t\t'observations': [this.currentObservations, []],\r\n\t\t\t\"gender\": [this.patient.gender, [Validators.required]]\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tget patientFormControl() {\r\n\t\treturn this.patientForm.controls;\r\n\t}\r\n\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.patientForm.valid) {\r\n\t\t\tconst formDate = new Date(this.patientForm.get('birthdayDate').value)\r\n\r\n\t\t\tthis.currentObservations = this.patientForm.get('observations').value;\r\n\r\n\t\t\tfor (let element in this.currentObservations) {\r\n\t\t\t\tif (this.currentObservations[element] === 'saude24') {\r\n\t\t\t\t\tthis.observationsToUpdate.saude24 = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskGroup') {\r\n\t\t\t\t\tthis.observationsToUpdate.riskGroup = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.currentObservations[element] === 'riskZone') {\r\n\t\t\t\t\tthis.observationsToUpdate.riskZone = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst formData = {\r\n\t\t\t\tname: this.patientForm.get('name').value,\r\n\t\t\t\tbirthdayDate: new Date(`${formDate.getFullYear()}-${formDate.getMonth() + 1}-${formDate.getDate()}`),\r\n\t\t\t\tpatientNumber: this.patientForm.get('patientNumber').value,\r\n\t\t\t\tstatus: this.patientForm.get('status').value,\r\n\t\t\t\tcontacts: {\r\n\t\t\t\t\tphone: this.patientForm.get('phone').value,\r\n\t\t\t\t\temail: this.patientForm.get('email').value,\r\n\t\t\t\t},\r\n\t\t\t\tsymptoms: this.patientForm.get('symptoms').value,\r\n\t\t\t\tobservations: this.observationsToUpdate,\r\n\t\t\t\tgender: this.patientForm.get('gender').value\r\n\t\t\t}\r\n\r\n\t\t\tthis.patients.getOneAndUpdate(this.patient._id, formData).subscribe((success) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tmessage: \"Patient edited with success!\"\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tlet codeMessage = error.error.message.errmsg || error.error.message;\r\n\r\n\t\t\t\tif (codeMessage.includes('E11000')) {\r\n\t\t\t\t\tif (codeMessage.includes('phone:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Phone inserted already exists';\r\n\t\t\t\t\t} else if (codeMessage.includes('patientNumber:')) {\r\n\t\t\t\t\t\tcodeMessage = 'Patient number inserted already exists';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcodeMessage = 'Unique error. Please validate all fields!';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcodeMessage = error.error.message\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tstatus: false,\r\n\t\t\t\t\tmessage: codeMessage\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}","<h2 mat-dialog-title>Edit Patient {{ patient.name }}</h2>\r\n\r\n<form [formGroup]=\"patientForm\" (submit)=\"onSubmit($event)\">\r\n\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field appearance=\"legacy\">\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"Name\" formControlName=\"name\">\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Birthday Date</mat-label>\r\n\t\t\t<input matInput [matDatepicker]=\"myBirthdayDate\" formControlName=\"birthdayDate\">\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"myBirthdayDate\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #myBirthdayDate></mat-datepicker>\r\n\t\t\t<mat-icon matPrefix>today</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Patient Number</mat-label>\r\n\t\t\t<input matInput type=\"number\" formControlName=\"patientNumber\">\r\n\t\t\t<mat-icon matPrefix>local_parking</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.required\">\r\n\t\t\t\tPatient number number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.min\">\r\n\t\t\t\tPatient number number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t*ngIf=\"(patientFormControl.patientNumber.touched) && patientFormControl.patientNumber.errors?.max\">\r\n\t\t\t\tPatient number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Gender</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"gender\" name=\"gender\">\r\n\t\t\t\t<mat-option value=\"Male\">\r\n\t\t\t\t\tMale\r\n\t\t\t\t</mat-option>\r\n\t\t\t\t<mat-option value=\"Female\">\r\n\t\t\t\t\tFemale\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>face</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.gender.touched) && patientFormControl.gender.errors?.required\">\r\n\t\t\t\tPatient gender is required!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Status</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"status\" name=\"status\">\r\n\t\t\t\t<mat-option *ngFor=\"let stat of status\" [value]=\"stat\">\r\n\t\t\t\t\t{{stat}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>healing</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Phone</mat-label>\r\n\t\t\t<input matInput type=\"number\" formControlName=\"phone\">\r\n\t\t\t<mat-icon matPrefix>phone</mat-icon>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.required\">\r\n\t\t\t\tPhone number is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.min\">\r\n\t\t\t\tPhone number needs 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(patientFormControl.phone.touched) && patientFormControl.phone.errors?.max\">\r\n\t\t\t\tPhone number only support max of 9 digits!\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>E-mail</mat-label>\r\n\t\t\t<input matInput type=\"email\" formControlName=\"email\">\r\n\t\t\t<mat-icon matPrefix>alternate_email</mat-icon>\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(patientFormControl.email.touched) && (patientFormControl.email.errors?.email ||  patientFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Symptoms</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"symptoms\" name=\"symptoms\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let symptom of symptoms\" [value]=\"symptom\">\r\n\t\t\t\t\t{{symptom | titlecase}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-error [hidden]=\"(patientFormControl.symptoms.touched) && patientFormControl.symptoms.errors?.required\">\r\n\t\t\t\tSymptoms is required!\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>local_hospital</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Observations</mat-label>\r\n\t\t\t<mat-select matNativeControl formControlName=\"observations\" name=\"observations\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let observation of allObservationsArr\" [value]=\"observation.value\">\r\n\t\t\t\t\t{{observation.label}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-icon matPrefix>remove_red_eye</mat-icon>\r\n\t\t</mat-form-field>\r\n\t</mat-dialog-content>\r\n\r\n\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!patientForm.valid\">\r\n\t\t\t<mat-icon>check</mat-icon>\r\n\t\t\tUpdate\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Patient } from '../../../../models/patient.model';\r\n\r\n@Component({\r\n\tselector: 'app-patient-info',\r\n\ttemplateUrl: './patient-info.component.html',\r\n\tstyleUrls: ['./patient-info.component.sass']\r\n})\r\nexport class PatientInfoComponent implements OnInit {\r\n\tpatient: Patient;\r\n\tbDate: string;\r\n\tsymptoms: [];\r\n\r\n\tallObservationsArr: object[] = [\r\n\t\t{ value: 'saude24', label: \"Saúde 24\" },\r\n\t\t{ value: 'riskGroup', label: \"Risk Group\" },\r\n\t\t{ value: 'riskZone', label: \"Risk Zone\" }\r\n\t];\r\n\r\n\tobservations: any[];\r\n\r\n\tcheckObservations(elements) {\r\n\t\tlet observationsArr = new Array()\r\n\r\n\t\tif (elements.saude24) {\r\n\t\t\tobservationsArr.push(\"Saúde 24\");\r\n\t\t}\r\n\t\tif (elements.riskGroup) {\r\n\t\t\tobservationsArr.push(\"Risk Group\");\r\n\t\t}\r\n\t\tif (elements.riskZone) {\r\n\t\t\tobservationsArr.push(\"Risk Zone\");\r\n\t\t}\r\n\r\n\t\treturn observationsArr;\r\n\t}\r\n\r\n\tconstructor(public dialogRef: MatDialogRef<PatientInfoComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) data) {\r\n\t\tthis.patient = data;\r\n\t\tthis.bDate = new Date(this.patient.birthdayDate).toLocaleDateString();\r\n\t\tthis.symptoms = data.symptoms;\r\n\t\tthis.observations = this.checkObservations(data.observations)\r\n\t}\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h2 mat-dialog-title>Information</h2>\r\n<mat-dialog-content>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Name</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Name\" disabled [value]=\"patient.name\" />\r\n\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Birthday Date</mat-label>\r\n\t\t<input matInput placeholder=\"Birthday Date\" disabled [value]=\"bDate\" />\r\n\t\t<mat-icon matPrefix>calendar_today</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Patient Number</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Number\" disabled [value]=\"patient.patientNumber\" />\r\n\t\t<mat-icon matPrefix>local_parking</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Patient Gender</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Gender\" disabled [value]=\"patient.gender || '--'\" />\r\n\t\t<mat-icon matPrefix>face</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Status</mat-label>\r\n\t\t<input matInput placeholder=\"Patient Status\" disabled [value]=\"patient.status\" />\r\n\t\t<mat-icon matPrefix>healing</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-expansion-panel>\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\t<mat-icon>phone</mat-icon>\r\n\t\t\t\tContacts\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<div class=\"mx-20px\">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Phone</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient Phone\" disabled [value]=\"patient.contacts.phone\" />\r\n\t\t\t\t<mat-icon matPrefix>phone</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"Patient Email\" disabled [value]=\"patient.contacts.email\" />\r\n\t\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t</mat-expansion-panel>\r\n\r\n\t<mat-expansion-panel *ngIf=\"symptoms.length != 0\">\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\t<mat-icon>local_hospital</mat-icon>\r\n\t\t\t\tSymptoms\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let symptom of symptoms\">{{ symptom | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t</mat-expansion-panel>\r\n\r\n\t<mat-expansion-panel *ngIf=\"observations.length != 0\">\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\t<mat-icon>remove_red_eye</mat-icon>\r\n\t\t\t\tObservations\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let observation of observations\">{{ observation | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t</mat-expansion-panel>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"accent\" (click)=\"onClose()\">Close</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { User } from '../../../../models/user.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n\tisErrorState(\r\n\t\tcontrol: FormControl | null,\r\n\t\tform: FormGroupDirective | NgForm | null\r\n\t): boolean {\r\n\t\tconst invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n\t\tconst invalidParent = !!(\r\n\t\t\tcontrol &&\r\n\t\t\tcontrol.parent &&\r\n\t\t\tcontrol.parent.invalid &&\r\n\t\t\tcontrol.parent.dirty\r\n\t\t);\r\n\r\n\t\treturn invalidCtrl || invalidParent;\r\n\t}\r\n}\r\n@Component({\r\n\tselector: 'app-update-password',\r\n\ttemplateUrl: './update-password.component.html',\r\n\tstyleUrls: ['./update-password.component.sass'],\r\n})\r\nexport class UpdatePasswordComponent implements OnInit {\r\n\tform: FormGroup;\r\n\tuser: User;\r\n\tmatcher = new MyErrorStateMatcher();\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tpublic uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<UpdatePasswordComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) {\r\n\t\tthis.user = data;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.form = this.formBuilder.group(\r\n\t\t\t{\r\n\t\t\t\toldPwd: ['', [Validators.required]],\r\n\t\t\t\tnewPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n\t\t\t\tconfirmPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n\t\t\t},\r\n\t\t\t{ validator: this.checkPasswords }\r\n\t\t);\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget formControl() {\r\n\t\treturn this.form.controls;\r\n\t}\r\n\r\n\tcheckPasswords(group: FormGroup) {\r\n\t\t// here we have the 'passwords' group\r\n\t\tlet pass = group.controls.newPassword.value;\r\n\t\tlet confirmPass = group.controls.confirmPassword.value;\r\n\r\n\t\treturn pass === confirmPass ? null : { notSame: true };\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.form.valid) {\r\n\t\t\tconst updatedData = {\r\n\t\t\t\temail: this.user.email,\r\n\t\t\t\toldPwd: this.form.get('oldPwd').value,\r\n\t\t\t\tnewPwd: this.form.get('newPassword').value,\r\n\t\t\t\tconfirmPwd: this.form.get('confirmPassword').value,\r\n\t\t\t};\r\n\r\n\t\t\tconst updated = this.usersService.updatePassword(updatedData);\r\n\r\n\t\t\tupdated.subscribe(\r\n\t\t\t\t(success) => {\r\n\t\t\t\t\tconst object = {\r\n\t\t\t\t\t\tstatus: true,\r\n\t\t\t\t\t\tmessage: success.message,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.dialogRef.close(object);\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconst codeMessage = error.error.message;\r\n\t\t\t\t\tconst object = {\r\n\t\t\t\t\t\tstatus: false,\r\n\t\t\t\t\t\tmessage: codeMessage || \"Error on update password! Please try again.\",\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.dialogRef.close(object);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h1 mat-dialog-title>Update your password</h1>\r\n<form [formGroup]=\"form\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Old Password</mat-label>\r\n\t\t\t<input matInput placeholder=\"Your old password\" formControlName=\"oldPwd\" name=\"oldPwd\" type=\"password\" />\r\n\t\t\t<mat-error *ngIf=\"(formControl.oldPwd.touched) && formControl.oldPwd.errors?.required\">\r\n\t\t\t\tOld Password is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>vpn_key</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>New Password</mat-label>\r\n\t\t\t<input matInput placeholder=\"New Password\" type=\"password\" formControlName=\"newPassword\"\r\n\t\t\t\tname=\"newPassword\" />\r\n\t\t\t<mat-error *ngIf=\"(formControl.newPassword.touched) && formControl.newPassword.errors?.required\">\r\n\t\t\t\tNew Password is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"(formControl.newPassword.touched) && formControl.newPassword.errors?.minlength\">\r\n\t\t\t\tNew Password needs minimum 6 characters\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>vpn_key</mat-icon>\r\n\t\t</mat-form-field>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Confirm Password</mat-label>\r\n\t\t\t<input matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmPassword\"\r\n\t\t\t\tname=\"confirmPassword\" [errorStateMatcher]=\"matcher\" />\r\n\t\t\t<mat-error *ngIf=\"form.hasError('notSame')\">\r\n\t\t\t\tPasswords do not match\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"formControl.confirmPassword.errors?.required\">\r\n\t\t\t\tConfirm Password is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error *ngIf=\"formControl.confirmPassword?.touched && formControl.confirmPassword.errors?.minlength\">\r\n\t\t\t\tConfirm Password needs minimum 6 characters\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>vpn_key</mat-icon>\r\n\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">\r\n\t\t\t<mat-icon>check</mat-icon>\r\n\t\t\tUpdate\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { UiService } from '../../../../services/ui/ui.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { Role } from '../../../../models/role.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\n\r\n@Component({\r\n\tselector: 'app-user-add',\r\n\ttemplateUrl: './user-add.component.html',\r\n\tstyleUrls: ['./user-add.component.sass']\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n\r\n\troles: Role[] = []\r\n\tuserForm: FormGroup\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tpublic dialogRef: MatDialogRef<UserAddComponent>,\r\n\t\tprivate uiService: UiService\r\n\t) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tconst emailPattern = \"^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$\";\r\n\r\n\t\tthis.rolesService.getAll().subscribe((roles) => {\r\n\t\t\troles.map((role) => {\r\n\t\t\t\tthis.roles.push(role)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tthis.userForm = this.formBuilder.group({\r\n\t\t\t\"name\": ['', [Validators.required]],\r\n\t\t\t\"email\": ['', [Validators.required, Validators.email, Validators.pattern(emailPattern)]],\r\n\t\t\t\"role\": ['', [Validators.required]]\r\n\t\t})\r\n\r\n\t}\r\n\t// To disable button if have errors\r\n\tget userFormControl() {\r\n\t\treturn this.userForm.controls;\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.userForm.valid) {\r\n\t\t\tconst body = {\r\n\t\t\t\tname: this.userForm.get('name').value,\r\n\t\t\t\temail: this.userForm.get('email').value,\r\n\t\t\t\trole: this.userForm.get('role').value,\r\n\t\t\t\tpassword: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n\t\t\t}\r\n\r\n\t\t\tthis.usersService.new(body).subscribe((user) => {\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: \"User created with success! Please tell to user request a reset password.\",\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t})\r\n\t\t\t}, (error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\tthis.dialogRef.close({\r\n\t\t\t\t\tmessage: error.error.message || \"Error when create user. Try again please.\",\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h1 mat-dialog-title>Add User</h1>\r\n<form [formGroup]=\"userForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"User Name\" formControlName=\"name\" name=\"name\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.name.touched) && userFormControl.name.errors?.required\">\r\n\t\t\t\tName is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t<input matInput placeholder=\"User email\" type=\"email\" formControlName=\"email\" name=\"email\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.required\">\r\n\t\t\t\tEmail is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.email\">\r\n\t\t\t\tEmail is invalid\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.pattern\">\r\n\t\t\t\tEmail is invalid\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t<mat-select formControlName=\"role\" name=\"role\">\r\n\t\t\t\t<mat-option *ngFor=\"let role of roles\" [value]=\"role._id\">\r\n\t\t\t\t\t{{ role.name | titlecase }}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.role.touched) && userFormControl.role.errors?.required\">\r\n\t\t\t\tRole is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>admin_panel_settings</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!userForm.valid\">\r\n\t\t\t<mat-icon>person_add</mat-icon>\r\n\t\t\tAdd\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { User } from '../../../../models/user.model';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\n\r\n@Component({\r\n\tselector: 'app-user-delete',\r\n\ttemplateUrl: './user-delete.component.html',\r\n\tstyleUrls: ['./user-delete.component.sass']\r\n})\r\nexport class UserDeleteComponent implements OnInit {\r\n\r\n\tuser\r\n\r\n\tconstructor(\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic dialogRef: MatDialogRef<UserDeleteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: User\r\n\t) {\r\n\t\tthis.user = data\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit() {\r\n\r\n\t\tlet response: object = {}\r\n\r\n\t\tthis.usersService.getOneAndDelete(this.user[\"_id\"]).subscribe(() => {\r\n\t\t\tresponse[\"message\"] = \"User deleted with success!\"\r\n\t\t\tresponse[\"status\"] = true\r\n\t\t}, (error) => {\r\n\t\t\tlet codeMessage = error.error.message\r\n\r\n\t\t\tresponse[\"message\"] = codeMessage\r\n\t\t\tresponse[\"status\"] = false\r\n\t\t})\r\n\r\n\t\tthis.dialogRef.close(response)\r\n\t}\r\n\r\n\t// Close dialog\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n}\r\n","<mat-dialog-content>\r\n\t<h2 class=\"accent-color\">\r\n\t\t<mat-icon>delete</mat-icon>\r\n\t\tYou want delete {{ user.name }}?\r\n\t</h2>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\">\r\n\t\t<mat-icon>check</mat-icon>\r\n\t\tYes\r\n\t</button>\r\n\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tNo\r\n\t</button>\r\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { User } from '../../../../models/user.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\ttemplateUrl: './user-edit.component.html',\r\n\tstyleUrls: ['./user-edit.component.sass'],\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\troles: any[] = [];\r\n\tuser: User;\r\n\tuserForm: FormGroup;\r\n\r\n\tconstructor(\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tprivate uiService: UiService,\r\n\t\tpublic dialogRef: MatDialogRef<UserEditComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) {\r\n\t\tthis.user = data;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tconst emailPattern = '^[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}$';\r\n\r\n\t\tthis.rolesService.getAll().subscribe((roles) => {\r\n\t\t\troles.map((role) => {\r\n\t\t\t\tthis.roles.push(role);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.userForm = this.formBuilder.group({\r\n\t\t\tname: [this.user.name, [Validators.required]],\r\n\t\t\temail: [\r\n\t\t\t\tthis.user.email,\r\n\t\t\t\t[\r\n\t\t\t\t\tValidators.required,\r\n\t\t\t\t\tValidators.email,\r\n\t\t\t\t\tValidators.pattern(emailPattern),\r\n\t\t\t\t],\r\n\t\t\t],\r\n\t\t\trole: [this.user.role['_id'], [Validators.required]],\r\n\t\t});\r\n\t}\r\n\r\n\t// To disable button if have errors\r\n\tget userFormControl() {\r\n\t\treturn this.userForm.controls;\r\n\t}\r\n\r\n\t// Submit Method\r\n\tonSubmit(evt) {\r\n\t\t// Prevent Default\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (this.userForm.valid) {\r\n\t\t\tconst updatedData = {\r\n\t\t\t\tname: this.userForm.get('name').value,\r\n\t\t\t\temail: this.userForm.get('email').value,\r\n\t\t\t\trole: this.userForm.get('role').value,\r\n\t\t\t};\r\n\r\n\t\t\tlet response: object = {};\r\n\r\n\t\t\tthis.usersService.getOneAndUpdate(this.user['_id'], updatedData).subscribe(\r\n\t\t\t\t(updated) => {\r\n\t\t\t\t\tresponse['message'] = 'User updated with success!';\r\n\t\t\t\t\tresponse['status'] = true;\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tlet codeMessage = error.error.message;\r\n\r\n\t\t\t\t\tif (codeMessage.includes('E11000')) {\r\n\t\t\t\t\t\tif (codeMessage.includes('email:')) {\r\n\t\t\t\t\t\t\tcodeMessage = 'Email inserted already exists';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcodeMessage = 'Unique error. Please validate all fields!';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresponse['message'] = codeMessage;\r\n\t\t\t\t\tresponse['status'] = false;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tthis.dialogRef.close(response);\r\n\t\t} else {\r\n\t\t\tthis.uiService.showSnackBar(\"Please validate all fields on form and try again.\")\r\n\t\t}\r\n\t}\r\n\r\n\tonClose(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n}\r\n","<h1 mat-dialog-title>Edit User</h1>\r\n<form [formGroup]=\"userForm\" (submit)=\"onSubmit($event)\">\r\n\t<mat-dialog-content>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t<input matInput placeholder=\"User Name\" formControlName=\"name\" name=\"name\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.name.touched) && userFormControl.name.errors?.required\">\r\n\t\t\t\tName is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t<input matInput placeholder=\"User email\" type=\"email\" formControlName=\"email\" name=\"email\" />\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.email.touched) && userFormControl.email.errors?.required\">\r\n\t\t\t\tEmail is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-error\r\n\t\t\t\t[hidden]=\"(userFormControl.email.touched) && (userFormControl.email.errors?.email ||  userFormControl.email.errors?.pattern)\">\r\n\t\t\t\tInvalid email.\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>email</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t<mat-select formControlName=\"role\" name=\"role\">\r\n\t\t\t\t<mat-option *ngFor=\"let role of roles\" [value]=\"role._id\">\r\n\t\t\t\t\t{{ role.name | titlecase }}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-error [hidden]=\"(userFormControl.role.touched) && userFormControl.role.errors?.required\">\r\n\t\t\t\tRole is required\r\n\t\t\t</mat-error>\r\n\t\t\t<mat-icon matPrefix>admin_panel_settings</mat-icon>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-dialog-content>\r\n\t<mat-dialog-actions>\r\n\t\t<button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!userForm.valid\">\r\n\t\t\t<mat-icon>check</mat-icon>\r\n\t\t\tUpdate\r\n\t\t</button>\r\n\t\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t\t<mat-icon>cancel</mat-icon>\r\n\t\t\tCancel\r\n\t\t</button>\r\n\t</mat-dialog-actions>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UsersService } from '../../../../services/users/users.service';\r\nimport { User } from '../../../../models/user.model';\r\nimport { RolesService } from '../../../../services/roles/roles.service';\r\n\r\n@Component({\r\n\tselector: 'app-user-info',\r\n\ttemplateUrl: './user-info.component.html',\r\n\tstyleUrls: ['./user-info.component.sass']\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n\tscopes: any[] = []\r\n\tuser: User\r\n\r\n\tconstructor(\r\n\t\tpublic usersService: UsersService,\r\n\t\tpublic rolesService: RolesService,\r\n\t\tpublic dialogRef: MatDialogRef<UserInfoComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: User\r\n\t) {\r\n\t\tthis.user = data\r\n\t\tthis.scopes = data.role.scopes.map((scope) => {\r\n\t\t\tlet cleanScope = scope.split('--').join('').split('-').join(' ')\r\n\t\t\treturn cleanScope\r\n\t\t})\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tonClose() {\r\n\t\tthis.dialogRef.close()\r\n\t}\r\n\r\n}\r\n","<h1 mat-dialog-title>User {{ user.name }}</h1>\r\n<mat-dialog-content>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Name</mat-label>\r\n\t\t<input matInput placeholder=\"User Name\" disabled [value]=\"user.name\" />\r\n\t\t<mat-icon matPrefix>account_circle</mat-icon>\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<mat-label>Role</mat-label>\r\n\t\t<input matInput placeholder=\"User Role\" disabled [value]=\"user.role.name | titlecase\" />\r\n\t\t<mat-icon matPrefix>admin_panel_settings</mat-icon>\r\n\r\n\t</mat-form-field>\r\n\t<mat-form-field>\r\n\t\t<mat-label>Email</mat-label>\r\n\t\t<input matInput placeholder=\"User Email\" disabled [value]=\"user.email\" />\r\n\t\t<mat-icon matPrefix>email</mat-icon>\r\n\r\n\t</mat-form-field>\r\n\r\n\t<mat-expansion-panel>\r\n\t\t<mat-expansion-panel-header>\r\n\t\t\t<mat-panel-title>\r\n\t\t\t\tScopes / Permissions\r\n\t\t\t</mat-panel-title>\r\n\t\t</mat-expansion-panel-header>\r\n\r\n\t\t<p>This user have permissions to:</p>\r\n\r\n\t\t<mat-list>\r\n\t\t\t<mat-list-item *ngFor=\"let scope of scopes\">{{ scope | titlecase }}</mat-list-item>\r\n\t\t</mat-list>\r\n\r\n\t</mat-expansion-panel>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n\t<button mat-button color=\"accent\" type=\"button\" (click)=\"onClose()\">\r\n\t\t<mat-icon>cancel</mat-icon>\r\n\t\tClose\r\n\t</button>\r\n</mat-dialog-actions>","import {\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { validateScopes } from 'src/app/functions/validateScopes';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Directive({\r\n  selector: '[canUse]',\r\n})\r\nexport class CanUseDirective implements OnInit {\r\n  scopes: string[];\r\n  session;\r\n\r\n  constructor(\r\n    private sessionService: SessionService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>\r\n  ) {\r\n    this.session = this.sessionService.me();\r\n  }\r\n\r\n  @Input() set canUse(scopes) {\r\n    this.scopes = scopes;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!validateScopes(this.session.user.scopes, this.scopes))\r\n      this.viewContainerRef.clear();\r\n    else this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { validateRoles } from '../../functions/validateRoles';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Directive({\r\n\tselector: '[roleEnable]'\r\n})\r\nexport class RoleEnableDirective implements OnInit {\r\n\troles: string[];\r\n\tsession;\r\n\r\n\tconstructor(\r\n\t\tprivate sessionService: SessionService,\r\n\t\tprivate viewContainerRef: ViewContainerRef,\r\n\t\tprivate templateRef: TemplateRef<any>\r\n\t) {\r\n\t\tthis.session = this.sessionService.me();\r\n\t}\r\n\r\n\t@Input() set roleEnable(roles) {\r\n\t\tthis.roles = roles;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tif (!validateRoles(this.session.user.role, this.roles))\r\n\t\t\tthis.viewContainerRef.clear();\r\n\t\telse this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n\t}\r\n\r\n}\r\n","export function ageToDate(age: number) {\r\n    const today = new Date();\r\n    const newYear = today.getFullYear() - age;\r\n    const date = newYear + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);\r\n\r\n    return date;\r\n}","export function formatDate(date: Date) {\r\n    const shortDate = new Date(date);\r\n    const year = shortDate.getFullYear();\r\n    const month = ('0' + (shortDate.getMonth() + 1)).slice(-2);\r\n    const day = ('0' + shortDate.getDate()).slice(-2);\r\n\r\n    return [year, month, day].join('-');\r\n}","export function validateRoles(userRole: string, roles: string[]) {\r\n\tconst userRoleLower = userRole.toLowerCase()\r\n\tconst rolesLower = roles.map((role) => { return role.toLowerCase() })\r\n\r\n\tlet have = rolesLower.some((roleLower) => {\r\n\t\treturn userRoleLower.includes(roleLower)\r\n\t})\r\n\r\n\treturn have\r\n}","export function validateScopes(userScopes: string[], scopes: string[]) {\r\n\tconst have = scopes.some((accessScope) => {\r\n\t\treturn userScopes.includes(accessScope);\r\n\t});\r\n\treturn have\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { validateScopes } from 'src/app/functions/validateScopes';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ScopeGuard implements CanActivate {\r\n\r\n\tscopes: string[]\r\n\tsession: any\r\n\r\n\tconstructor(\r\n\t\tprivate sessionService: SessionService, private router: Router\r\n\t) {\r\n\t\tthis.session = this.sessionService.me()\r\n\t}\r\n\r\n\tcanActivate(\r\n\t\troute: ActivatedRouteSnapshot,\r\n\t\tstate: RouterStateSnapshot\r\n\t): Observable<boolean> | boolean {\r\n\t\tif (this.session) {\r\n\t\t\tif (validateScopes(this.session.user.scopes, route.data.scopes)) {\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tthis.router.navigate(['/admin'])\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear session to prevent local storage\r\n\t\t\tthis.sessionService.clearSession()\r\n\t\t\t// Redirect\r\n\t\t\tthis.router.navigate(['/login'])\r\n\t\t\t// Return False\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { SessionService } from '../auth/session.service';\r\n\r\n@Injectable()\r\nexport class SessionLostInterceptor implements HttpInterceptor {\r\n\tconstructor(public sessionService: SessionService, public router: Router, private snackBar: MatSnackBar, ) { }\r\n\tintercept(\r\n\t\treq: HttpRequest<any>,\r\n\t\tnext: HttpHandler\r\n\t): Observable<HttpEvent<any>> {\r\n\t\treturn next.handle(req).pipe(\r\n\t\t\tcatchError((error: HttpErrorResponse) => {\r\n\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\t// 401 handled in auth.interceptor\t\t\r\n\t\t\t\t\tthis.sessionService.clearSession();\r\n\t\t\t\t\tthis.snackBar.open(\"Session Expired, log in again\", 'Close', { duration: 3000 });\r\n\t\t\t\t\tthis.router.navigateByUrl('/login');\r\n\t\t\t\t}\r\n\t\t\t\treturn throwError(error);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-auth',\r\n\ttemplateUrl: './auth.component.html',\r\n\tstyleUrls: ['./auth.component.sass'],\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n\tconstructor(private router: Router) {\r\n\t}\r\n\r\n\tngOnInit(): void { }\r\n}\r\n","<div class=\"auth-page\">\r\n\t<mat-card>\r\n\t\t<mat-card-content>\r\n\t\t\t<div id=\"logo\"></div>\r\n\r\n\t\t\t<router-outlet></router-outlet>\r\n\r\n\t\t</mat-card-content>\r\n\t</mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../../../../auth/session.service';\r\n\r\n@Component({\r\n\tselector: 'app-sidebar',\r\n\ttemplateUrl: './sidebar.component.html',\r\n\tstyleUrls: ['./sidebar.component.sass']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n\tconstructor(public session: SessionService, public router: Router) { }\r\n\r\n\tngOnInit(): void {\r\n\r\n\t}\r\n\r\n\r\n}\r\n","<mat-nav-list>\r\n\r\n\t<h2 matSubheader>Dashboard</h2>\r\n\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t<mat-icon>dashboard</mat-icon>\r\n\t\tDashboard\r\n\t</a>\r\n\r\n\t<ng-template [canUse]=\"['--view-all']\">\r\n\t\t<mat-divider></mat-divider>\r\n\r\n\t\t<h2 matSubheader>Records</h2>\r\n\r\n\t\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin/patients\"\r\n\t\t\t[routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t\t<mat-icon>folder_shared</mat-icon>\r\n\t\t\tPatients\r\n\t\t</a>\r\n\r\n\t\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin/covid-tests\"\r\n\t\t\t[routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t\t<mat-icon>folder_special</mat-icon>\r\n\t\t\tCOVID Tests\r\n\t\t</a>\r\n\t</ng-template>\r\n\r\n\r\n\t<ng-template [canUse]=\"['--view-users']\">\r\n\t\t<mat-divider></mat-divider>\r\n\r\n\t\t<h2 matSubheader>Administration</h2>\r\n\r\n\t\t<a mat-list-item routerLinkActive=\"active-menu\" routerLink=\"/admin/users\"\r\n\t\t\t[routerLinkActiveOptions]=\"{exact: true}\">\r\n\t\t\t<mat-icon>supervised_user_circle</mat-icon>\r\n\t\t\tUsers\r\n\t\t</a>\r\n\t</ng-template>\r\n\r\n</mat-nav-list>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../../../../auth/session.service';\r\nimport { UpdatePasswordComponent } from '../../../../components/dialogs/users/update-password/update-password.component';\r\nimport { User } from '../../../../models/user.model';\r\n\r\n@Component({\r\n\tselector: 'app-topbar',\r\n\ttemplateUrl: './topbar.component.html',\r\n\tstyleUrls: ['./topbar.component.sass'],\r\n})\r\nexport class TopbarComponent implements OnInit {\r\n\t@Input()\r\n\tuser: User;\r\n\r\n\t@Output()\r\n\ttoggleSideBarForMe: EventEmitter<any> = new EventEmitter();\r\n\r\n\tconstructor(\r\n\t\tprivate session: SessionService,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate snackBar: MatSnackBar,\r\n\t\tprivate router: Router\r\n\t) { }\r\n\r\n\tngOnInit(): void { }\r\n\r\n\ttoggleSideBar() {\r\n\t\tthis.toggleSideBarForMe.emit();\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.dispatchEvent(new Event('resize'));\r\n\t\t}, 300);\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tthis.session.logout();\r\n\t\tthis.router.navigateByUrl('/login');\r\n\t}\r\n\r\n\topenSnackBar(message: string) {\r\n\t\tthis.snackBar.open(message, 'Close', { duration: 5000 });\r\n\t}\r\n\r\n\topenUpdatePasswordDialog() {\r\n\t\tlet dialogRef = this.dialog.open(UpdatePasswordComponent, {\r\n\t\t\tdata: this.user,\r\n\t\t\twidth: '25vw',\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((response) => {\r\n\t\t\tif (response) {\r\n\t\t\t\tthis.openSnackBar(response['message']);\r\n\r\n\t\t\t\tif (response.status == true) this.logout();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-toolbar>\r\n\t<mat-toolbar-row>\r\n\t\t<button mat-icon-button (click)=\"toggleSideBar()\">\r\n\t\t\t<mat-icon>menu</mat-icon>\r\n\t\t</button>\r\n\r\n\t\t<div id=\"logo\">\r\n\t\t\t<!-- <img src=\"/assets/images/logo.png\" class=\"logo\" alt=\"\"> -->\r\n\t\t</div>\r\n\r\n\t\t<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n\t\t\t<ul fxLayout=\"row\" fxLayoutGap=\"20px\" class=\"headerItems\">\r\n\t\t\t\t<li class=\"user\" *ngIf=\"user\">\r\n\t\t\t\t\t<mat-button mat-button [matMenuTriggerFor]=\"menu\">\r\n\t\t\t\t\t\t<img src=\"/assets/images/user.png\" class=\"avatar\" alt=\"\">\r\n\t\t\t\t\t\t{{ user.name }}\r\n\t\t\t\t\t</mat-button>\r\n\r\n\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t<div class=\"center\">\r\n\t\t\t\t\t\t\t<img src=\"/assets/images/user.png\" alt=\"\">\r\n\r\n\t\t\t\t\t\t\t<h3>{{ user.name }}</h3>\r\n\t\t\t\t\t\t\t<small>{{ user.role }}</small>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<mat-divider></mat-divider>\r\n\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openUpdatePasswordDialog()\">\r\n\t\t\t\t\t\t\t<mat-icon>vpn_key</mat-icon>\r\n\t\t\t\t\t\t\tChange Password\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button mat-menu-item class=\"btn-logout\" (click)=\"logout()\">\r\n\t\t\t\t\t\t\t<mat-icon>exit_to_app</mat-icon>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../../auth/session.service';\r\n\r\n@Component({\r\n\tselector: 'app-default',\r\n\ttemplateUrl: './default.component.html',\r\n\tstyleUrls: ['./default.component.sass']\r\n})\r\nexport class DefaultComponent implements OnInit {\r\n\tsideBarOpen = true;\r\n\tuser: any\r\n\r\n\tconstructor(\r\n\t\tpublic session: SessionService,\r\n\t\tpublic router: Router\r\n\t) {\r\n\t\twindow.matchMedia('(max-width: 800px)' || '(max-width: 600px)').addEventListener('change', e => {\r\n\t\t\twindow.location.reload()\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tngOnInit(): void {\r\n\t\tif (window.innerWidth <= 1000) {\r\n\t\t\tthis.sideBarOpen = false\r\n\t\t}\r\n\r\n\t\t// Close sidebar when change router\r\n\t\tthis.router.events.subscribe((router) => {\r\n\t\t\tif (window.innerWidth <= 1000) {\r\n\t\t\t\tthis.sideBarOpen = false;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst me = this.session.me()\r\n\r\n\t\tif (!me) {\r\n\t\t\tthis.router.navigateByUrl('/login')\r\n\t\t} else {\r\n\t\t\tthis.user = me.user\r\n\t\t}\r\n\t}\r\n\r\n\tsideBarToggler() {\r\n\t\tthis.sideBarOpen = !this.sideBarOpen;\r\n\t}\r\n}","<app-topbar (toggleSideBarForMe)=\"sideBarToggler()\" [user]=\"user\"></app-topbar>\r\n\r\n<mat-drawer-container>\r\n\t<mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\r\n\t\t<app-sidebar></app-sidebar>\r\n\t</mat-drawer>\r\n\t<mat-drawer-content>\r\n\t\t<div class=\"container\">\r\n\t\t\t<router-outlet></router-outlet>\r\n\t\t</div>\r\n\t</mat-drawer-content>\r\n</mat-drawer-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DataByEmailComponent } from '../../../../components/dialogs/data-by-email/data-by-email.component';\r\nimport { UiService } from '../../../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-header',\r\n\ttemplateUrl: './header.component.html',\r\n\tstyleUrls: ['./header.component.sass'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\tpublic dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\r\n\tconstructor(\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate uiService: UiService\r\n\t) { }\r\n\r\n\tngOnInit(): void { }\r\n\r\n\topenPatientDataForm() {\r\n\t\tlet dialogRef = this.dialog.open(DataByEmailComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((response) => {\r\n\t\t\tif (response) {\r\n\t\t\t\tthis.uiService.showSnackBar(response.message);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<mat-toolbar>\r\n\t<mat-toolbar-row class=\"row\">\r\n\r\n\t\t<div id=\"logo\">\r\n\t\t</div>\r\n\r\n\t\t<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\r\n\t\t\t<ul fxLayout=\"row\" fxLayoutGap=\"20px\" class=\"headerItems\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a [routerLink]=\"['/login']\" mat-button>\r\n\t\t\t\t\t\t<mat-icon>lock</mat-icon>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button mat-button (click)=\"openPatientDataForm()\">\r\n\t\t\t\t\t\t<mat-icon>storage</mat-icon>\r\n\t\t\t\t\t\tPatient Data\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t</mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport { TitleService } from '../../services/title/title.service';\r\n\r\n@Component({\r\n\tselector: 'app-landing-page',\r\n\ttemplateUrl: './landing-page.component.html',\r\n\tstyleUrls: ['./landing-page.component.sass']\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n\r\n\tconstructor(\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle()\r\n\r\n\t\twindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\r\n\t\t\twindow.location.reload()\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tscroll(el: HTMLElement) {\r\n\t\tel.scrollIntoView({ behavior: 'smooth' });\r\n\t}\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"hero\">\r\n\t<div class=\"container\">\r\n\t\t<h1 class=\"text-white\">\r\n\t\t\tProtect yourself and others!\r\n\t\t</h1>\r\n\r\n\t\t<button mat-icon-button (click)=\"scroll(content)\">\r\n\t\t\t<mat-icon>\r\n\t\t\t\tkeyboard_arrow_down\r\n\t\t\t</mat-icon>\r\n\t\t</button>\r\n\r\n\t</div>\r\n</div>\r\n<mat-drawer-container>\r\n\t<mat-drawer-content>\r\n\t\t<div class=\"container px-30px\" #content>\r\n\t\t\t<h2 class=\"section-title\">Prevention Tips</h2>\r\n\t\t\t<p class=\"text-center\">Here are some preventions tips that you should pay attention.</p>\r\n\t\t\t<div class=\"button-section text-center\">\r\n\t\t\t\t<p>For more information please visit link below.</p>\r\n\t\t\t\t<a href=\"https://www.cdc.gov/coronavirus/2019-ncov/prevent-getting-sick/prevention.html\" mat-button\r\n\t\t\t\t\tcolor=\"primary\" target=\"_blank\">\r\n\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\tMore Information\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/contact.svg\" alt=\"Avoid close contact\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Avoid close contact</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>void close contact with people who are sick, even inside your home. Put\r\n\t\t\t\t\t\t\t\tdistance between yourself and other people\r\n\t\t\t\t\t\t\t\toutside of your home, remember that, some people without symptoms may be able to spread\r\n\t\t\t\t\t\t\t\tthe virus.\r\n\t\t\t\t\t\t\t</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/gloves.svg\"\r\n\t\t\t\t\t\t\talt=\"Cover your mouth , nose and hands\" class=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Cover your mouth, nose and hands</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>You could spread COVID-19 to others even if you do not feel sick Everyone\r\n\t\t\t\t\t\t\t\tshould wear a cloth face cover and gloves when\r\n\t\t\t\t\t\t\t\tthey have to go out in public. Continue to keep distance between yourself and others.\r\n\t\t\t\t\t\t\t\tThe cloth face and gloves are not\r\n\t\t\t\t\t\t\t\ta substitute for a social distancing.</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/sneeze.svg\" alt=\"Know how it spreads\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Know how it spreads</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>There is currently no vaccine to prevent coronavirus disease 2019\r\n\t\t\t\t\t\t\t\t(COVID-19). The best way to prevent illness is to\r\n\t\t\t\t\t\t\t\tavoid being exposed to this virus.\r\n\t\t\t\t\t\t\t</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"1 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/prevention/wash.svg\" alt=\"Clean and disinfect\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Clean and disinfect</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>Clean and disinfect frequently touched surfaces daily. This includes\r\n\t\t\t\t\t\t\t\ttables, light switches, desks, phones, keyboards\r\n\t\t\t\t\t\t\t\tand toilets. Then, use a household disinfectant.</mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container px-30px\">\r\n\t\t\t<h2 class=\"section-title\">Symptoms (Most Common)</h2>\r\n\t\t\t<p class=\"text-center\">Here are some symptoms that you should pay attention.</p>\r\n\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/cough.svg\" alt=\"Cough\" class=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Cough</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/fever.svg\" alt=\"High Fever\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>High Fever</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/headache.svg\" alt=\"Headache\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Headache</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\">\r\n\t\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<img mat-card-image src=\"/assets/images/symptoms/sore-troath.svg\" alt=\"Sore Troath\"\r\n\t\t\t\t\t\t\tclass=\"top-card-image\">\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Sore Troath</mat-card-title>\r\n\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t</mat-card>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container px-30px\">\r\n\t\t\t<h2 class=\"section-title\">Current Situation</h2>\r\n\t\t\t<p class=\"text-center\">Here are some graphics with information about Portugal and the rest of the World.</p>\r\n\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 50%\" fxFlex.xs=\"100\">\r\n\t\t\t\t\t<app-pt-chart></app-pt-chart>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 50%\" fxFlex.xs=\"100\">\r\n\t\t\t\t\t<app-world-chart></app-world-chart>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container px-30px\" id=\"dgs-container\">\r\n\t\t\t<h2 class=\"section-title\">Portugal Situation</h2>\r\n\t\t\t<p class=\"text-center\">Here are some information about Portugal with more details.</p>\r\n\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 100%\">\r\n\t\t\t\t\t<embed\r\n\t\t\t\t\t\tsrc=\"https://esriportugal.maps.arcgis.com/apps/opsdashboard/index.html#/acf023da9a0b4f9dbb2332c13f635829\"\r\n\t\t\t\t\t\tstyle=\"width:100%;\" height=\"800\" frameborder=\"0\" />\r\n\r\n\t\t\t\t\t<small>\r\n\t\t\t\t\t\t<strong>Source:</strong>\r\n\t\t\t\t\t\t<a href=\"https://covid19.min-saude.pt/ponto-de-situacao-atual-em-portugal/\" target=\"_blank\">\r\n\t\t\t\t\t\t\tDGS - Ponto de Situação Atual\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"footer-dark\">\r\n\t\t\t<div class=\"row\" fxLayout=\"row wrap\" fxLayoutWrap>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 25%\" fxFlex.xs=\"100\" fxFlex.sm=\"100\">\r\n\t\t\t\t\t<img src=\"/assets/images/logo/covid-white.svg\" alt=\"COVID Tracking System\" class=\"logo\">\r\n\t\t\t\t\t<h3 class=\"title\">COVID Tracking System</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col\" fxFlex=\"0 1 75%\" fxFlex.xs=\"50\" fxFlex.sm=\"50\">\r\n\t\t\t\t\t<mat-list role=\"list\">\r\n\t\t\t\t\t\t<mat-list-item role=\"listitem\">\r\n\t\t\t\t\t\t\t<a href=\"mailto:covidtrackingsystem@gmail.com\">\r\n\t\t\t\t\t\t\t\t<mat-icon>email</mat-icon>\r\n\t\t\t\t\t\t\t\tcovidtrackingsystem@gmail.com\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t<mat-list-item role=\"listitem\">\r\n\t\t\t\t\t\t\t<a href=\"tel:tel:808300201\">\r\n\t\t\t\t\t\t\t\t<mat-icon>phone</mat-icon>\r\n\t\t\t\t\t\t\t\t808 300 201\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t</mat-list>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</mat-drawer-content>\r\n</mat-drawer-container>","export class Patient {\r\n\t_id?: string;\r\n\tname: string;\r\n\tbirthdayDate: Date;\r\n\tpatientNumber: number;\r\n\tstatus: string;\r\n\tgender: string;\r\n\tcontacts: {\r\n\t\tphone: number;\r\n\t\temail: string;\r\n\t};\r\n\tsymptoms: string[];\r\n\tobservations: {\r\n\t\tsaude24?: boolean;\r\n\t\triskGroup?: boolean;\r\n\t\triskZone?: boolean;\r\n\t};\r\n}","import { Role } from './role.model';\r\nexport class User {\r\n\t_id?: string;\r\n\tname: string;\r\n\temail: string;\r\n\trole: Role;\r\n\tpassword?: string;\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CovidTestCreateComponent } from '../../components/dialogs/covid-test/covid-test-create/covid-test-create.component';\r\nimport { CovidTestDeleteComponent } from '../../components/dialogs/covid-test/covid-test-delete/covid-test-delete.component';\r\nimport { CovidTestEditComponent } from '../../components/dialogs/covid-test/covid-test-edit/covid-test-edit.component';\r\nimport { CovidTestInformationComponent } from '../../components/dialogs/covid-test/covid-test-information/covid-test-information.component';\r\nimport { formatDate } from '../../functions/formatDate';\r\nimport { CovidTest } from '../../models/covid-test.model';\r\nimport { CovidTestService } from '../../services/covid-test/covid-test.service';\r\nimport { PatientInfoComponent } from '../../components/dialogs/patients/patient-info/patient-info.component';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-covid-test',\r\n\ttemplateUrl: './covid-test.component.html',\r\n\tstyleUrls: ['./covid-test.component.sass']\r\n})\r\nexport class CovidTestComponent implements OnInit {\r\n\tdialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\tresult: any;\r\n\r\n\tsearchText;\r\n\r\n\tfields: Object[] = [\r\n\t\t{ value: 'date', view: 'Date' },\r\n\t\t{ value: 'status', view: 'Status' },\r\n\t\t{ value: 'result', view: 'Result' }\r\n\t];\r\n\r\n\torders: Object[] = [\r\n\t\t{ value: 'asc', view: 'Ascendent' },\r\n\t\t{ value: 'desc', view: 'Descendent' },\r\n\t];\r\n\r\n\tstatus: Object[] = [\r\n\t\t{ value: 'pending', view: 'Pending' },\r\n\t\t{ value: 'in Progress', view: 'In Progress' },\r\n\t\t{ value: 'finished', view: 'Finished' },\r\n\t\t{ value: 'waiting Result', view: 'Waiting Result' },\r\n\t];\r\n\r\n\tresults: Object[] = [\r\n\t\t{ value: 'positive', view: 'Positive' },\r\n\t\t{ value: 'negative', view: 'Negative' },\r\n\t\t{ value: 'inconclusive', view: 'Inconclusive' }\r\n\t];\r\n\r\n\tselectedField: string;\r\n\tselectedOrder: string;\r\n\tselectedSearchField: string;\r\n\tselectedSearchFilter: string;\r\n\tfromDate: Date;\r\n\ttoDate: Date;\r\n\tselectedSearchFilterFrom: Date;\r\n\tselectedSearchFilterTo: Date;\r\n\r\n\tconstructor(\r\n\t\tpublic covidTests: CovidTestService,\r\n\t\tprivate http: HttpClient,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tpublic uiService: UiService,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('COVID Tests')\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\tdateFormated(date) {\r\n\t\treturn formatDate(date)\r\n\t}\r\n\r\n\tfetchData() {\r\n\t\tconst getAll = this.covidTests.getAll()\r\n\r\n\t\treturn getAll.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tclearFilters() {\r\n\t\tthis.selectedSearchField = undefined\r\n\t\tthis.selectedSearchFilter = undefined\r\n\t\tthis.fetchData()\r\n\t}\r\n\r\n\tfetchOrderedData() {\r\n\t\tconst getAllWithSort = this.covidTests.getAllWithSort(this.selectedField, this.selectedOrder);\r\n\r\n\t\treturn getAllWithSort.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\topenPatientInfoDialog(patient) {\r\n\t\tthis.dialog.open(PatientInfoComponent, {\r\n\t\t\tdata: patient,\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredData() {\r\n\t\tconst getAllWithFilter = this.covidTests.getAllWithFilter(this.selectedSearchField, this.selectedSearchFilter);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredDataWithDate() {\r\n\t\tconst from = formatDate(this.selectedSearchFilterFrom);\r\n\t\tconst to = formatDate(this.selectedSearchFilterTo);\r\n\t\tconst getAllWithFilter = this.covidTests.getAllFilteredWithDate(this.selectedSearchField, from, to);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tselectedSearchFieldMethod() {\r\n\t\treturn this.selectedSearchField;\r\n\t}\r\n\r\n\tselectedSearchFilterMethod() {\r\n\t\tif ((this.selectedSearchField === 'status' || this.selectedSearchField === 'result') && this.selectedSearchFilter) {\r\n\t\t\tthis.fetchFilteredData();\r\n\t\t}\r\n\t\tif (this.selectedSearchField === 'date' && this.selectedSearchFilterFrom && this.selectedSearchFilterTo) {\r\n\t\t\tthis.fetchFilteredDataWithDate();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedFieldMethod() {\r\n\t\tif (this.selectedOrder) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedOrderMethod() {\r\n\t\tif (this.selectedField) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\topenCreateDialog() {\r\n\t\tconst dialogRef = this.dialog.open(CovidTestCreateComponent, {\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\t\t\tif (data) {\r\n\r\n\t\t\t\tif (data.status == true) {\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\topenDeleteDialog(covidTest: CovidTest) {\r\n\t\tlet dialogRef = this.dialog.open(CovidTestDeleteComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: covidTest\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.uiService.showSnackBar(res.message)\r\n\r\n\t\t\t\tif (res.status == true) {\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\topenInformationDialog(covidTest: CovidTest) {\r\n\t\tthis.dialog.open(CovidTestInformationComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: covidTest\r\n\t\t});\r\n\t}\r\n\r\n\topenEditDialog(covidTest: any) {\r\n\t\tlet dialogRef = this.dialog.open(CovidTestEditComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: covidTest\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\r\n\t\t\t\tif (data.status == true) {\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t}\r\n}\r\n","<div id=\"header\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t<mat-icon>folder_shared</mat-icon>\r\n\t\t\t\tCOVID Tests\r\n\t\t\t</mat-card-title>\r\n\t\t</mat-card-header>\r\n\r\n\t\t<mat-card-actions>\r\n\t\t\t<ng-template [canUse]=\"['--create-all']\">\r\n\t\t\t\t<button mat-button color=\"primary\" (click)=\"openCreateDialog()\">\r\n\t\t\t\t\t<mat-icon>add</mat-icon>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<mat-tab-group>\r\n\t\t<mat-tab label=\"Search\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field id=\"search\">\r\n\t\t\t\t\t<mat-label>Search</mat-label>\r\n\t\t\t\t\t<input matInput class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\"\r\n\t\t\t\t\t\tautocomplete=\"off\" placeholder=\"Insert text to search\">\r\n\t\t\t\t\t<mat-icon matPrefix>search</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Filters\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchField\" (selectionChange)=\"selectedSearchFieldMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\r\n\t\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='status'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of status\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='result'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of results\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='date'\">\r\n\t\t\t\t\t<mat-label>From Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"fromDate\" [(ngModel)]=\"selectedSearchFilterFrom\"\r\n\t\t\t\t\t\t(dateChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"fromDate\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #fromDate></mat-datepicker>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='date'\">\r\n\r\n\t\t\t\t\t<mat-label>To Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"toDate\" [(ngModel)]=\"selectedSearchFilterTo\"\r\n\t\t\t\t\t\t(dateChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"toDate\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #toDate></mat-datepicker>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<button mat-button color=\"accent\" [disabled]=\"!selectedSearchField\" (click)=\"clearFilters()\">\r\n\t\t\t\t\tClear Filters\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Sort\">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedField\" (selectionChange)=\"selectedFieldMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\r\n\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Order</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedOrder\" (selectionChange)=\"selectedOrderMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let order of orders\" [value]=\"order.value\">\r\n\t\t\t\t\t\t{{order.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t</mat-tab>\r\n\t</mat-tab-group>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<div fxFlex=\"0 1 25\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\"\r\n\t\t\t*ngFor=\"let covidTest of result | filter:searchText\" class=\"card-item\">\r\n\t\t\t<mat-card>\r\n\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>perm_identity</mat-icon>\r\n\t\t\t\t\t\t<b>Patient:</b> {{covidTest.patient.name}}\r\n\t\t\t\t\t\t<a (click)=\"openPatientInfoDialog(covidTest.patient)\" id=\"patientInfo\">\r\n\t\t\t\t\t\t\t<mat-icon>visibility</mat-icon>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>healing</mat-icon>\r\n\t\t\t\t\t\t<b>Status:</b> {{covidTest.status  | titlecase}}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>calendar_today</mat-icon>\r\n\t\t\t\t\t\t<b>Date:</b> {{dateFormated(covidTest.date)}}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p *ngIf=\"covidTest.result\">\r\n\t\t\t\t\t\t<mat-icon>description</mat-icon>\r\n\t\t\t\t\t\t<b>Result:</b> {{covidTest.result | titlecase}}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t\t<mat-card-actions>\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openInformationDialog(covidTest)\">\r\n\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(covidTest)\">\r\n\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(covidTest)\">\r\n\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</mat-card>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { TitleService } from '../../services/title/title.service';\r\n\r\n@Component({\r\n\tselector: 'app-dashboard',\r\n\ttemplateUrl: './dashboard.component.html',\r\n\tstyleUrls: ['./dashboard.component.sass']\r\n})\r\nexport class DashboardComponent {\r\n\r\n\r\n\tconstructor(\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle(\"Dashboard\")\r\n\r\n\t\twindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\r\n\t\t\twindow.location.reload()\r\n\t\t});\r\n\t}\r\n}\r\n","<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<ng-template [roleEnable]=\"['Admin', 'Technic']\">\r\n\t\t\t<div fxFlex=\"0 1 40%\" fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card id=\"card-symptoms\">\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of Symptoms\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-symptoms></app-by-symptoms>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 30%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card class=\"card-flex-column\">\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of Status\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-status></app-by-status>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 30%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card class=\"card-flex-column\">\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of Patients by Gender\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-gender></app-by-gender>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</div>\r\n</div>\r\n<div class=\"container mb-40px\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 50%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of tests by month\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-month></app-by-month>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t\t<ng-template [roleEnable]=\"['Admin']\">\r\n\t\t\t<div fxFlex=\"0 1 50%\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\" class=\"card-item\">\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t\tNumber of tests by day\r\n\t\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t\t</mat-card-header>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<app-by-day></app-by-day>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ageToDate } from 'src/app/functions/ageToDate';\r\nimport { formatDate } from '../../functions/formatDate';\r\nimport { PatientsService } from '../../services/patients/patients.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\nimport { PatientAddComponent } from '../../components/dialogs/patients/patient-add/patient-add.component';\r\nimport { PatientDeleteComponent } from '../../components/dialogs/patients/patient-delete/patient-delete.component';\r\nimport { PatientEditComponent } from '../../components/dialogs/patients/patient-edit/patient-edit.component';\r\nimport { PatientInfoComponent } from '../../components/dialogs/patients/patient-info/patient-info.component';\r\nimport { Patient } from '../../models/patient.model';\r\nimport { TitleService } from '../../services/title/title.service';\r\n\r\n@Component({\r\n\tselector: 'app-patients',\r\n\ttemplateUrl: './patients.component.html',\r\n\tstyleUrls: ['./patients.component.sass']\r\n})\r\nexport class PatientsComponent implements OnInit {\r\n\tpublic dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\r\n\tresult: any;\r\n\r\n\tsearchText;\r\n\r\n\tfields: Object[] = [\r\n\t\t{ value: 'name', view: 'Name' },\r\n\t\t{ value: 'birthdayDate', view: 'Birthday Date' },\r\n\t\t{ value: 'status', view: 'Status' },\r\n\t];\r\n\r\n\tfilters: Object[] = [\r\n\t\t{ value: 'age', view: 'Age' },\r\n\t\t{ value: 'status', view: 'Status' },\r\n\t\t{ value: 'gender', view: 'Gender' },\r\n\t];\r\n\r\n\torders: Object[] = [\r\n\t\t{ value: 'asc', view: 'Ascendent' },\r\n\t\t{ value: 'desc', view: 'Descendent' },\r\n\t];\r\n\r\n\tstatus: Object[] = [\r\n\t\t{ value: 'Suspect', view: 'Suspect' },\r\n\t\t{ value: 'Infected', view: 'Infected' },\r\n\t\t{ value: 'Non Infected', view: 'Non Infected' }\r\n\t];\r\n\r\n\tgenders: Object[] = [\r\n\t\t{ value: 'Male', view: 'Male' },\r\n\t\t{ value: 'Female', view: 'Female' }\r\n\t];\r\n\r\n\tselectedField: string;\r\n\tselectedOrder: string;\r\n\tselectedSearchField: string;\r\n\tselectedSearchFilter: string;\r\n\r\n\tselectedSearchFilterFromAge: number;\r\n\tselectedSearchFilterToAge: number;\r\n\r\n\tconstructor(\r\n\t\tpublic patients: PatientsService,\r\n\t\tprivate http: HttpClient,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('Patients')\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\r\n\tfetchData() {\r\n\t\tconst getAll = this.patients.getAll()\r\n\r\n\t\treturn getAll.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchOrderedData() {\r\n\t\tconst getAllWithSort = this.patients.getAllWithSort(this.selectedField, this.selectedOrder);\r\n\r\n\t\treturn getAllWithSort.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredData() {\r\n\t\tconst getAllWithFilter = this.patients.getAllWithFilter(this.selectedSearchField, this.selectedSearchFilter);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tfetchFilteredDataWithDate() {\r\n\t\tconst from = ageToDate(this.selectedSearchFilterFromAge);\r\n\t\tlet to;\r\n\t\tif (this.selectedSearchFilterToAge > 0) {\r\n\t\t\tto = ageToDate(this.selectedSearchFilterToAge);\r\n\t\t}\r\n\t\telse if (this.selectedSearchFilterToAge === 0) {\r\n\t\t\tto = formatDate(new Date());\r\n\t\t}\r\n\r\n\t\tconst getAllWithFilter = this.patients.getAllFilteredWithDate(to, from);\r\n\r\n\t\treturn getAllWithFilter.subscribe((data) => {\r\n\t\t\tthis.result = data;\r\n\t\t});\r\n\t}\r\n\r\n\tselectedSearchFieldMethod() {\r\n\t\treturn this.selectedSearchField;\r\n\t}\r\n\r\n\tselectedSearchFilterMethod() {\r\n\t\tif ((this.selectedSearchField === 'status' || this.selectedSearchField === 'gender') && this.selectedSearchFilter) {\r\n\t\t\tthis.fetchFilteredData();\r\n\t\t}\r\n\r\n\t\tif (this.selectedSearchField === 'age' && this.selectedSearchFilterToAge > -1 && this.selectedSearchFilterToAge != undefined) {\r\n\t\t\tthis.fetchFilteredDataWithDate();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedFieldMethod() {\r\n\t\tif (this.selectedOrder) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\tselectedOrderMethod() {\r\n\t\tif (this.selectedField) {\r\n\t\t\tthis.fetchOrderedData();\r\n\t\t}\r\n\t}\r\n\r\n\tclearFilters() {\r\n\t\tthis.selectedSearchField = undefined\r\n\t\tthis.selectedSearchFilter = undefined\r\n\t\tthis.fetchData()\r\n\t}\r\n\r\n\topenDeleteDialog(patient: Patient) {\r\n\t\tlet dialogRef = this.dialog.open(PatientDeleteComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t\tdata: patient\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.uiService.showSnackBar(res.message)\r\n\r\n\t\t\t\tif (res.status == true)\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\r\n\topenInformationDialog(patient: Patient) {\r\n\r\n\t\tthis.dialog.open(PatientInfoComponent, {\r\n\t\t\tdata: patient,\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\t}\r\n\r\n\topenEditDialog(patient: Patient) {\r\n\r\n\t\tlet dialogRef = this.dialog.open(PatientEditComponent, {\r\n\t\t\tdata: patient,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\r\n\t\t\t\tif (data.status == true)\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\topenCreateDialog() {\r\n\t\tconst dialogRef = this.dialog.open(PatientAddComponent, {\r\n\t\t\twidth: this.dialogSize\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((data) => {\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.uiService.showSnackBar(data.message)\r\n\r\n\t\t\t\tif (data.status == true)\r\n\t\t\t\t\tthis.fetchData()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n","<div id=\"header\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t<mat-icon>folder_shared</mat-icon>\r\n\t\t\t\tPatients\r\n\t\t\t</mat-card-title>\r\n\t\t</mat-card-header>\r\n\r\n\t\t<mat-card-actions>\r\n\t\t\t<ng-template [canUse]=\"['--create-all']\">\r\n\t\t\t\t<button mat-button color=\"primary\" (click)=\"openCreateDialog()\">\r\n\t\t\t\t\t<mat-icon>add</mat-icon>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<mat-tab-group>\r\n\t\t<mat-tab label=\"Search\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field id=\"search\">\r\n\t\t\t\t\t<mat-label>Search</mat-label>\r\n\t\t\t\t\t<input matInput class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchText\"\r\n\t\t\t\t\t\tautocomplete=\"off\" placeholder=\"Insert text to search\">\r\n\t\t\t\t\t<mat-icon matPrefix>search</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Filters\">\r\n\t\t\t<ng-template matTabContent>\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchField\" (selectionChange)=\"selectedSearchFieldMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let field of filters\" [value]=\"field.value\">\r\n\t\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='status'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of status\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='gender'\">\r\n\t\t\t\t\t<mat-label>Filter</mat-label>\r\n\t\t\t\t\t<mat-select [(ngModel)]=\"selectedSearchFilter\" (selectionChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let filter of genders\" [value]=\"filter.value\">\r\n\t\t\t\t\t\t\t{{filter.view}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='age'\">\r\n\t\t\t\t\t<mat-label>Age From</mat-label>\r\n\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Age\" [(ngModel)]=\"selectedSearchFilterFromAge\"\r\n\t\t\t\t\t\t(change)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field *ngIf=\"selectedSearchFieldMethod()==='age'\">\r\n\t\t\t\t\t<mat-label>Age To</mat-label>\r\n\t\t\t\t\t<input matInput type=\"number\" placeholder=\"Age\" [(ngModel)]=\"selectedSearchFilterToAge\"\r\n\t\t\t\t\t\t(ngModelChange)=\"selectedSearchFilterMethod()\">\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<button mat-button color=\"accent\" [disabled]=\"!selectedSearchField\" (click)=\"clearFilters()\">\r\n\t\t\t\t\tClear Filters\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-tab>\r\n\t\t<mat-tab label=\"Sort\">\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Field</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedField\" (selectionChange)=\"selectedFieldMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let field of fields\" [value]=\"field.value\">\r\n\t\t\t\t\t\t{{field.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>Order</mat-label>\r\n\t\t\t\t<mat-select [(ngModel)]=\"selectedOrder\" (selectionChange)=\"selectedOrderMethod()\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let order of orders\" [value]=\"order.value\">\r\n\t\t\t\t\t\t{{order.view}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t</mat-tab>\r\n\t</mat-tab-group>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<div fxFlex=\"0 1 25\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"center\"\r\n\t\t\t*ngFor=\"let patient of result | filter:searchText\" class=\"card-item\">\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t{{ patient.name | titlecase }}\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t<mat-icon>perm_identity</mat-icon>\r\n\t\t\t\t\t\t\tPatient Number:\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t{{ patient.patientNumber }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t<mat-icon>healing</mat-icon>\r\n\t\t\t\t\t\t\tStatus:\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t{{ patient.status }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t\t<mat-card-actions>\r\n\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--view-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openInformationDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--edit-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--delete-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</mat-card>\r\n\t\t\t<!-- <mat-card>\r\n\t\t\t\t<mat-card-actions>\r\n\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--view-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openInformationDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--edit-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--delete-all']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(patient)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t{{patient.name}}\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>healing</mat-icon>\r\n\t\t\t\t\t\t<b>Status: </b>{{ patient.status }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<mat-icon>perm_identity</mat-icon>\r\n\t\t\t\t\t\t<b>Patient number: </b>{{ patient.patientNumber }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card> -->\r\n\t\t</div>\r\n\t\t<!-- <div fxFlex=\"0 1 25%\" class=\"card-item\" (click)=\"openCreateDialog()\">\r\n\t\t\t<mat-card id=\"add-card\">\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"add-btn\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\tAdd Patient\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t</mat-card>\r\n\t\t</div> -->\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UsersService } from '../../services/users/users.service';\r\nimport { SessionService } from '../../auth/session.service';\r\nimport { UserAddComponent } from '../../components/dialogs/users/user-add/user-add.component';\r\nimport { UserDeleteComponent } from '../../components/dialogs/users/user-delete/user-delete.component';\r\nimport { UserEditComponent } from '../../components/dialogs/users/user-edit/user-edit.component';\r\nimport { UserInfoComponent } from '../../components/dialogs/users/user-info/user-info.component';\r\nimport { User } from '../../models/user.model';\r\nimport { TitleService } from '../../services/title/title.service';\r\nimport { UiService } from '../../services/ui/ui.service';\r\n\r\n@Component({\r\n\tselector: 'app-users',\r\n\ttemplateUrl: './users.component.html',\r\n\tstyleUrls: ['./users.component.sass'],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\tpublic dialogSize: string = (window.innerWidth >= 1200) ? '25vw' : (window.innerWidth >= 800) ? '50vw' : '85vw'\r\n\tpublic users;\r\n\tpublic loggedUserEmail: string;\r\n\r\n\tconstructor(\r\n\t\tprivate usersService: UsersService,\r\n\t\tprivate sessionService: SessionService,\r\n\t\tpublic dialog: MatDialog,\r\n\t\tprivate uiService: UiService,\r\n\t\tprivate titleService: TitleService\r\n\t) {\r\n\t\tthis.titleService.setPageTitle('Users')\r\n\t\tthis.loggedUserEmail = this.sessionService.me().user.email;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\tfetchData() {\r\n\t\tconst getAll = this.usersService.getAll();\r\n\r\n\t\treturn getAll.subscribe((data) => {\r\n\t\t\tthis.users = data;\r\n\t\t});\r\n\t}\r\n\r\n\topenEditDialog(user: User) {\r\n\t\tlet dialogRef = this.dialog.open(UserEditComponent, {\r\n\t\t\tdata: user,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tif (result.status == true) {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenDeleteDialog(user: User) {\r\n\t\tlet dialogRef = this.dialog.open(UserDeleteComponent, {\r\n\t\t\tdata: user,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tif (result.status == true) {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\topenInfoDialog(user: User) {\r\n\t\tthis.dialog.open(UserInfoComponent, {\r\n\t\t\tdata: user,\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\t}\r\n\r\n\topenAddDialog() {\r\n\t\tlet dialogRef = this.dialog.open(UserAddComponent, {\r\n\t\t\twidth: this.dialogSize,\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tif (result.status == true) {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t\tthis.fetchData();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.uiService.showSnackBar(result.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<div id=\"header\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<mat-card-title>\r\n\t\t\t\t<mat-icon>supervised_user_circle</mat-icon>\r\n\t\t\t\tUsers\r\n\t\t\t</mat-card-title>\r\n\t\t</mat-card-header>\r\n\t\t<mat-card-actions>\r\n\t\t\t<ng-template [canUse]=\"['--create-all']\">\r\n\t\t\t\t<button mat-button color=\"primary\" (click)=\"openAddDialog()\">\r\n\t\t\t\t\t<mat-icon>person_add</mat-icon>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</ng-template>\r\n\t\t</mat-card-actions>\r\n\t</mat-card>\r\n</div>\r\n\r\n<div class=\"container\">\r\n\t<div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n\t\t<div fxFlex=\"0 1 25\" fxFlex.xs=\"100\" fxFlex.sm=\"0 1 50\" fxLayoutAlign=\"start\" *ngFor=\"let user of users\"\r\n\t\t\tclass=\"card-item\">\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div class=\"top-avatar\"></div>\r\n\t\t\t\t\t<mat-card-title>\r\n\t\t\t\t\t\t{{user.name}}\r\n\t\t\t\t\t</mat-card-title>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t<mat-icon>admin_panel_settings</mat-icon>\r\n\t\t\t\t\t\t\tRole:\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t{{ user.role.name | titlecase }}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<p id=\"warning-text\" class=\"accent-color\" *ngIf=\"loggedUserEmail == user.email\">\r\n\t\t\t\t\t\t<mat-icon>warning</mat-icon>\r\n\t\t\t\t\t\tLogged User!\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t\t<mat-card-actions *ngIf=\"loggedUserEmail != user.email\">\r\n\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<mat-menu #appMenu=\"matMenu\">\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--view-users']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openInfoDialog(user)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>info</mat-icon>\r\n\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--edit-users']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openEditDialog(user)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template [canUse]=\"['--delete-users']\">\r\n\t\t\t\t\t\t\t<button mat-menu-item (click)=\"openDeleteDialog(user)\">\r\n\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</mat-card>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CovidApiService {\r\n\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tgetSummary() {\r\n\t\tconst result = this.http.get(`http://localhost:3000/api/api-covid/`);\r\n\t\treturn result\r\n\t}\r\n\r\n\tgetPortugalSummary(data) {\r\n\t\tlet Portugal;\r\n\t\tdata[0].Countries.forEach(element => {\r\n\t\t\tif (element.Country == \"Portugal\") {\r\n\t\t\t\tPortugal = element;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn Portugal;\r\n\t}\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { CovidTest } from \"../../models/covid-test.model\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CovidTestService {\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tcreate(covidTest: CovidTest) {\r\n\t\treturn this.http.post(`${API_URL}/covid-tests/`, covidTest, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetAll() {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetById(id: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/${id}`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetOneAndUpdate(id: string, body) {\r\n\t\treturn this.http.put(`${API_URL}/covid-tests/${id}`, body).pipe(share());\r\n\t}\r\n\r\n\tgetOneAndDelete(id: string) {\r\n\t\treturn this.http.delete(`${API_URL}/covid-tests/${id}`, httpOptions).pipe(share());\r\n\t}\r\n\tgetByPatient(patientId: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/patient/${patientId}`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetAllWithSort(field: string, order: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/?sort=${field},${order}`, httpOptions);\r\n\t}\r\n\r\n\tgetAllWithFilter(field: string, filter: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/?${field}=${filter}`, httpOptions);\r\n\t}\r\n\r\n\tgetAllFilteredWithDate(field: string, from: string, to: string) {\r\n\t\treturn this.http.get(`${API_URL}/covid-tests/?${field}=${from},${to}`, httpOptions);\r\n\t}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Patient } from '../../models/patient.model';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n    }),\r\n    withCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PatientsService {\r\n    constructor(public http: HttpClient) { }\r\n\r\n    create(patient: Patient): Observable<any> {\r\n        return this.http\r\n            .post(`${API_URL}/patients/`, patient, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getAll(): Observable<any> {\r\n        return this.http.get(`${API_URL}/patients/`, httpOptions).pipe(share());\r\n    }\r\n\r\n    getAllWithSort(field: string, order: string) {\r\n        return this.http.get(`${API_URL}/patients/?sort=${field},${order}`, httpOptions);\r\n    }\r\n\r\n    getAllWithFilter(field: string, filter: string) {\r\n        return this.http.get(`${API_URL}/patients/?${field}=${filter}`, httpOptions);\r\n    }\r\n\r\n    getAllFilteredWithDate(from: string, to: string) {\r\n        return this.http.get(`${API_URL}/patients/?birthdayDate=${from},${to}`, httpOptions);\r\n    }\r\n\r\n    getById(id: string): Observable<any> {\r\n        return this.http\r\n            .get(`${API_URL}/patients/${id}`, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getOneAndUpdate(id: string, patient: Patient): Observable<any> {\r\n        return this.http\r\n            .put(`${API_URL}/patients/${id}`, patient, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getOneAndDelete(id: string): Observable<any> {\r\n        return this.http\r\n            .delete(`${API_URL}/patients/${id}`, httpOptions)\r\n            .pipe(share());\r\n    }\r\n\r\n    getDataByEmail(\r\n        email: string,\r\n        phoneNumber: number,\r\n        patientNumber: number\r\n    ): Observable<any> {\r\n        return this.http\r\n            .post(\r\n                `${API_URL}/patients/get-data`,\r\n                { email, phoneNumber, patientNumber },\r\n                httpOptions\r\n            )\r\n            .pipe(share());\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RolesService {\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tgetAll(): Observable<any> {\r\n\r\n\t\tconst request = this.http\r\n\t\t\t.get(`${API_URL}/roles/`, httpOptions)\r\n\t\t\t.pipe(share());\r\n\r\n\t\treturn request\r\n\t}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class SummaryService {\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\r\n\tgetByStatus(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/patients/status`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetByDay(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/tests/day`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetBySymptoms(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/patients/symptoms`, httpOptions).pipe(share());\r\n\t}\r\n\r\n\tgetByGender(): Observable<any> {\r\n\t\treturn this.http.get(`${API_URL}/summary/patients/gender`, httpOptions).pipe(share());\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class TitleService {\r\n\tprivate baseTitle = environment.baseTitle || 'COVID Tracking System';\r\n\tprivate divider = '|';\r\n\r\n\tconstructor(private titleService: Title) { }\r\n\r\n\tsetPageTitle(page?: string) {\r\n\t\tthis.titleService.setTitle(`${page ? `${page} ${this.divider}` : ''} ${this.baseTitle}`);\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UiService {\r\n\r\n\tconstructor(public snackBar: MatSnackBar) { }\r\n\r\n\tshowSnackBar(message, button = 'OK', duration = 3000) {\r\n\t\treturn this.snackBar.open(message, button, { duration: duration })\r\n\t}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { User } from '../../models/user.model';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({\r\n\t\t'Content-Type': 'application/json'\r\n\t}),\r\n\twithCredentials: true,\r\n};\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n\tconstructor(public http: HttpClient) { }\r\n\r\n\tgetAll() {\r\n\t\treturn this.http\r\n\t\t\t.get(`${API_URL}/users/`, httpOptions)\r\n\t\t\t.pipe(share());\r\n\t}\r\n\r\n\tgetOneAndUpdate(id: string, user: User): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.put(`${API_URL}/users/${id}`, user, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n\r\n\tgetOneAndDelete(id: string): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.delete(`${API_URL}/users/${id}`, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n\r\n\tnew(body: object): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.post(`${API_URL}/users/`, body, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n\r\n\tupdatePassword(body: object): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.post(`${API_URL}/users/update-password`, body, httpOptions)\r\n\t\t\t.pipe(share())\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\tproduction: false,\r\n\tapiUrl: '/api',\r\n\tbaseTitle: 'COVID Tracking System',\r\n\tcovidAPI: 'https://api.covid19api.com'\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}